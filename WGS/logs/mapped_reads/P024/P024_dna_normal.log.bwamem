Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000058 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517285, 9, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 551, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4517)
[0000][PE] mean and std.dev: (995.27, 1005.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.31, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1118, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (1318.18, 764.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 415.565 CPU sec, 25.961 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 516867, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 704, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3084)
[0000][PE] mean and std.dev: (734.21, 511.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.83, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1586, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4927)
[0000][PE] mean and std.dev: (1794.37, 1056.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 415.241 CPU sec, 24.085 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516898, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 633, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3092)
[0000][PE] mean and std.dev: (698.71, 614.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.40, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1564, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4228)
[0000][PE] mean and std.dev: (1399.17, 711.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 408.520 CPU sec, 23.552 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517486, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 650, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2765)
[0000][PE] mean and std.dev: (717.48, 575.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1467, 2546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5894)
[0000][PE] mean and std.dev: (1553.71, 855.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 408.475 CPU sec, 23.447 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517476, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 570, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4110)
[0000][PE] mean and std.dev: (835.77, 714.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1244, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (1288.96, 822.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 412.624 CPU sec, 24.165 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516653, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 430, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (874.97, 795.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1107, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4085)
[0000][PE] mean and std.dev: (1279.60, 785.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 414.482 CPU sec, 23.915 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517329, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 1070, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (1138.89, 851.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.62, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1350, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (1291.21, 586.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 410.212 CPU sec, 23.574 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517453, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 465, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3235)
[0000][PE] mean and std.dev: (643.33, 571.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1485, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4977)
[0000][PE] mean and std.dev: (1500.00, 830.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 407.482 CPU sec, 23.710 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 516802, 8, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 520, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2366)
[0000][PE] mean and std.dev: (618.83, 485.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.39, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1280, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4322)
[0000][PE] mean and std.dev: (1242.92, 598.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 415.185 CPU sec, 23.879 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517203, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 778, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4409)
[0000][PE] mean and std.dev: (1144.29, 962.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.23, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1395, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3316)
[0000][PE] mean and std.dev: (1257.52, 539.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 409.620 CPU sec, 23.600 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517182, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 466, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2806)
[0000][PE] mean and std.dev: (690.53, 685.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.15, 119.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1376, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3836)
[0000][PE] mean and std.dev: (1484.04, 767.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 410.864 CPU sec, 23.678 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516855, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 413, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3226)
[0000][PE] mean and std.dev: (655.61, 600.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.24, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1190, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4712)
[0000][PE] mean and std.dev: (1432.44, 1017.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 410.782 CPU sec, 23.925 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516986, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 562, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3762)
[0000][PE] mean and std.dev: (924.49, 853.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.12, 119.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1490, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (1473.39, 768.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 408.532 CPU sec, 23.908 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516878, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 653, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3459)
[0000][PE] mean and std.dev: (826.20, 767.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.01, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1750, 3153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7459)
[0000][PE] mean and std.dev: (2211.04, 1655.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 408.625 CPU sec, 23.767 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517284, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 656, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4540)
[0000][PE] mean and std.dev: (1041.33, 941.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.52, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1589, 2539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5271)
[0000][PE] mean and std.dev: (1854.00, 1061.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 411.553 CPU sec, 23.710 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516999, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 565, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4327)
[0000][PE] mean and std.dev: (934.56, 998.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1501, 2830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6458)
[0000][PE] mean and std.dev: (1927.95, 1376.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 410.679 CPU sec, 23.447 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517367, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 780, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (899.75, 727.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1533, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4620)
[0000][PE] mean and std.dev: (1574.52, 925.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 410.604 CPU sec, 23.701 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516789, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 359, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (781.66, 760.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.29, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1383, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (1221.10, 587.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 411.513 CPU sec, 23.646 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516864, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 519, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (820.57, 734.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (513, 1166, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3684)
[0000][PE] mean and std.dev: (1130.27, 638.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 409.975 CPU sec, 23.827 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517343, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 511, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4536)
[0000][PE] mean and std.dev: (799.23, 733.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1224, 1469, 3232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7248)
[0000][PE] mean and std.dev: (2136.00, 1600.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 411.739 CPU sec, 23.686 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517349, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 630, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3611)
[0000][PE] mean and std.dev: (819.74, 732.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.35, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1434, 2387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5211)
[0000][PE] mean and std.dev: (1517.78, 1012.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 409.316 CPU sec, 23.519 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517299, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 664, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3460)
[0000][PE] mean and std.dev: (1046.00, 872.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.21, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1326, 3073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7303)
[0000][PE] mean and std.dev: (1813.68, 1389.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 409.938 CPU sec, 23.917 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517141, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 1140, 2822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7632)
[0000][PE] mean and std.dev: (1727.52, 1908.87)
[0000][PE] low and high boundaries for proper pairs: (1, 10037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1172, 1412, 2687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5717)
[0000][PE] mean and std.dev: (1841.31, 1053.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 411.257 CPU sec, 24.106 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517281, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 1184, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5434)
[0000][PE] mean and std.dev: (1154.03, 980.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.16, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1245, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5222)
[0000][PE] mean and std.dev: (1529.28, 1092.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 412.302 CPU sec, 24.006 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517148, 8, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 505, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (860.11, 811.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.29, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1641, 2387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5067)
[0000][PE] mean and std.dev: (1785.70, 877.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 410.631 CPU sec, 23.480 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517907, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 362, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4497)
[0000][PE] mean and std.dev: (814.16, 915.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.36, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1279, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5134)
[0000][PE] mean and std.dev: (1710.50, 1155.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 407.342 CPU sec, 23.387 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517131, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 955, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4786)
[0000][PE] mean and std.dev: (1043.74, 830.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1292, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4203)
[0000][PE] mean and std.dev: (1505.60, 815.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 409.374 CPU sec, 23.511 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517762, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 449, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2731)
[0000][PE] mean and std.dev: (709.73, 603.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.60, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1385, 2707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6451)
[0000][PE] mean and std.dev: (1673.86, 1319.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 407.890 CPU sec, 23.535 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517145, 2, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 607, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2567)
[0000][PE] mean and std.dev: (649.41, 468.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.30, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1412, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6196)
[0000][PE] mean and std.dev: (1476.23, 1022.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 413.537 CPU sec, 23.652 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516974, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 682, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (871.67, 743.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.50, 120.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1146, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6211)
[0000][PE] mean and std.dev: (1805.38, 1476.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 412.279 CPU sec, 23.692 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516580, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 853, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5027)
[0000][PE] mean and std.dev: (1122.15, 1026.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1315, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (1370.13, 537.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 419.961 CPU sec, 24.398 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517462, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 819, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3736)
[0000][PE] mean and std.dev: (1041.62, 846.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.02, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1564, 2861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6755)
[0000][PE] mean and std.dev: (1674.48, 1139.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 409.431 CPU sec, 23.785 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517363, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 843, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3015)
[0000][PE] mean and std.dev: (791.00, 543.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.89, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1166, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (1199.45, 698.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 409.976 CPU sec, 23.663 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517223, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 860, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (983.38, 895.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (494.96, 119.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1312, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6411)
[0000][PE] mean and std.dev: (1778.65, 1352.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 411.564 CPU sec, 23.645 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517022, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 462, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3936)
[0000][PE] mean and std.dev: (781.03, 859.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.18, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1284, 1870, 3196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7020)
[0000][PE] mean and std.dev: (2137.83, 1297.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 415.910 CPU sec, 24.317 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517734, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 458, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2889)
[0000][PE] mean and std.dev: (686.55, 599.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.94, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1659, 3450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9100)
[0000][PE] mean and std.dev: (2223.23, 2036.04)
[0000][PE] low and high boundaries for proper pairs: (1, 11925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 414.541 CPU sec, 23.755 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517562, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 717, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2981)
[0000][PE] mean and std.dev: (793.57, 662.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.14, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1318, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (1121.87, 519.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 415.597 CPU sec, 24.023 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517427, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 569, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3908)
[0000][PE] mean and std.dev: (798.77, 736.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1138, 1467, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5266)
[0000][PE] mean and std.dev: (1914.96, 1103.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 415.274 CPU sec, 23.938 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517040, 2, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 864, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3314)
[0000][PE] mean and std.dev: (951.41, 673.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.28, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1632, 2668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5656)
[0000][PE] mean and std.dev: (1939.88, 1109.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 418.381 CPU sec, 24.368 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516563, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 833, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4059)
[0000][PE] mean and std.dev: (980.75, 846.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.57, 120.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1424, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3487)
[0000][PE] mean and std.dev: (1343.15, 653.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 414.629 CPU sec, 24.626 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517145, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 401, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2457)
[0000][PE] mean and std.dev: (633.27, 531.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1200, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3894)
[0000][PE] mean and std.dev: (1520.67, 865.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 412.069 CPU sec, 23.665 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516884, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1035, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5124)
[0000][PE] mean and std.dev: (1163.63, 1051.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1677, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4012)
[0000][PE] mean and std.dev: (1590.48, 645.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 412.105 CPU sec, 23.735 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 516997, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 390, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3254)
[0000][PE] mean and std.dev: (689.88, 632.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.23, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1375, 3376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8154)
[0000][PE] mean and std.dev: (2067.41, 1516.30)
[0000][PE] low and high boundaries for proper pairs: (1, 10543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 414.602 CPU sec, 23.760 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517257, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 396, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2396)
[0000][PE] mean and std.dev: (507.57, 416.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1150, 3003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7059)
[0000][PE] mean and std.dev: (1536.32, 1280.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 410.369 CPU sec, 23.427 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517280, 8, 38)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 1156, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5719)
[0000][PE] mean and std.dev: (1457.31, 1463.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (494.92, 119.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1669, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (1517.03, 776.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 409.573 CPU sec, 23.458 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205304
	[0000][ M::kt_pipeline] read 1205304 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517140, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 827, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5268)
[0000][PE] mean and std.dev: (1108.32, 1056.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.17, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1110, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3703)
[0000][PE] mean and std.dev: (1400.62, 992.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 414.670 CPU sec, 25.312 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517314, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 396, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (655.06, 584.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1652, 2374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5644)
[0000][PE] mean and std.dev: (1662.29, 1216.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205304 reads in 414.030 CPU sec, 23.839 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517019, 5, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 852, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3968)
[0000][PE] mean and std.dev: (960.33, 773.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1326, 2750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6738)
[0000][PE] mean and std.dev: (1723.00, 1240.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 414.086 CPU sec, 23.449 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517563, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 384, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2152)
[0000][PE] mean and std.dev: (545.81, 491.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.27, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1244, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (1395.59, 674.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 411.389 CPU sec, 23.029 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516621, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 661, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4165)
[0000][PE] mean and std.dev: (957.48, 838.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.14, 119.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1281, 1878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3334)
[0000][PE] mean and std.dev: (1398.43, 761.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 410.863 CPU sec, 23.045 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517532, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 835, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2935)
[0000][PE] mean and std.dev: (868.93, 587.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1242, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (1275.24, 480.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 408.529 CPU sec, 22.865 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517502, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (455, 966, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4010)
[0000][PE] mean and std.dev: (1038.05, 812.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.32, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1138, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4213)
[0000][PE] mean and std.dev: (1323.74, 589.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 410.951 CPU sec, 22.989 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517153, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 864, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4538)
[0000][PE] mean and std.dev: (1123.51, 1044.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.44, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1476, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4670)
[0000][PE] mean and std.dev: (1401.95, 934.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 411.831 CPU sec, 23.085 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517312, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 505, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4746)
[0000][PE] mean and std.dev: (1084.65, 1224.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1156, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3941)
[0000][PE] mean and std.dev: (1327.19, 788.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 412.127 CPU sec, 23.088 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517239, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 628, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3724)
[0000][PE] mean and std.dev: (923.29, 798.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1446, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (1440.69, 599.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 409.824 CPU sec, 22.954 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517549, 12, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 730, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3341)
[0000][PE] mean and std.dev: (858.57, 675.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.17, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (782, 1542, 6051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16589)
[0000][PE] mean and std.dev: (2942.75, 2899.82)
[0000][PE] low and high boundaries for proper pairs: (1, 21858)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1388, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4834)
[0000][PE] mean and std.dev: (1523.83, 840.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 411.456 CPU sec, 23.088 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205304
	[0000][ M::kt_pipeline] read 1205304 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517245, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 905, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5426)
[0000][PE] mean and std.dev: (1282.27, 1223.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.16, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1162, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3027)
[0000][PE] mean and std.dev: (1259.00, 629.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 407.703 CPU sec, 22.845 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516933, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 518, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4730)
[0000][PE] mean and std.dev: (951.20, 874.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1092, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3596)
[0000][PE] mean and std.dev: (1249.94, 729.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205304 reads in 409.775 CPU sec, 23.025 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517178, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 411, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3112)
[0000][PE] mean and std.dev: (715.52, 714.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.38, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1706, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5103)
[0000][PE] mean and std.dev: (1788.44, 997.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 410.071 CPU sec, 22.941 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517004, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 488, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (808.56, 681.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.14, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1246, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3470)
[0000][PE] mean and std.dev: (1181.50, 553.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 410.696 CPU sec, 23.046 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517243, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 663, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2874)
[0000][PE] mean and std.dev: (685.70, 437.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.10, 119.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1354, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5454)
[0000][PE] mean and std.dev: (1696.25, 1144.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 415.685 CPU sec, 23.357 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517531, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 602, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3193)
[0000][PE] mean and std.dev: (795.32, 726.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.32, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1694, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4346)
[0000][PE] mean and std.dev: (1523.42, 776.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 410.489 CPU sec, 23.066 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517053, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 493, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2810)
[0000][PE] mean and std.dev: (685.28, 590.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1268, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3405)
[0000][PE] mean and std.dev: (1285.18, 660.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 411.875 CPU sec, 23.188 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517193, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 692, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3845)
[0000][PE] mean and std.dev: (917.89, 888.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1568, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6156)
[0000][PE] mean and std.dev: (1932.80, 1349.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 411.808 CPU sec, 23.119 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 516905, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 630, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4167)
[0000][PE] mean and std.dev: (949.71, 872.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1327, 1527, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (69, 3214)
[0000][PE] mean and std.dev: (1526.83, 603.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 411.156 CPU sec, 23.061 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 516834, 5, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 480, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (839.07, 847.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.67, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1332, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4963)
[0000][PE] mean and std.dev: (1333.54, 817.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 415.734 CPU sec, 23.292 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516680, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 625, 1000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2218)
[0000][PE] mean and std.dev: (686.10, 451.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.30, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1174, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5574)
[0000][PE] mean and std.dev: (1663.90, 1076.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 410.279 CPU sec, 22.963 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517261, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 446, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (698.95, 632.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.26, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1437, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3659)
[0000][PE] mean and std.dev: (1197.06, 600.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 407.265 CPU sec, 22.769 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517668, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 382, 629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1515)
[0000][PE] mean and std.dev: (340.18, 199.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.42, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1232, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3691)
[0000][PE] mean and std.dev: (1231.50, 561.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 411.912 CPU sec, 23.092 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517361, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 528, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2933)
[0000][PE] mean and std.dev: (788.00, 718.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.41, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1418, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3269)
[0000][PE] mean and std.dev: (1186.20, 526.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 415.345 CPU sec, 23.358 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 517296, 10, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 929, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5102)
[0000][PE] mean and std.dev: (1130.56, 1144.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.28, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (214, 850, 3394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9754)
[0000][PE] mean and std.dev: (2129.60, 2777.59)
[0000][PE] low and high boundaries for proper pairs: (1, 13240)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1426, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3809)
[0000][PE] mean and std.dev: (1311.39, 477.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 409.241 CPU sec, 22.934 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517387, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 511, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (787.49, 732.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.33, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1626, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5016)
[0000][PE] mean and std.dev: (1847.40, 1098.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 408.915 CPU sec, 22.859 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517115, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 368, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2743)
[0000][PE] mean and std.dev: (620.74, 567.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.04, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 1333, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5314)
[0000][PE] mean and std.dev: (1459.96, 1039.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 411.768 CPU sec, 23.100 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517267, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 388, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2434)
[0000][PE] mean and std.dev: (711.03, 659.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.32, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1218, 1775, 2544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (1816.09, 1002.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 410.875 CPU sec, 23.046 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517022, 4, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 724, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (1025.56, 840.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.92, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1390, 2791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6501)
[0000][PE] mean and std.dev: (1790.22, 1233.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 412.835 CPU sec, 23.101 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517179, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 494, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4886)
[0000][PE] mean and std.dev: (973.77, 1074.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1174, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5109)
[0000][PE] mean and std.dev: (1375.52, 761.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 412.346 CPU sec, 23.181 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 517162, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 601, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4100)
[0000][PE] mean and std.dev: (1020.63, 924.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.36, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1320, 1608, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (1666.48, 539.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4416)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 412.928 CPU sec, 23.218 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517342, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 465, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3439)
[0000][PE] mean and std.dev: (727.93, 779.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (698, 1556, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4499)
[0000][PE] mean and std.dev: (1603.17, 1157.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 408.109 CPU sec, 22.817 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516381, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (529, 885, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2704)
[0000][PE] mean and std.dev: (904.64, 582.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.31, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 1409, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (1387.94, 566.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 416.682 CPU sec, 23.417 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517455, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 806, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (995.12, 814.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.33, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1424, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4155)
[0000][PE] mean and std.dev: (1208.46, 503.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 413.767 CPU sec, 23.180 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517281, 5, 39)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 696, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3484)
[0000][PE] mean and std.dev: (843.97, 748.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1285, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4389)
[0000][PE] mean and std.dev: (1319.77, 911.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 410.999 CPU sec, 23.195 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517392, 2, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 687, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3592)
[0000][PE] mean and std.dev: (938.61, 839.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1485, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (1453.84, 636.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 407.799 CPU sec, 22.838 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517277, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 621, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3283)
[0000][PE] mean and std.dev: (817.70, 672.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.17, 119.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1165, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2410)
[0000][PE] mean and std.dev: (1052.26, 368.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 414.494 CPU sec, 23.210 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517414, 4, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 471, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (713.27, 517.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1506, 2599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5477)
[0000][PE] mean and std.dev: (1734.63, 972.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 411.413 CPU sec, 23.043 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517174, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 751, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3485)
[0000][PE] mean and std.dev: (908.75, 770.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.29, 119.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1270, 2452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5682)
[0000][PE] mean and std.dev: (1886.75, 1535.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 416.057 CPU sec, 23.403 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517080, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 508, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (877.37, 870.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.23, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1346, 2169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4281)
[0000][PE] mean and std.dev: (1608.67, 886.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 415.234 CPU sec, 23.270 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517185, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 644, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4492)
[0000][PE] mean and std.dev: (1034.10, 1012.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1219, 1554, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3625)
[0000][PE] mean and std.dev: (1457.64, 711.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 414.000 CPU sec, 23.199 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516976, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 504, 868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2120)
[0000][PE] mean and std.dev: (492.74, 344.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1271, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3030)
[0000][PE] mean and std.dev: (1280.77, 623.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 412.794 CPU sec, 23.100 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517188, 0, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 862, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4996)
[0000][PE] mean and std.dev: (1266.68, 1278.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1630, 2253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (1612.97, 887.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 417.667 CPU sec, 23.480 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517309, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 1091, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4323)
[0000][PE] mean and std.dev: (1257.44, 1041.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.23, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1507, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4484)
[0000][PE] mean and std.dev: (1484.74, 892.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 410.326 CPU sec, 22.997 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 517057, 9, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 491, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2881)
[0000][PE] mean and std.dev: (720.14, 585.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.47, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1437, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5084)
[0000][PE] mean and std.dev: (1635.93, 1089.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 412.232 CPU sec, 23.164 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517050, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 786, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2587)
[0000][PE] mean and std.dev: (747.28, 448.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.38, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1358, 1700, 2577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5015)
[0000][PE] mean and std.dev: (1843.43, 890.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 414.396 CPU sec, 23.207 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517650, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 1112, 2390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6570)
[0000][PE] mean and std.dev: (1299.62, 1143.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.23, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1487, 2574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6010)
[0000][PE] mean and std.dev: (1544.29, 901.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 413.851 CPU sec, 23.136 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516913, 6, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 490, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2869)
[0000][PE] mean and std.dev: (749.97, 702.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.38, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1320, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4989)
[0000][PE] mean and std.dev: (1486.71, 950.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 416.201 CPU sec, 23.304 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516919, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 826, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3394)
[0000][PE] mean and std.dev: (1071.90, 947.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.99, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1213, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3139)
[0000][PE] mean and std.dev: (1263.67, 625.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 413.213 CPU sec, 23.153 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517367, 10, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 919, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3133)
[0000][PE] mean and std.dev: (966.41, 638.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (830, 1294, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2504)
[0000][PE] mean and std.dev: (995.50, 312.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3062)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1471, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3518)
[0000][PE] mean and std.dev: (1359.55, 688.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 413.908 CPU sec, 23.208 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517321, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 498, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (759.81, 630.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.41, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1306, 2799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6561)
[0000][PE] mean and std.dev: (1681.83, 1054.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 415.618 CPU sec, 23.321 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517200, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 603, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4110)
[0000][PE] mean and std.dev: (757.65, 633.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.31, 119.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1320, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3912)
[0000][PE] mean and std.dev: (1455.16, 887.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 416.969 CPU sec, 23.475 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517313, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 621, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (810.69, 710.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.94, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1624, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3568)
[0000][PE] mean and std.dev: (1408.12, 800.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 411.169 CPU sec, 23.019 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517065, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 645, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2651)
[0000][PE] mean and std.dev: (795.95, 645.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.27, 119.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1432, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4631)
[0000][PE] mean and std.dev: (1486.37, 781.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 415.573 CPU sec, 23.236 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516887, 1, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (581, 1223, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (1329.82, 1026.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.41, 120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1448, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (1472.59, 785.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 419.581 CPU sec, 23.617 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517056, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 501, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (852.17, 763.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.13, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1310, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (1273.45, 561.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 412.844 CPU sec, 23.091 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517168, 8, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 852, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3114)
[0000][PE] mean and std.dev: (793.81, 562.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1108, 2725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6569)
[0000][PE] mean and std.dev: (1663.79, 1191.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 408.136 CPU sec, 22.823 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517415, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 681, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4420)
[0000][PE] mean and std.dev: (876.26, 852.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.28, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1481, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4755)
[0000][PE] mean and std.dev: (1343.41, 772.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 412.623 CPU sec, 23.106 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 516689, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 660, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4151)
[0000][PE] mean and std.dev: (878.48, 889.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1312, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5162)
[0000][PE] mean and std.dev: (1541.04, 954.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 412.918 CPU sec, 23.094 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 516873, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 616, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4778)
[0000][PE] mean and std.dev: (935.71, 838.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1275, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4755)
[0000][PE] mean and std.dev: (1639.38, 1006.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 416.069 CPU sec, 23.338 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517324, 11, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 434, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2881)
[0000][PE] mean and std.dev: (643.15, 496.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.15, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (791, 1793, 7307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20339)
[0000][PE] mean and std.dev: (3230.27, 3333.86)
[0000][PE] low and high boundaries for proper pairs: (1, 26855)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1364, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4621)
[0000][PE] mean and std.dev: (1440.30, 676.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 413.705 CPU sec, 23.218 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517459, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 834, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4031)
[0000][PE] mean and std.dev: (798.03, 627.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.35, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1427, 1940, 2700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5246)
[0000][PE] mean and std.dev: (2002.30, 1118.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 415.041 CPU sec, 23.281 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517220, 6, 39)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 1001, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5973)
[0000][PE] mean and std.dev: (1480.22, 1458.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.99, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1363, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5357)
[0000][PE] mean and std.dev: (1615.29, 1078.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 413.905 CPU sec, 23.143 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517348, 8, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 484, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (882.54, 868.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.15, 119.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1438, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5052)
[0000][PE] mean and std.dev: (1732.50, 833.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 413.538 CPU sec, 23.131 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517208, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 433, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (844.32, 907.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1671, 3535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8619)
[0000][PE] mean and std.dev: (2094.29, 1760.26)
[0000][PE] low and high boundaries for proper pairs: (1, 11161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 411.211 CPU sec, 23.088 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517389, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 798, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3492)
[0000][PE] mean and std.dev: (860.06, 727.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1565, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4455)
[0000][PE] mean and std.dev: (1495.00, 757.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 409.989 CPU sec, 22.928 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517494, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 1003, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4465)
[0000][PE] mean and std.dev: (1183.71, 1244.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.38, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1435, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (1488.63, 742.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 411.667 CPU sec, 23.044 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517475, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 1068, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4671)
[0000][PE] mean and std.dev: (1217.85, 1121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.33, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1472, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4708)
[0000][PE] mean and std.dev: (1632.30, 981.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 412.540 CPU sec, 23.167 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517078, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 398, 688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1536)
[0000][PE] mean and std.dev: (395.86, 233.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.96, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1395, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3173)
[0000][PE] mean and std.dev: (1427.62, 585.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 410.474 CPU sec, 22.988 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517104, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 614, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (767.21, 749.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.27, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1516, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5877)
[0000][PE] mean and std.dev: (1661.37, 1104.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 415.132 CPU sec, 23.222 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517048, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 619, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5236)
[0000][PE] mean and std.dev: (1002.29, 987.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.21, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1290, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (1283.95, 526.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 413.338 CPU sec, 23.198 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516790, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 862, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4419)
[0000][PE] mean and std.dev: (995.57, 895.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.31, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1211, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3361)
[0000][PE] mean and std.dev: (1315.68, 559.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 414.165 CPU sec, 23.188 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517160, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 599, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2966)
[0000][PE] mean and std.dev: (672.17, 502.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1685, 3314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8084)
[0000][PE] mean and std.dev: (1908.38, 1363.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 408.208 CPU sec, 22.856 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 516995, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 612, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3407)
[0000][PE] mean and std.dev: (846.25, 724.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1284, 2555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5937)
[0000][PE] mean and std.dev: (1651.19, 1121.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 412.092 CPU sec, 23.036 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517550, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 1124, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5051)
[0000][PE] mean and std.dev: (1243.56, 1144.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.40, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1115, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3948)
[0000][PE] mean and std.dev: (1337.47, 605.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 409.246 CPU sec, 22.883 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517095, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 431, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (646.38, 570.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1330, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3448)
[0000][PE] mean and std.dev: (1440.48, 646.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 412.977 CPU sec, 23.136 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517640, 9, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 1173, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4462)
[0000][PE] mean and std.dev: (976.03, 729.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.26, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1296, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (1287.73, 561.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 410.869 CPU sec, 22.968 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517006, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 1012, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1151.08, 799.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.32, 119.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1239, 1450, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4491)
[0000][PE] mean and std.dev: (1754.92, 874.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 409.878 CPU sec, 22.950 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516968, 9, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 617, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4433)
[0000][PE] mean and std.dev: (1002.43, 995.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1227, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (1396.58, 681.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 416.151 CPU sec, 23.319 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517420, 3, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 452, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (712.14, 679.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1166, 2474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5752)
[0000][PE] mean and std.dev: (1559.59, 1126.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 410.444 CPU sec, 22.942 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517038, 8, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 434, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3082)
[0000][PE] mean and std.dev: (709.07, 623.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1153, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3858)
[0000][PE] mean and std.dev: (1340.16, 733.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 413.751 CPU sec, 23.155 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517040, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 393, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3079)
[0000][PE] mean and std.dev: (740.73, 779.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.38, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1675, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4956)
[0000][PE] mean and std.dev: (1646.84, 832.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 413.487 CPU sec, 23.165 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517256, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 537, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (739.19, 601.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.43, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1397, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3646)
[0000][PE] mean and std.dev: (1390.16, 661.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 410.595 CPU sec, 23.032 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517223, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 382, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3669)
[0000][PE] mean and std.dev: (894.89, 806.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.30, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1323, 1541, 2482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4800)
[0000][PE] mean and std.dev: (1634.12, 889.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 409.106 CPU sec, 22.906 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 516844, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 817, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3235)
[0000][PE] mean and std.dev: (826.33, 664.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.45, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1147, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4883)
[0000][PE] mean and std.dev: (1426.93, 809.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 414.922 CPU sec, 23.249 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517445, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 601, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4025)
[0000][PE] mean and std.dev: (778.35, 724.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.25, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1638, 2771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6613)
[0000][PE] mean and std.dev: (1653.91, 1300.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 408.043 CPU sec, 22.831 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516588, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 785, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (801.15, 664.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.17, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1468, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4365)
[0000][PE] mean and std.dev: (1562.28, 816.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 412.297 CPU sec, 23.046 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517411, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 598, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3734)
[0000][PE] mean and std.dev: (957.26, 951.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.21, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1531, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3917)
[0000][PE] mean and std.dev: (1449.77, 693.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 410.664 CPU sec, 22.988 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517152, 9, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 832, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4679)
[0000][PE] mean and std.dev: (950.08, 700.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.25, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1330, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5199)
[0000][PE] mean and std.dev: (1514.00, 1042.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 411.980 CPU sec, 23.113 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517405, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 752, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (943.97, 874.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1579, 2695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6499)
[0000][PE] mean and std.dev: (1871.38, 1507.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 409.067 CPU sec, 22.917 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517587, 3, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 503, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2885)
[0000][PE] mean and std.dev: (679.70, 593.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.39, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1312, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4808)
[0000][PE] mean and std.dev: (1534.30, 893.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 413.848 CPU sec, 23.304 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517130, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 485, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3260)
[0000][PE] mean and std.dev: (721.88, 654.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.23, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1370, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5605)
[0000][PE] mean and std.dev: (1535.54, 1061.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 411.942 CPU sec, 23.044 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517477, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 718, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3687)
[0000][PE] mean and std.dev: (831.19, 725.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1312, 2888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6424)
[0000][PE] mean and std.dev: (1887.80, 1406.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 412.535 CPU sec, 23.099 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517307, 4, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 853, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6526)
[0000][PE] mean and std.dev: (1393.79, 1360.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.28, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1244, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3047)
[0000][PE] mean and std.dev: (1224.43, 512.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 411.585 CPU sec, 23.062 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 517378, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 540, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3069)
[0000][PE] mean and std.dev: (717.76, 627.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1263, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (1026.55, 507.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 407.272 CPU sec, 22.836 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516956, 5, 38)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 391, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2946)
[0000][PE] mean and std.dev: (569.44, 597.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.13, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1428, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (1365.16, 702.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 412.497 CPU sec, 23.154 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516658, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 815, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4123)
[0000][PE] mean and std.dev: (1078.50, 1118.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.22, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1228, 1388, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (58, 2983)
[0000][PE] mean and std.dev: (1401.63, 434.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 412.722 CPU sec, 23.083 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517896, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 542, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2873)
[0000][PE] mean and std.dev: (699.28, 596.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1044, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (1118.00, 421.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 409.019 CPU sec, 22.924 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205224
	[0000][ M::kt_pipeline] read 1205224 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517018, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (586, 1134, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3046)
[0000][PE] mean and std.dev: (941.89, 471.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.36, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1334, 3009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7201)
[0000][PE] mean and std.dev: (1792.57, 1508.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 418.035 CPU sec, 23.490 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517439, 5, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1100, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5252)
[0000][PE] mean and std.dev: (1176.78, 954.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.12, 119.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1205, 1722, 3044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6722)
[0000][PE] mean and std.dev: (2105.16, 1521.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205224 reads in 412.482 CPU sec, 23.040 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205324
	[0000][ M::kt_pipeline] read 1205324 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517723, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 395, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3144)
[0000][PE] mean and std.dev: (577.52, 513.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1219, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2806)
[0000][PE] mean and std.dev: (1206.25, 549.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 411.913 CPU sec, 23.062 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517193, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 1078, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4450)
[0000][PE] mean and std.dev: (1178.26, 886.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.22, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1383, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (27, 2542)
[0000][PE] mean and std.dev: (1307.15, 518.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205324 reads in 415.460 CPU sec, 23.293 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517302, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 931, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4838)
[0000][PE] mean and std.dev: (1201.40, 1091.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.05, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1587, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5600)
[0000][PE] mean and std.dev: (1688.05, 890.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 412.382 CPU sec, 23.123 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517239, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 922, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (914.53, 728.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1716, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5894)
[0000][PE] mean and std.dev: (1829.16, 1261.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 409.783 CPU sec, 22.940 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517350, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 692, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (933.73, 859.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.34, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (645, 982, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2313)
[0000][PE] mean and std.dev: (871.71, 395.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 411.212 CPU sec, 23.018 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517124, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 389, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2438)
[0000][PE] mean and std.dev: (604.75, 475.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.90, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1205, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (1407.73, 724.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 415.642 CPU sec, 23.297 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517111, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 501, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2310)
[0000][PE] mean and std.dev: (579.46, 427.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.21, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1437, 2641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5971)
[0000][PE] mean and std.dev: (1923.21, 1365.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 412.398 CPU sec, 23.082 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517277, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 581, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4483)
[0000][PE] mean and std.dev: (1057.55, 976.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 938, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4067)
[0000][PE] mean and std.dev: (1095.75, 690.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 416.855 CPU sec, 23.381 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516999, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 807, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5553)
[0000][PE] mean and std.dev: (1085.97, 935.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.26, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (576, 1205, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3354)
[0000][PE] mean and std.dev: (1222.38, 749.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 414.981 CPU sec, 23.239 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517063, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 490, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (598.83, 633.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.32, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1396, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3648)
[0000][PE] mean and std.dev: (1403.73, 589.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 412.952 CPU sec, 23.117 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516659, 0, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 586, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3529)
[0000][PE] mean and std.dev: (849.57, 690.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.53, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1323, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1435.85, 751.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 415.948 CPU sec, 23.273 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516968, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 328, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2651)
[0000][PE] mean and std.dev: (540.85, 546.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1378, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (1406.50, 851.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 412.195 CPU sec, 23.062 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517327, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 777, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (931.59, 811.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.31, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1380, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (1357.42, 679.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 408.250 CPU sec, 22.853 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516937, 4, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 684, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2917)
[0000][PE] mean and std.dev: (780.14, 612.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1270, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (1492.56, 916.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 408.787 CPU sec, 22.853 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517269, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 581, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3028)
[0000][PE] mean and std.dev: (857.83, 627.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 1597, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3679)
[0000][PE] mean and std.dev: (1434.56, 561.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 415.751 CPU sec, 23.282 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517226, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 859, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4937)
[0000][PE] mean and std.dev: (1060.00, 979.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.59, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1157, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (1273.00, 526.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 414.775 CPU sec, 23.268 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517447, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 732, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2995)
[0000][PE] mean and std.dev: (808.50, 674.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.00, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1334, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4386)
[0000][PE] mean and std.dev: (1507.19, 1028.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 410.485 CPU sec, 22.984 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517367, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 652, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3483)
[0000][PE] mean and std.dev: (779.30, 722.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1208, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4805)
[0000][PE] mean and std.dev: (1562.71, 1214.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 410.823 CPU sec, 22.978 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517244, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 429, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (874.90, 850.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.54, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1451, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (1430.88, 573.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 415.842 CPU sec, 23.324 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517360, 4, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 603, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4118)
[0000][PE] mean and std.dev: (895.76, 780.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.14, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1741, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4601)
[0000][PE] mean and std.dev: (1651.27, 728.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 412.495 CPU sec, 23.089 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517909, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 655, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (980.52, 885.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.81, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1444, 1571, 2550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4762)
[0000][PE] mean and std.dev: (1778.80, 786.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 413.526 CPU sec, 23.200 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517225, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 737, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3696)
[0000][PE] mean and std.dev: (938.29, 799.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1238, 1545, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (24, 3059)
[0000][PE] mean and std.dev: (1340.22, 497.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 417.216 CPU sec, 23.401 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517930, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 463, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3117)
[0000][PE] mean and std.dev: (729.89, 636.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.14, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1623, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4269)
[0000][PE] mean and std.dev: (1487.61, 830.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 413.786 CPU sec, 23.216 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517221, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (462, 1093, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5661)
[0000][PE] mean and std.dev: (1095.12, 810.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.49, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1572, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4733)
[0000][PE] mean and std.dev: (1718.26, 819.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 414.418 CPU sec, 23.340 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517631, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 544, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2525)
[0000][PE] mean and std.dev: (566.64, 446.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.41, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1621, 3033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7249)
[0000][PE] mean and std.dev: (1825.21, 1091.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 408.904 CPU sec, 22.865 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517503, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 487, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3272)
[0000][PE] mean and std.dev: (858.21, 794.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1085, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1276.39, 911.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 411.713 CPU sec, 23.029 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517087, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 668, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3059)
[0000][PE] mean and std.dev: (806.03, 692.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1435, 2971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6605)
[0000][PE] mean and std.dev: (1904.92, 1240.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 414.858 CPU sec, 23.260 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517162, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 866, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4314)
[0000][PE] mean and std.dev: (1034.54, 879.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.55, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1676, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (1565.13, 787.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 414.430 CPU sec, 23.201 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517199, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 577, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (812.86, 708.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1443, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4660)
[0000][PE] mean and std.dev: (1588.96, 1057.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 409.104 CPU sec, 22.902 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517387, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 1037, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4183)
[0000][PE] mean and std.dev: (1016.14, 772.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1148, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2663)
[0000][PE] mean and std.dev: (1227.09, 591.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 410.783 CPU sec, 23.018 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517433, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 484, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5751)
[0000][PE] mean and std.dev: (1048.85, 1127.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.13, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1446, 2718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6214)
[0000][PE] mean and std.dev: (1801.96, 1118.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 412.701 CPU sec, 23.240 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516757, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 567, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (658.50, 610.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1641, 2569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5747)
[0000][PE] mean and std.dev: (1790.32, 884.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 413.891 CPU sec, 23.225 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517215, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 415, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2848)
[0000][PE] mean and std.dev: (700.59, 665.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.25, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1331, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (1271.57, 573.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 418.772 CPU sec, 23.561 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517152, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 830, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3818)
[0000][PE] mean and std.dev: (976.03, 886.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.65, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1593, 2389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5401)
[0000][PE] mean and std.dev: (1667.10, 1070.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 419.854 CPU sec, 23.667 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517283, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 1010, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4835)
[0000][PE] mean and std.dev: (1210.00, 1145.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.00, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1364, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (1328.76, 620.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 411.103 CPU sec, 23.050 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 516865, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 785, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (935.50, 812.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1167, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4134)
[0000][PE] mean and std.dev: (1277.45, 611.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 409.628 CPU sec, 22.972 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516938, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 385, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2826)
[0000][PE] mean and std.dev: (625.67, 551.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1557, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5259)
[0000][PE] mean and std.dev: (1657.00, 844.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 414.807 CPU sec, 23.321 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517458, 8, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 401, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2830)
[0000][PE] mean and std.dev: (647.40, 600.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1281, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (1253.13, 543.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 410.941 CPU sec, 23.014 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517209, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 688, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (826.80, 645.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.26, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1205, 1371, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (1457.44, 671.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 412.046 CPU sec, 23.100 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516997, 9, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 409, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4727)
[0000][PE] mean and std.dev: (945.22, 996.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.17, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1630, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4667)
[0000][PE] mean and std.dev: (1727.11, 1022.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 416.414 CPU sec, 23.389 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516727, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 600, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4432)
[0000][PE] mean and std.dev: (957.22, 1046.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (494.96, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1501, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (1377.19, 581.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 412.943 CPU sec, 23.082 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517217, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 354, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1963)
[0000][PE] mean and std.dev: (538.29, 484.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.43, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1533, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4360)
[0000][PE] mean and std.dev: (1597.86, 863.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 414.790 CPU sec, 23.325 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517255, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 665, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6135)
[0000][PE] mean and std.dev: (1268.69, 1303.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.53, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1383, 2395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4907)
[0000][PE] mean and std.dev: (1599.12, 812.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 412.205 CPU sec, 23.109 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517277, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 916, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4484)
[0000][PE] mean and std.dev: (1119.83, 1114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1296, 1702, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4386)
[0000][PE] mean and std.dev: (1545.54, 673.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5416)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 408.439 CPU sec, 22.975 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517465, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 417, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (745.16, 706.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.32, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1530, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4917)
[0000][PE] mean and std.dev: (1609.24, 936.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 410.061 CPU sec, 23.001 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517456, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 713, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4898)
[0000][PE] mean and std.dev: (1074.33, 1017.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.30, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1252, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2532)
[0000][PE] mean and std.dev: (1111.50, 437.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 408.644 CPU sec, 22.960 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517164, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 951, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3657)
[0000][PE] mean and std.dev: (984.06, 775.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.54, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1045, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2738)
[0000][PE] mean and std.dev: (930.95, 377.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 410.782 CPU sec, 22.979 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516888, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 371, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2842)
[0000][PE] mean and std.dev: (647.71, 637.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.01, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1460, 2532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (1937.32, 1326.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 412.471 CPU sec, 23.145 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517438, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 603, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (948.69, 931.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.48, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1201, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3365)
[0000][PE] mean and std.dev: (1159.94, 613.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 409.093 CPU sec, 22.894 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517105, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 915, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4397)
[0000][PE] mean and std.dev: (1002.96, 970.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.32, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1347, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (1469.14, 807.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 415.391 CPU sec, 23.287 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516802, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 835, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (871.09, 750.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.26, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1874, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4437)
[0000][PE] mean and std.dev: (1615.38, 633.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 414.072 CPU sec, 23.198 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517003, 8, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 459, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2371)
[0000][PE] mean and std.dev: (588.38, 409.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.56, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1257, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4592)
[0000][PE] mean and std.dev: (1337.97, 770.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 422.671 CPU sec, 23.857 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517394, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 400, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4328)
[0000][PE] mean and std.dev: (849.36, 859.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.39, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1446, 2604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5510)
[0000][PE] mean and std.dev: (1969.30, 1170.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 415.867 CPU sec, 23.474 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517485, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 452, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5062)
[0000][PE] mean and std.dev: (1098.36, 1104.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.95, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 1558, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4224)
[0000][PE] mean and std.dev: (1535.86, 711.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 412.248 CPU sec, 23.174 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516813, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 493, 919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2143)
[0000][PE] mean and std.dev: (671.41, 523.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.25, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1255, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4563)
[0000][PE] mean and std.dev: (1435.27, 991.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 410.668 CPU sec, 22.987 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517431, 5, 37)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 444, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3968)
[0000][PE] mean and std.dev: (868.34, 834.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1279, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4165)
[0000][PE] mean and std.dev: (1345.95, 890.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 414.912 CPU sec, 23.311 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517148, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 653, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4073)
[0000][PE] mean and std.dev: (888.37, 771.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.20, 119.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1358, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (1563.95, 812.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 406.878 CPU sec, 22.739 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516874, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 378, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (617.50, 474.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.08, 119.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1435, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5744)
[0000][PE] mean and std.dev: (1699.30, 1179.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 415.107 CPU sec, 23.326 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517791, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 547, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (850.30, 767.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.09, 119.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1395, 2918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6812)
[0000][PE] mean and std.dev: (1851.93, 1308.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 410.553 CPU sec, 23.045 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 516996, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 921, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4427)
[0000][PE] mean and std.dev: (998.49, 784.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 879)
[0000][PE] mean and std.dev: (494.85, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1034)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1403, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5147)
[0000][PE] mean and std.dev: (1621.91, 1036.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 413.031 CPU sec, 23.122 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517164, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 755, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3052)
[0000][PE] mean and std.dev: (687.97, 479.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.35, 119.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1276, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2751)
[0000][PE] mean and std.dev: (1229.77, 559.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 415.215 CPU sec, 23.294 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 516537, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 533, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3429)
[0000][PE] mean and std.dev: (716.63, 611.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1185, 1751, 3428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7914)
[0000][PE] mean and std.dev: (2170.55, 1738.79)
[0000][PE] low and high boundaries for proper pairs: (1, 10157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 407.821 CPU sec, 22.840 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517158, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 565, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (896.84, 741.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1416, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (1497.67, 735.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 411.997 CPU sec, 23.120 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517179, 8, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 963, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3026)
[0000][PE] mean and std.dev: (831.85, 527.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1557, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (1438.64, 763.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 412.914 CPU sec, 23.167 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 516880, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 917, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6465)
[0000][PE] mean and std.dev: (1313.85, 1342.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.97, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1361, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3927)
[0000][PE] mean and std.dev: (1406.00, 767.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 414.668 CPU sec, 23.225 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517289, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 572, 798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1806)
[0000][PE] mean and std.dev: (544.77, 365.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.33, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1399, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3409)
[0000][PE] mean and std.dev: (1470.45, 687.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 415.082 CPU sec, 23.317 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516873, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 465, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3852)
[0000][PE] mean and std.dev: (711.82, 617.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.05, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1412, 2516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5396)
[0000][PE] mean and std.dev: (1816.82, 1101.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 413.700 CPU sec, 23.129 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516609, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 611, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (858.50, 751.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.31, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1633, 2544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5422)
[0000][PE] mean and std.dev: (1874.78, 1037.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 419.836 CPU sec, 23.641 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516713, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 458, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (733.74, 620.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1283, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3008)
[0000][PE] mean and std.dev: (1267.09, 551.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 417.275 CPU sec, 23.394 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517180, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 654, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1086.31, 879.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.46, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1594, 2889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6403)
[0000][PE] mean and std.dev: (2161.65, 1469.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 412.570 CPU sec, 23.152 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 516784, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 497, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3691)
[0000][PE] mean and std.dev: (773.60, 725.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.36, 119.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (525, 1006, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4668)
[0000][PE] mean and std.dev: (1070.75, 722.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 411.268 CPU sec, 23.004 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517011, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 455, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3033)
[0000][PE] mean and std.dev: (701.33, 547.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1563, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (1454.96, 637.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 418.938 CPU sec, 23.555 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 517211, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 536, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (842.19, 865.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.50, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1438, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5308)
[0000][PE] mean and std.dev: (1831.91, 1327.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 414.838 CPU sec, 23.251 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517449, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 424, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2384)
[0000][PE] mean and std.dev: (653.50, 531.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.46, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1473, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (1576.30, 968.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 410.761 CPU sec, 23.026 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516873, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 760, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4620)
[0000][PE] mean and std.dev: (1065.03, 986.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.89, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (570, 1282, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5688)
[0000][PE] mean and std.dev: (1599.42, 1430.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 412.041 CPU sec, 23.054 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 516554, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 624, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2822)
[0000][PE] mean and std.dev: (739.79, 580.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.44, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1138, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2736)
[0000][PE] mean and std.dev: (1055.43, 494.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 408.710 CPU sec, 22.844 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517314, 2, 37)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 684, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2858)
[0000][PE] mean and std.dev: (799.67, 579.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1360, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4345)
[0000][PE] mean and std.dev: (1429.00, 832.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 412.604 CPU sec, 23.113 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516853, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 432, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4243)
[0000][PE] mean and std.dev: (825.26, 862.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.30, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1334, 2807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6819)
[0000][PE] mean and std.dev: (1757.88, 1329.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 413.886 CPU sec, 23.190 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517033, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 644, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3833)
[0000][PE] mean and std.dev: (907.48, 870.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1205, 1812, 2259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4367)
[0000][PE] mean and std.dev: (1543.00, 632.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 412.292 CPU sec, 23.101 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205324
	[0000][ M::kt_pipeline] read 1205324 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517527, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 974, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3894)
[0000][PE] mean and std.dev: (1070.37, 808.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.21, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1387, 2534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5890)
[0000][PE] mean and std.dev: (1520.16, 896.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 409.913 CPU sec, 22.975 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517378, 4, 41)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 565, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3157)
[0000][PE] mean and std.dev: (761.79, 571.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.37, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1152, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4519)
[0000][PE] mean and std.dev: (1312.38, 872.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205324 reads in 409.101 CPU sec, 22.906 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 517505, 8, 41)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 867, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (1018.61, 866.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.26, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1436, 2290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4562)
[0000][PE] mean and std.dev: (1610.00, 899.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 407.275 CPU sec, 22.786 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516723, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 446, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2708)
[0000][PE] mean and std.dev: (686.46, 529.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.29, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1137, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4038)
[0000][PE] mean and std.dev: (1399.69, 705.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 417.317 CPU sec, 23.525 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517027, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 546, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4290)
[0000][PE] mean and std.dev: (913.97, 868.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 119.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1482, 3031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7057)
[0000][PE] mean and std.dev: (1864.05, 1229.14)
[0000][PE] low and high boundaries for proper pairs: (1, 9070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 414.386 CPU sec, 23.281 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517300, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 1013, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5362)
[0000][PE] mean and std.dev: (1258.27, 1229.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.37, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1689, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5010)
[0000][PE] mean and std.dev: (1672.85, 849.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 413.146 CPU sec, 23.160 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 517875, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 583, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (719.55, 638.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.07, 119.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1098, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2495)
[0000][PE] mean and std.dev: (1029.47, 451.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 414.112 CPU sec, 23.224 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517369, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 650, 1016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2436)
[0000][PE] mean and std.dev: (792.80, 625.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.03, 119.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1798, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4031)
[0000][PE] mean and std.dev: (1571.28, 741.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 413.038 CPU sec, 23.114 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516865, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 1209, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6123)
[0000][PE] mean and std.dev: (1387.43, 1171.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1364, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2948)
[0000][PE] mean and std.dev: (1160.00, 490.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 412.825 CPU sec, 23.083 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517461, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 783, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6335)
[0000][PE] mean and std.dev: (1143.47, 1107.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.58, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1291, 1710, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3883)
[0000][PE] mean and std.dev: (1737.24, 608.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 410.928 CPU sec, 23.029 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517194, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 713, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4376)
[0000][PE] mean and std.dev: (989.15, 941.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.50, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1160, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (1363.29, 931.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 411.680 CPU sec, 23.057 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 516928, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 919, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5015)
[0000][PE] mean and std.dev: (1072.33, 884.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.67, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1504, 2687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5919)
[0000][PE] mean and std.dev: (1733.14, 1070.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 414.573 CPU sec, 23.223 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517674, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 740, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (877.71, 670.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.51, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1368, 2441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5587)
[0000][PE] mean and std.dev: (1711.20, 1062.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 407.927 CPU sec, 22.821 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517101, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 568, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4726)
[0000][PE] mean and std.dev: (1031.28, 1050.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.61, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1267, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (1324.19, 774.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 414.191 CPU sec, 23.183 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516796, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 721, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5331)
[0000][PE] mean and std.dev: (1108.61, 1127.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.27, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1723, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5742)
[0000][PE] mean and std.dev: (1683.60, 850.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 414.610 CPU sec, 23.296 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517506, 5, 41)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 1009, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4320)
[0000][PE] mean and std.dev: (1068.45, 930.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.11, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1645, 2538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5562)
[0000][PE] mean and std.dev: (1836.46, 1095.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 420.506 CPU sec, 23.596 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517216, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 422, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3560)
[0000][PE] mean and std.dev: (714.29, 769.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.25, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1299, 3195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8063)
[0000][PE] mean and std.dev: (1875.12, 1479.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 408.766 CPU sec, 22.852 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517183, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 460, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (835.69, 752.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1381, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3850)
[0000][PE] mean and std.dev: (1351.50, 764.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 408.374 CPU sec, 22.879 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517895, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 400, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3804)
[0000][PE] mean and std.dev: (795.13, 867.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.26, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1509, 2671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6137)
[0000][PE] mean and std.dev: (1593.48, 987.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 412.862 CPU sec, 23.212 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517233, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 559, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5758)
[0000][PE] mean and std.dev: (1232.51, 1251.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.34, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1139, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (1251.75, 614.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 411.975 CPU sec, 23.110 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205304
	[0000][ M::kt_pipeline] read 1205304 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517136, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 440, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3714)
[0000][PE] mean and std.dev: (918.03, 848.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1411, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (1310.00, 613.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 412.866 CPU sec, 23.203 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516718, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (492, 900, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4782)
[0000][PE] mean and std.dev: (1146.70, 979.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.27, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1175, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5009)
[0000][PE] mean and std.dev: (1180.69, 652.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205304 reads in 415.370 CPU sec, 23.253 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517068, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 683, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (728.33, 682.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.35, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 1751, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4453)
[0000][PE] mean and std.dev: (1723.12, 794.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 412.744 CPU sec, 23.108 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517009, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 1012, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5949)
[0000][PE] mean and std.dev: (1323.50, 1341.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.18, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1485, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (1316.95, 619.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 417.512 CPU sec, 23.383 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517525, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 776, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2841)
[0000][PE] mean and std.dev: (826.46, 618.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1060, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2402)
[0000][PE] mean and std.dev: (1043.40, 392.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 410.720 CPU sec, 22.994 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517563, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 1016, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4237)
[0000][PE] mean and std.dev: (1228.39, 928.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.17, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1198, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3917)
[0000][PE] mean and std.dev: (1418.76, 574.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 410.369 CPU sec, 22.946 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517495, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 668, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5462)
[0000][PE] mean and std.dev: (1155.84, 1142.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.23, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1242, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3471)
[0000][PE] mean and std.dev: (1225.44, 540.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 407.172 CPU sec, 22.787 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517324, 5, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 712, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3526)
[0000][PE] mean and std.dev: (848.51, 804.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.17, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1286, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3626)
[0000][PE] mean and std.dev: (1407.19, 751.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 409.966 CPU sec, 22.939 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516880, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 588, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3519)
[0000][PE] mean and std.dev: (816.00, 697.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.98, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1458, 2672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6388)
[0000][PE] mean and std.dev: (1644.13, 1100.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 420.676 CPU sec, 23.699 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 517086, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 767, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3621)
[0000][PE] mean and std.dev: (906.00, 734.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.40, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1209, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5002)
[0000][PE] mean and std.dev: (1314.07, 731.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 412.217 CPU sec, 23.070 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517614, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (482, 987, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3500)
[0000][PE] mean and std.dev: (1012.37, 768.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.60, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1351, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3800)
[0000][PE] mean and std.dev: (1388.07, 574.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 408.718 CPU sec, 22.929 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516873, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 632, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (969.73, 839.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1613, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3776)
[0000][PE] mean and std.dev: (1559.45, 733.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 410.988 CPU sec, 23.002 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517245, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 418, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1293)
[0000][PE] mean and std.dev: (420.47, 260.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.23, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1227, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3084)
[0000][PE] mean and std.dev: (1170.16, 433.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 417.671 CPU sec, 23.466 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517113, 3, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 481, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (758.86, 806.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1278, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (1277.91, 599.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 411.940 CPU sec, 23.106 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517408, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 374, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2839)
[0000][PE] mean and std.dev: (669.74, 678.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1722, 2778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6146)
[0000][PE] mean and std.dev: (1767.52, 1087.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7830)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 411.849 CPU sec, 23.075 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517156, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 867, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4859)
[0000][PE] mean and std.dev: (1062.26, 1049.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.00, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1483, 3251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7735)
[0000][PE] mean and std.dev: (1983.50, 1678.90)
[0000][PE] low and high boundaries for proper pairs: (1, 9977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 411.109 CPU sec, 23.060 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517325, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 742, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4180)
[0000][PE] mean and std.dev: (924.54, 746.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.01, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1315, 2750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6382)
[0000][PE] mean and std.dev: (1919.04, 1560.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 405.953 CPU sec, 22.720 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516849, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 1079, 2615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7209)
[0000][PE] mean and std.dev: (1654.96, 1588.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.31, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1220, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4107)
[0000][PE] mean and std.dev: (1390.37, 873.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 415.224 CPU sec, 23.258 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517039, 4, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 712, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4455)
[0000][PE] mean and std.dev: (983.63, 910.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.14, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1281, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (1357.84, 688.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 412.893 CPU sec, 23.176 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517175, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 484, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (818.74, 824.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.33, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1463, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5024)
[0000][PE] mean and std.dev: (1762.96, 1010.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 408.217 CPU sec, 22.835 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516616, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 558, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4135)
[0000][PE] mean and std.dev: (750.00, 663.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.25, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1412, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3645)
[0000][PE] mean and std.dev: (1247.08, 698.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 411.444 CPU sec, 23.026 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516935, 5, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 789, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3307)
[0000][PE] mean and std.dev: (946.70, 786.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.14, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1255, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4096)
[0000][PE] mean and std.dev: (1408.88, 857.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 412.173 CPU sec, 23.229 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517133, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 550, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3176)
[0000][PE] mean and std.dev: (676.71, 519.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.34, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1091, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (1187.74, 591.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 413.427 CPU sec, 23.191 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517206, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1151, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5472)
[0000][PE] mean and std.dev: (1424.97, 1200.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1325, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4443)
[0000][PE] mean and std.dev: (1406.00, 744.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 410.554 CPU sec, 23.037 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517001, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 684, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3601)
[0000][PE] mean and std.dev: (957.10, 967.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1396, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3680)
[0000][PE] mean and std.dev: (1373.00, 563.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 412.942 CPU sec, 23.182 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517527, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 718, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3524)
[0000][PE] mean and std.dev: (786.57, 642.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.27, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1451, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3777)
[0000][PE] mean and std.dev: (1408.86, 597.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 412.226 CPU sec, 23.179 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516556, 1, 40)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 648, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4438)
[0000][PE] mean and std.dev: (1068.80, 957.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.54, 120.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1499, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4144)
[0000][PE] mean and std.dev: (1501.88, 777.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 414.940 CPU sec, 23.271 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516800, 5, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 579, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3590)
[0000][PE] mean and std.dev: (729.59, 639.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.23, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1618, 2390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5036)
[0000][PE] mean and std.dev: (1763.25, 944.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 418.459 CPU sec, 23.580 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517316, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 680, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4205)
[0000][PE] mean and std.dev: (856.94, 789.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.63, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1304, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 2361)
[0000][PE] mean and std.dev: (1235.61, 473.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 413.277 CPU sec, 23.128 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516811, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 673, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (1018.18, 925.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1587, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4878)
[0000][PE] mean and std.dev: (1632.16, 805.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 414.203 CPU sec, 23.201 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517266, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 874, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4615)
[0000][PE] mean and std.dev: (1101.14, 1089.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.89, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1558, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4272)
[0000][PE] mean and std.dev: (1476.35, 645.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 415.211 CPU sec, 23.315 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516764, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 681, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3982)
[0000][PE] mean and std.dev: (842.47, 617.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1308, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (1295.00, 517.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 413.525 CPU sec, 23.242 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517326, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 621, 1069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2595)
[0000][PE] mean and std.dev: (665.54, 467.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1269, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3699)
[0000][PE] mean and std.dev: (1374.74, 689.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 410.987 CPU sec, 22.995 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517309, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 616, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3590)
[0000][PE] mean and std.dev: (792.73, 694.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.49, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1511, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4043)
[0000][PE] mean and std.dev: (1542.59, 672.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 414.996 CPU sec, 23.286 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517466, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 455, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4936)
[0000][PE] mean and std.dev: (1071.94, 1188.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.00, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1122, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4274)
[0000][PE] mean and std.dev: (1214.07, 675.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 409.528 CPU sec, 22.957 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517367, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 427, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3900)
[0000][PE] mean and std.dev: (857.82, 965.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1621, 2887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6985)
[0000][PE] mean and std.dev: (2048.43, 1535.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 411.104 CPU sec, 23.072 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517203, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 734, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3800)
[0000][PE] mean and std.dev: (940.71, 789.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.54, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1436, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5286)
[0000][PE] mean and std.dev: (1511.00, 1032.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 413.048 CPU sec, 23.130 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517089, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 626, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3774)
[0000][PE] mean and std.dev: (924.13, 882.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.27, 119.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1563, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5061)
[0000][PE] mean and std.dev: (1731.82, 917.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 407.780 CPU sec, 22.856 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517359, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 641, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4030)
[0000][PE] mean and std.dev: (940.36, 910.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.47, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1911, 2897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6367)
[0000][PE] mean and std.dev: (2205.85, 1272.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 415.043 CPU sec, 23.336 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517237, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 826, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4664)
[0000][PE] mean and std.dev: (1076.78, 943.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1291, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4306)
[0000][PE] mean and std.dev: (1375.00, 830.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 413.615 CPU sec, 23.276 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517572, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 830, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4721)
[0000][PE] mean and std.dev: (1069.07, 975.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.27, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1488, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4706)
[0000][PE] mean and std.dev: (1732.76, 1031.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 409.972 CPU sec, 22.976 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517449, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 544, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2621)
[0000][PE] mean and std.dev: (652.66, 496.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.16, 119.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1341, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4161)
[0000][PE] mean and std.dev: (1461.21, 865.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 410.736 CPU sec, 23.035 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517356, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 999, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3901)
[0000][PE] mean and std.dev: (1094.50, 900.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.40, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1544, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (1713.33, 1126.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 410.767 CPU sec, 22.989 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517297, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 1010, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4681)
[0000][PE] mean and std.dev: (933.21, 792.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1275, 2470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5748)
[0000][PE] mean and std.dev: (1484.33, 913.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 416.394 CPU sec, 23.379 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517102, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 343, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1516)
[0000][PE] mean and std.dev: (418.94, 285.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.27, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1189, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3777)
[0000][PE] mean and std.dev: (1144.40, 473.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 413.733 CPU sec, 23.178 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517058, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 840, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (840.41, 614.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.28, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 2281, 3026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6848)
[0000][PE] mean and std.dev: (2193.15, 1421.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 415.125 CPU sec, 23.265 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516650, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 678, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3092)
[0000][PE] mean and std.dev: (737.00, 667.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.24, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1522, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5657)
[0000][PE] mean and std.dev: (1809.06, 1185.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 423.124 CPU sec, 23.946 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517415, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 646, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3374)
[0000][PE] mean and std.dev: (892.88, 737.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.24, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1656, 2253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4727)
[0000][PE] mean and std.dev: (1672.47, 860.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 406.419 CPU sec, 22.769 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516744, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 930, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5200)
[0000][PE] mean and std.dev: (1248.07, 1151.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.37, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1401, 1559, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (23, 3468)
[0000][PE] mean and std.dev: (1524.70, 710.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4365)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 413.167 CPU sec, 23.170 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517335, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 847, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3252)
[0000][PE] mean and std.dev: (903.13, 656.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.37, 119.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1354, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4297)
[0000][PE] mean and std.dev: (1411.95, 773.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 408.818 CPU sec, 22.893 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517232, 0, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 770, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3632)
[0000][PE] mean and std.dev: (834.62, 584.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.41, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1563, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4688)
[0000][PE] mean and std.dev: (1614.22, 757.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 413.121 CPU sec, 23.149 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517592, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 1193, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5260)
[0000][PE] mean and std.dev: (1359.56, 1099.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1186, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5145)
[0000][PE] mean and std.dev: (1395.46, 1152.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 413.756 CPU sec, 23.178 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517182, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 925, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1192.66, 1127.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.79, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1397, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3625)
[0000][PE] mean and std.dev: (1255.69, 710.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 415.988 CPU sec, 23.345 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517125, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 705, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5025)
[0000][PE] mean and std.dev: (1183.61, 1247.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.14, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1552, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5766)
[0000][PE] mean and std.dev: (1650.10, 1003.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 416.157 CPU sec, 23.272 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517046, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 770, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6314)
[0000][PE] mean and std.dev: (1388.37, 1469.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.28, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1262, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (1087.76, 462.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 412.310 CPU sec, 23.110 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517270, 2, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 641, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (826.51, 688.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.26, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1170, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (1399.97, 670.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 418.537 CPU sec, 23.518 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517014, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 740, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3670)
[0000][PE] mean and std.dev: (966.14, 856.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1381, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3473)
[0000][PE] mean and std.dev: (1474.24, 645.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 414.478 CPU sec, 23.188 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517111, 6, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 1037, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6525)
[0000][PE] mean and std.dev: (1179.44, 1248.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.43, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1588, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5162)
[0000][PE] mean and std.dev: (1724.89, 1037.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 415.267 CPU sec, 23.268 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517391, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 623, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4714)
[0000][PE] mean and std.dev: (916.09, 872.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1418, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4914)
[0000][PE] mean and std.dev: (1652.62, 939.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 416.140 CPU sec, 23.410 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516682, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 767, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5756)
[0000][PE] mean and std.dev: (1301.82, 1457.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1183, 1398, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (1334.90, 396.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 414.355 CPU sec, 23.225 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516892, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 626, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4644)
[0000][PE] mean and std.dev: (1028.63, 882.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.63, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1378, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5462)
[0000][PE] mean and std.dev: (1787.24, 1364.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 411.262 CPU sec, 23.019 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517059, 0, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 548, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2602)
[0000][PE] mean and std.dev: (652.97, 582.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1670, 3039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6753)
[0000][PE] mean and std.dev: (2055.75, 1370.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 413.005 CPU sec, 23.114 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517103, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 891, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5376)
[0000][PE] mean and std.dev: (1304.03, 1189.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.99, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1204, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (1281.42, 793.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 411.907 CPU sec, 23.065 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517006, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 703, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3411)
[0000][PE] mean and std.dev: (828.86, 660.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.96, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1580, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4195)
[0000][PE] mean and std.dev: (1510.96, 767.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 412.553 CPU sec, 23.110 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 517036, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 879, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5417)
[0000][PE] mean and std.dev: (1223.98, 1221.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.43, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1083, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4988)
[0000][PE] mean and std.dev: (1401.55, 933.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 418.959 CPU sec, 23.483 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516527, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 1102, 2111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5555)
[0000][PE] mean and std.dev: (1260.14, 1034.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.40, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1533, 3291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7493)
[0000][PE] mean and std.dev: (2124.65, 1310.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 416.633 CPU sec, 23.339 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517008, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 1131, 2480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6830)
[0000][PE] mean and std.dev: (1519.50, 1337.25)
[0000][PE] low and high boundaries for proper pairs: (1, 9005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1072, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3251)
[0000][PE] mean and std.dev: (1236.64, 693.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 411.992 CPU sec, 23.107 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516970, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 930, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5211)
[0000][PE] mean and std.dev: (1159.87, 1159.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.05, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1505, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4738)
[0000][PE] mean and std.dev: (1480.65, 902.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 409.946 CPU sec, 22.925 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517433, 4, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 739, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3664)
[0000][PE] mean and std.dev: (866.94, 814.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.34, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1491, 2648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5626)
[0000][PE] mean and std.dev: (1641.53, 1003.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 410.670 CPU sec, 22.982 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517585, 9, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 489, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4290)
[0000][PE] mean and std.dev: (788.66, 667.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.37, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1501, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3137)
[0000][PE] mean and std.dev: (1345.93, 566.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 408.917 CPU sec, 22.927 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517724, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 1119, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4251)
[0000][PE] mean and std.dev: (1107.90, 785.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1304, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4450)
[0000][PE] mean and std.dev: (1282.90, 699.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 414.882 CPU sec, 23.373 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517128, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 964, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3858)
[0000][PE] mean and std.dev: (1061.23, 896.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.26, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1357, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4611)
[0000][PE] mean and std.dev: (1436.63, 638.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 416.454 CPU sec, 23.470 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517645, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 422, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (889.40, 966.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.39, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1295, 3042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7310)
[0000][PE] mean and std.dev: (1837.81, 1349.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9444)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 414.090 CPU sec, 23.208 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517132, 3, 38)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 787, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (1151.65, 1005.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.36, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1779, 2684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5704)
[0000][PE] mean and std.dev: (1992.71, 1100.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 411.282 CPU sec, 23.080 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 516951, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 452, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (884.63, 830.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1307, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3561)
[0000][PE] mean and std.dev: (1327.33, 653.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 417.472 CPU sec, 23.429 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517081, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 410, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3809)
[0000][PE] mean and std.dev: (852.58, 899.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.39, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1371, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5101)
[0000][PE] mean and std.dev: (1682.84, 1088.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 408.784 CPU sec, 22.923 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517386, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 458, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (934.67, 942.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1322, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4429)
[0000][PE] mean and std.dev: (1297.48, 705.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 405.636 CPU sec, 22.690 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516937, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 432, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2802)
[0000][PE] mean and std.dev: (672.42, 670.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.32, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1134, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2768)
[0000][PE] mean and std.dev: (1208.62, 597.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 413.418 CPU sec, 23.203 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516985, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 745, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (895.48, 724.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.51, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1472, 1649, 2663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5045)
[0000][PE] mean and std.dev: (1812.04, 908.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 410.542 CPU sec, 23.014 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517249, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 422, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2856)
[0000][PE] mean and std.dev: (748.20, 692.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1461, 2056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (1342.31, 930.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 412.407 CPU sec, 23.100 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517237, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 437, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3186)
[0000][PE] mean and std.dev: (698.10, 592.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.53, 120.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1128, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4819)
[0000][PE] mean and std.dev: (1228.75, 682.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 409.749 CPU sec, 22.905 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517113, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 998, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3168)
[0000][PE] mean and std.dev: (864.76, 571.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1451, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (1500.00, 879.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 410.405 CPU sec, 23.014 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517147, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 419, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3067)
[0000][PE] mean and std.dev: (622.40, 548.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.32, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 948, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (1014.10, 648.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 413.909 CPU sec, 23.261 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516956, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 623, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2915)
[0000][PE] mean and std.dev: (743.43, 600.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.38, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1698, 3851, 4041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8727)
[0000][PE] mean and std.dev: (3657.60, 2490.64)
[0000][PE] low and high boundaries for proper pairs: (1, 13620)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1148, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4212)
[0000][PE] mean and std.dev: (1391.80, 846.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 407.835 CPU sec, 22.824 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517182, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 615, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5272)
[0000][PE] mean and std.dev: (1217.71, 1230.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1515, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4748)
[0000][PE] mean and std.dev: (1642.83, 1088.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 410.544 CPU sec, 22.986 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517264, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 797, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2897)
[0000][PE] mean and std.dev: (821.00, 622.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 1392, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (1348.42, 662.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 414.683 CPU sec, 23.309 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517390, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 480, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2874)
[0000][PE] mean and std.dev: (622.03, 460.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 877)
[0000][PE] mean and std.dev: (494.87, 119.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1031)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1502, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4928)
[0000][PE] mean and std.dev: (1458.90, 772.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 412.688 CPU sec, 23.162 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517304, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 810, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3648)
[0000][PE] mean and std.dev: (948.20, 884.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1820, 3104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7114)
[0000][PE] mean and std.dev: (2257.76, 1569.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 409.434 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517269, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 396, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2724)
[0000][PE] mean and std.dev: (671.68, 684.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1592, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5121)
[0000][PE] mean and std.dev: (1657.19, 1086.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 406.376 CPU sec, 22.767 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517573, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 951, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3982)
[0000][PE] mean and std.dev: (997.83, 803.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.50, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1536, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4561)
[0000][PE] mean and std.dev: (1599.27, 856.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 407.855 CPU sec, 22.829 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517190, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 600, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3618)
[0000][PE] mean and std.dev: (729.90, 586.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1342, 1796, 3271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7129)
[0000][PE] mean and std.dev: (2138.50, 1407.80)
[0000][PE] low and high boundaries for proper pairs: (1, 9058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 416.640 CPU sec, 23.457 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517575, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 918, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (1157.59, 1014.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.39, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1316, 1724, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5138)
[0000][PE] mean and std.dev: (1764.04, 805.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 408.505 CPU sec, 22.930 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517267, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 614, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4308)
[0000][PE] mean and std.dev: (844.78, 689.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1283, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4216)
[0000][PE] mean and std.dev: (1354.57, 686.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 409.948 CPU sec, 22.931 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517174, 5, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 391, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4855)
[0000][PE] mean and std.dev: (849.03, 1031.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.14, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1157, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5007)
[0000][PE] mean and std.dev: (1439.29, 934.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 411.381 CPU sec, 23.063 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517018, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 695, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (799.60, 716.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.45, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1361, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4172)
[0000][PE] mean and std.dev: (1346.08, 781.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 409.301 CPU sec, 22.884 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517017, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 633, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (735.30, 604.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.64, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1663, 2504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5492)
[0000][PE] mean and std.dev: (1775.61, 1011.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 414.727 CPU sec, 23.271 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517253, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 414, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3175)
[0000][PE] mean and std.dev: (755.70, 703.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1009, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (1210.38, 693.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 415.033 CPU sec, 23.306 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517121, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 799, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4875)
[0000][PE] mean and std.dev: (991.66, 751.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.27, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1487, 2732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5952)
[0000][PE] mean and std.dev: (1717.11, 806.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 409.652 CPU sec, 22.937 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516930, 11, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 455, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3023)
[0000][PE] mean and std.dev: (708.69, 640.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.31, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (396, 1046, 3198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8802)
[0000][PE] mean and std.dev: (1592.18, 1545.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11604)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1306, 3224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7966)
[0000][PE] mean and std.dev: (1777.50, 1318.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 409.881 CPU sec, 22.934 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517393, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 504, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (754.76, 688.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1136, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3528)
[0000][PE] mean and std.dev: (1171.50, 560.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 411.193 CPU sec, 23.053 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516644, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 487, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (781.44, 732.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.46, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1366, 3036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7544)
[0000][PE] mean and std.dev: (1920.41, 1386.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 409.504 CPU sec, 23.032 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517541, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 491, 832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1882)
[0000][PE] mean and std.dev: (549.45, 397.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.45, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1440, 2473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5815)
[0000][PE] mean and std.dev: (1725.61, 1223.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 411.196 CPU sec, 23.042 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517084, 10, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 486, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2376)
[0000][PE] mean and std.dev: (638.86, 442.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (494, 1043, 2408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6236)
[0000][PE] mean and std.dev: (1272.22, 1111.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8150)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1261, 2441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5531)
[0000][PE] mean and std.dev: (1481.64, 1105.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 412.112 CPU sec, 23.174 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517269, 9, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 664, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2942)
[0000][PE] mean and std.dev: (781.22, 617.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.23, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1079, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2789)
[0000][PE] mean and std.dev: (1126.04, 512.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 409.770 CPU sec, 22.934 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517087, 9, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 605, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2635)
[0000][PE] mean and std.dev: (597.33, 505.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.26, 119.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1101, 2349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5137)
[0000][PE] mean and std.dev: (1437.54, 891.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 413.764 CPU sec, 23.202 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517369, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 675, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3138)
[0000][PE] mean and std.dev: (885.92, 792.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.00, 119.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1261, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2832)
[0000][PE] mean and std.dev: (1265.60, 507.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 411.097 CPU sec, 23.053 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516820, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 752, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2854)
[0000][PE] mean and std.dev: (765.55, 579.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1188, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4229)
[0000][PE] mean and std.dev: (1229.45, 702.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 419.365 CPU sec, 23.604 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517584, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 1344, 2471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6587)
[0000][PE] mean and std.dev: (1517.12, 1287.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.66, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1675, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6065)
[0000][PE] mean and std.dev: (1685.22, 1056.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 414.488 CPU sec, 23.282 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517098, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 665, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (940.81, 764.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.30, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1294, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4461)
[0000][PE] mean and std.dev: (1309.00, 828.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 408.379 CPU sec, 22.910 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516682, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 407, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3050)
[0000][PE] mean and std.dev: (732.70, 726.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.10, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1293, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3714)
[0000][PE] mean and std.dev: (1379.38, 614.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 408.087 CPU sec, 22.865 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517511, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (587, 1088, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (1234.98, 899.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.26, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1130, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (1209.59, 555.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 413.768 CPU sec, 23.264 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517754, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 640, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3318)
[0000][PE] mean and std.dev: (787.88, 666.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.40, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1544, 2829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6853)
[0000][PE] mean and std.dev: (1850.48, 1242.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 407.316 CPU sec, 22.811 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517110, 4, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 1014, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4682)
[0000][PE] mean and std.dev: (1024.91, 933.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1368, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4803)
[0000][PE] mean and std.dev: (1374.37, 796.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 407.310 CPU sec, 22.787 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 517379, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 616, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4182)
[0000][PE] mean and std.dev: (1008.17, 904.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (438, 1301, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5952)
[0000][PE] mean and std.dev: (1266.12, 945.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 407.742 CPU sec, 22.830 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517608, 4, 37)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 425, 813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1889)
[0000][PE] mean and std.dev: (497.32, 336.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.39, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1313, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (1299.89, 657.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 409.777 CPU sec, 22.980 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517248, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 433, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5524)
[0000][PE] mean and std.dev: (1054.09, 1078.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.31, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1706, 2754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6216)
[0000][PE] mean and std.dev: (1762.06, 1045.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 409.773 CPU sec, 22.976 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517575, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 616, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3615)
[0000][PE] mean and std.dev: (789.06, 692.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.49, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1351, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3569)
[0000][PE] mean and std.dev: (1335.88, 584.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 410.533 CPU sec, 22.985 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517374, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 338, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3641)
[0000][PE] mean and std.dev: (713.00, 765.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.40, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1400, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4365)
[0000][PE] mean and std.dev: (1430.12, 675.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 411.130 CPU sec, 23.049 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 517150, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 728, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4173)
[0000][PE] mean and std.dev: (1022.92, 938.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.81, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (704, 1171, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4058)
[0000][PE] mean and std.dev: (1298.92, 761.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 412.178 CPU sec, 23.109 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517396, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 640, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4616)
[0000][PE] mean and std.dev: (900.50, 863.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.32, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 1339, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5450)
[0000][PE] mean and std.dev: (1660.62, 1441.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 411.615 CPU sec, 23.017 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517949, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 525, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (845.45, 810.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (376, 1235, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5488)
[0000][PE] mean and std.dev: (1437.35, 1126.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 409.610 CPU sec, 22.945 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 516972, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 517, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3278)
[0000][PE] mean and std.dev: (677.14, 596.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.95, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1292, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4967)
[0000][PE] mean and std.dev: (1498.36, 929.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 419.656 CPU sec, 23.633 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517186, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 372, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2941)
[0000][PE] mean and std.dev: (682.59, 654.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1730, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5032)
[0000][PE] mean and std.dev: (1777.61, 938.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 412.726 CPU sec, 23.128 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517186, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 541, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4394)
[0000][PE] mean and std.dev: (997.46, 911.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1406, 1892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (1274.68, 557.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 411.465 CPU sec, 23.081 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 517220, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 432, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2627)
[0000][PE] mean and std.dev: (689.93, 584.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.15, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1335, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3032)
[0000][PE] mean and std.dev: (1320.88, 570.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 413.197 CPU sec, 23.114 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517455, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 772, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4647)
[0000][PE] mean and std.dev: (961.16, 866.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.31, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 1172, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4892)
[0000][PE] mean and std.dev: (1240.52, 744.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 412.189 CPU sec, 23.088 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517162, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 629, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3588)
[0000][PE] mean and std.dev: (868.61, 766.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (711, 1271, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4059)
[0000][PE] mean and std.dev: (1274.54, 900.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 418.277 CPU sec, 23.501 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517460, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 641, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3073)
[0000][PE] mean and std.dev: (809.51, 644.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1215, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3765)
[0000][PE] mean and std.dev: (1287.96, 691.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 421.176 CPU sec, 23.749 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516665, 4, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 621, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3641)
[0000][PE] mean and std.dev: (831.22, 705.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.44, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1184, 2056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4500)
[0000][PE] mean and std.dev: (1479.09, 1010.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 414.278 CPU sec, 23.298 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517459, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 864, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (919.62, 751.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.43, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1289, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (1402.50, 677.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 414.823 CPU sec, 23.285 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517148, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 1222, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5422)
[0000][PE] mean and std.dev: (1521.08, 1330.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1623, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4470)
[0000][PE] mean and std.dev: (1515.57, 916.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 413.930 CPU sec, 23.219 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517470, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 457, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3307)
[0000][PE] mean and std.dev: (807.26, 799.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.92, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1323, 2380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (1341.57, 978.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 416.816 CPU sec, 23.477 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 516511, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 413, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3736)
[0000][PE] mean and std.dev: (755.83, 742.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1065, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6029)
[0000][PE] mean and std.dev: (1431.60, 998.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 416.842 CPU sec, 23.403 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517189, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 452, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4500)
[0000][PE] mean and std.dev: (995.69, 1034.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1308, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3893)
[0000][PE] mean and std.dev: (1380.28, 683.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 417.341 CPU sec, 23.360 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 516912, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 649, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (983.07, 877.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.88, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1352, 1501, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (56, 3296)
[0000][PE] mean and std.dev: (1489.71, 547.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 414.830 CPU sec, 23.200 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517927, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 615, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (831.13, 729.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1279, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2803)
[0000][PE] mean and std.dev: (1193.00, 464.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 414.080 CPU sec, 23.220 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517502, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 679, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3574)
[0000][PE] mean and std.dev: (814.55, 721.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.42, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1056, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3328)
[0000][PE] mean and std.dev: (1310.53, 613.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 415.565 CPU sec, 23.326 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517391, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 751, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3544)
[0000][PE] mean and std.dev: (927.00, 769.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.20, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1523, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (1526.41, 549.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 420.489 CPU sec, 23.727 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517019, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 445, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3966)
[0000][PE] mean and std.dev: (878.27, 888.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1315, 2641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6091)
[0000][PE] mean and std.dev: (1702.47, 1189.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 418.743 CPU sec, 23.499 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517086, 4, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 890, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3706)
[0000][PE] mean and std.dev: (938.12, 683.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.38, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (816, 1332, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4911)
[0000][PE] mean and std.dev: (1457.41, 869.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 412.061 CPU sec, 23.126 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516838, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 345, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2856)
[0000][PE] mean and std.dev: (609.88, 566.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.29, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1646, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4602)
[0000][PE] mean and std.dev: (1552.83, 946.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 411.830 CPU sec, 23.050 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517618, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 586, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4672)
[0000][PE] mean and std.dev: (1007.76, 1029.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.35, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1310, 2614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5968)
[0000][PE] mean and std.dev: (1556.00, 986.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 408.915 CPU sec, 22.949 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 516969, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 491, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4845)
[0000][PE] mean and std.dev: (979.23, 1089.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.31, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1137, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3436)
[0000][PE] mean and std.dev: (1100.50, 530.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 409.777 CPU sec, 22.983 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517320, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 960, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5302)
[0000][PE] mean and std.dev: (1236.67, 1211.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.86, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1185, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2468)
[0000][PE] mean and std.dev: (1064.29, 442.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 408.855 CPU sec, 22.892 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516840, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 1054, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4585)
[0000][PE] mean and std.dev: (1058.88, 819.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1324, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5444)
[0000][PE] mean and std.dev: (1618.88, 882.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 413.900 CPU sec, 23.202 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517742, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 1003, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4143)
[0000][PE] mean and std.dev: (917.57, 610.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.28, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1230, 1808, 2420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4800)
[0000][PE] mean and std.dev: (1965.21, 1120.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 410.563 CPU sec, 22.946 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516823, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 473, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3825)
[0000][PE] mean and std.dev: (784.62, 638.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.38, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1238, 1393, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (1511.18, 713.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 415.412 CPU sec, 23.269 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516893, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 708, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3571)
[0000][PE] mean and std.dev: (893.50, 742.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.05, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1463, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4710)
[0000][PE] mean and std.dev: (1548.31, 794.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 414.094 CPU sec, 23.170 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517018, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 465, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2998)
[0000][PE] mean and std.dev: (699.00, 604.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.36, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1777, 2614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5942)
[0000][PE] mean and std.dev: (2015.54, 1412.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 412.023 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517358, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 998, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3852)
[0000][PE] mean and std.dev: (909.70, 716.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.43, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1264, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (1400.62, 625.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 419.470 CPU sec, 23.607 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517203, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 884, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5377)
[0000][PE] mean and std.dev: (1323.16, 1212.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.18, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1376, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4508)
[0000][PE] mean and std.dev: (1544.95, 657.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 416.050 CPU sec, 23.364 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517177, 11, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 558, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3895)
[0000][PE] mean and std.dev: (905.71, 753.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1545, 1741, 2779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5247)
[0000][PE] mean and std.dev: (1528.50, 1057.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6481)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1244, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (1254.15, 729.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 418.645 CPU sec, 23.622 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517564, 3, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 754, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6080)
[0000][PE] mean and std.dev: (1319.00, 1253.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.33, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1597, 2660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5782)
[0000][PE] mean and std.dev: (1826.78, 1101.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 411.110 CPU sec, 23.103 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517181, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 410, 923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2233)
[0000][PE] mean and std.dev: (547.04, 452.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1216, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (1432.27, 882.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 409.359 CPU sec, 22.922 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517446, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 484, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (718.20, 588.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1383, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1460.84, 793.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 414.540 CPU sec, 23.239 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516763, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 878, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (1006.00, 818.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.10, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1244, 1486, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3518)
[0000][PE] mean and std.dev: (1373.47, 693.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 418.626 CPU sec, 23.574 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517081, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 480, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (688.68, 585.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1557, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3690)
[0000][PE] mean and std.dev: (1473.36, 619.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 415.593 CPU sec, 23.290 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517331, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 678, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2471)
[0000][PE] mean and std.dev: (711.70, 570.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.35, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1260, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4971)
[0000][PE] mean and std.dev: (1583.81, 999.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 411.672 CPU sec, 23.106 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 516844, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 640, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4410)
[0000][PE] mean and std.dev: (854.07, 834.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.46, 119.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1356, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3103)
[0000][PE] mean and std.dev: (1237.56, 482.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 414.989 CPU sec, 23.340 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517590, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 440, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (821.38, 711.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.21, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1155, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4118)
[0000][PE] mean and std.dev: (1211.78, 800.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 414.003 CPU sec, 23.181 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517541, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 835, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4084)
[0000][PE] mean and std.dev: (1168.81, 980.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.38, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1673, 3210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7278)
[0000][PE] mean and std.dev: (2059.00, 1370.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9312)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 413.711 CPU sec, 23.312 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517259, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 886, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4101)
[0000][PE] mean and std.dev: (984.03, 785.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.24, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (665, 1532, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4649)
[0000][PE] mean and std.dev: (1478.44, 930.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 413.273 CPU sec, 23.205 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516967, 6, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 990, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4608)
[0000][PE] mean and std.dev: (1185.14, 1056.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1284, 2111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4703)
[0000][PE] mean and std.dev: (1444.62, 943.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 411.910 CPU sec, 23.049 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517353, 5, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 1039, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (1254.48, 1065.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (506, 1299, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1333.76, 939.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 410.125 CPU sec, 22.955 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517363, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 686, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5926)
[0000][PE] mean and std.dev: (1230.03, 1294.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.44, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1614, 3291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7663)
[0000][PE] mean and std.dev: (2399.00, 1993.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 415.463 CPU sec, 23.315 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517538, 5, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 785, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2584)
[0000][PE] mean and std.dev: (681.93, 481.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.40, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1554, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4015)
[0000][PE] mean and std.dev: (1465.48, 806.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 416.233 CPU sec, 23.527 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517419, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 778, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4386)
[0000][PE] mean and std.dev: (931.17, 945.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.57, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1395, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3096)
[0000][PE] mean and std.dev: (1273.35, 573.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 412.995 CPU sec, 23.078 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 516944, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 454, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2820)
[0000][PE] mean and std.dev: (706.36, 619.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1438, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4054)
[0000][PE] mean and std.dev: (1577.09, 965.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 412.616 CPU sec, 23.114 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517428, 2, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 467, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (873.85, 708.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.50, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 1591, 2504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5026)
[0000][PE] mean and std.dev: (1789.80, 1061.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 411.114 CPU sec, 23.055 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517131, 5, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (482, 1172, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4949)
[0000][PE] mean and std.dev: (1319.89, 1085.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.31, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1431, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (1414.75, 868.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 414.516 CPU sec, 23.229 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517196, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 717, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3230)
[0000][PE] mean and std.dev: (878.00, 664.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.05, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1341, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4691)
[0000][PE] mean and std.dev: (1558.76, 981.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 413.537 CPU sec, 23.239 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517403, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 548, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3354)
[0000][PE] mean and std.dev: (901.15, 879.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.29, 119.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1229, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5066)
[0000][PE] mean and std.dev: (1660.73, 1111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6450)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 415.442 CPU sec, 23.348 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517510, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (442, 855, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6094)
[0000][PE] mean and std.dev: (1256.35, 1152.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1594, 2867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6877)
[0000][PE] mean and std.dev: (1900.27, 1380.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 410.261 CPU sec, 23.012 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516806, 3, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 537, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3796)
[0000][PE] mean and std.dev: (803.00, 683.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.14, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1409, 2363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5001)
[0000][PE] mean and std.dev: (1715.00, 1157.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 412.366 CPU sec, 23.097 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516781, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 416, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (713.08, 566.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.73, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1335, 2950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6672)
[0000][PE] mean and std.dev: (2202.72, 1788.89)
[0000][PE] low and high boundaries for proper pairs: (1, 9358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 415.022 CPU sec, 23.232 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517256, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 497, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5095)
[0000][PE] mean and std.dev: (1150.21, 1196.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.50, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1355, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4884)
[0000][PE] mean and std.dev: (1620.76, 1042.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 418.419 CPU sec, 23.552 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516724, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 707, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4820)
[0000][PE] mean and std.dev: (1036.03, 995.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1666, 2502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5638)
[0000][PE] mean and std.dev: (1699.62, 872.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 411.939 CPU sec, 23.041 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517026, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 425, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3030)
[0000][PE] mean and std.dev: (740.78, 709.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1559, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3420)
[0000][PE] mean and std.dev: (1510.10, 587.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 411.847 CPU sec, 23.023 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517424, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 916, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5464)
[0000][PE] mean and std.dev: (1056.78, 958.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.98, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1645, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4780)
[0000][PE] mean and std.dev: (1629.55, 849.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 415.232 CPU sec, 23.262 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517157, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 549, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4228)
[0000][PE] mean and std.dev: (1027.32, 1060.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.55, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1174, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3655)
[0000][PE] mean and std.dev: (1122.54, 461.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 416.362 CPU sec, 23.309 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517239, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 862, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4731)
[0000][PE] mean and std.dev: (1086.24, 898.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.34, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1464, 2837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6905)
[0000][PE] mean and std.dev: (1763.52, 1274.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 414.520 CPU sec, 23.192 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517532, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 510, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2552)
[0000][PE] mean and std.dev: (609.30, 545.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.22, 119.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1900, 2995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6627)
[0000][PE] mean and std.dev: (2025.48, 1265.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 424.281 CPU sec, 24.023 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517322, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 849, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4406)
[0000][PE] mean and std.dev: (1071.65, 936.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.20, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1721, 2968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6728)
[0000][PE] mean and std.dev: (1959.30, 1175.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 415.418 CPU sec, 23.287 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516875, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 471, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3474)
[0000][PE] mean and std.dev: (886.77, 777.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.39, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1294, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (1134.73, 672.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 415.442 CPU sec, 23.435 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517166, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 938, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5265)
[0000][PE] mean and std.dev: (1186.71, 1142.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.01, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1271, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5372)
[0000][PE] mean and std.dev: (1524.39, 899.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 413.845 CPU sec, 23.231 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517621, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 801, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3737)
[0000][PE] mean and std.dev: (840.89, 697.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1227, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3936)
[0000][PE] mean and std.dev: (1245.70, 633.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 413.564 CPU sec, 23.223 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517150, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 736, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4584)
[0000][PE] mean and std.dev: (1049.79, 984.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1469, 2262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4838)
[0000][PE] mean and std.dev: (1543.29, 922.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 415.884 CPU sec, 23.312 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517176, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 913, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3715)
[0000][PE] mean and std.dev: (980.50, 727.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1495, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (1414.68, 790.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 412.514 CPU sec, 23.110 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516926, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 950, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5495)
[0000][PE] mean and std.dev: (1191.19, 1101.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.57, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1337, 2778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6314)
[0000][PE] mean and std.dev: (1921.03, 1287.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 411.286 CPU sec, 23.004 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517264, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 732, 2176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5772)
[0000][PE] mean and std.dev: (1217.57, 1191.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1179, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2701)
[0000][PE] mean and std.dev: (1222.63, 501.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 411.197 CPU sec, 23.036 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517095, 8, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 700, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3328)
[0000][PE] mean and std.dev: (910.64, 771.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.27, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1423, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (1395.50, 648.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 414.001 CPU sec, 23.216 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517320, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 712, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (909.30, 846.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.26, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1489, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (1445.07, 714.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 410.324 CPU sec, 22.955 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517510, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 451, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3900)
[0000][PE] mean and std.dev: (750.64, 789.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.61, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1300, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5638)
[0000][PE] mean and std.dev: (1429.17, 951.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 409.429 CPU sec, 22.928 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517670, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 659, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4359)
[0000][PE] mean and std.dev: (892.43, 867.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.54, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1223, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (1242.36, 625.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 413.417 CPU sec, 23.204 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 517325, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 450, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2227)
[0000][PE] mean and std.dev: (558.14, 440.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.13, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1670, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5022)
[0000][PE] mean and std.dev: (1832.84, 1291.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 411.579 CPU sec, 23.047 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517438, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 557, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2435)
[0000][PE] mean and std.dev: (696.65, 534.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.55, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1289, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4714)
[0000][PE] mean and std.dev: (1539.60, 1027.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 412.966 CPU sec, 23.211 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516724, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 603, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4325)
[0000][PE] mean and std.dev: (850.92, 788.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.05, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1341, 1868, 2652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5274)
[0000][PE] mean and std.dev: (1925.33, 976.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 416.744 CPU sec, 23.395 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517303, 5, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (124, 444, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5329)
[0000][PE] mean and std.dev: (1125.52, 1282.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.29, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1282, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3162)
[0000][PE] mean and std.dev: (1336.68, 664.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 417.169 CPU sec, 23.369 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517815, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 715, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4076)
[0000][PE] mean and std.dev: (914.76, 872.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1207, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (1514.92, 802.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 411.095 CPU sec, 23.045 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517457, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 338, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (762.09, 815.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.01, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1364, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (1432.86, 639.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 411.710 CPU sec, 23.086 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517196, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 1008, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3609)
[0000][PE] mean and std.dev: (988.79, 695.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1578, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4166)
[0000][PE] mean and std.dev: (1494.57, 659.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 414.871 CPU sec, 23.297 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517343, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 635, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3890)
[0000][PE] mean and std.dev: (906.62, 817.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.30, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1219, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4010)
[0000][PE] mean and std.dev: (1194.96, 811.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5095)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 413.913 CPU sec, 23.149 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517089, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 629, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2879)
[0000][PE] mean and std.dev: (766.81, 595.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.36, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1258, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3976)
[0000][PE] mean and std.dev: (1399.43, 631.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 411.774 CPU sec, 23.070 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517231, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 729, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (941.22, 715.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.22, 119.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (479, 910, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3704)
[0000][PE] mean and std.dev: (886.00, 507.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 413.148 CPU sec, 23.228 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516890, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 535, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4193)
[0000][PE] mean and std.dev: (862.91, 728.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1444, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5434)
[0000][PE] mean and std.dev: (1800.37, 1183.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 414.452 CPU sec, 23.257 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517227, 4, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 808, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (910.73, 739.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.17, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1322, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4798)
[0000][PE] mean and std.dev: (1440.00, 906.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 409.642 CPU sec, 22.912 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 516584, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 743, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3624)
[0000][PE] mean and std.dev: (864.27, 709.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1225, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4596)
[0000][PE] mean and std.dev: (1581.83, 921.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 416.983 CPU sec, 23.386 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517295, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 424, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3350)
[0000][PE] mean and std.dev: (673.46, 498.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.58, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1381, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5591)
[0000][PE] mean and std.dev: (1440.82, 984.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 415.677 CPU sec, 23.328 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517171, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 800, 2177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5931)
[0000][PE] mean and std.dev: (1342.49, 1409.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.31, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1395, 2956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7428)
[0000][PE] mean and std.dev: (1635.09, 1135.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 418.039 CPU sec, 23.399 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517296, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 1064, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5181)
[0000][PE] mean and std.dev: (1251.04, 1115.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.46, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1196, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5484)
[0000][PE] mean and std.dev: (1501.52, 825.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 414.631 CPU sec, 23.306 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517357, 0, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 552, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3690)
[0000][PE] mean and std.dev: (885.38, 725.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.32, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1466, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4704)
[0000][PE] mean and std.dev: (1514.58, 900.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 416.433 CPU sec, 23.365 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517204, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 475, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2794)
[0000][PE] mean and std.dev: (722.83, 587.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.28, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1276, 2546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5442)
[0000][PE] mean and std.dev: (1854.76, 1090.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 415.865 CPU sec, 23.323 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516986, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 416, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4133)
[0000][PE] mean and std.dev: (906.61, 984.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.24, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1209, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (1266.85, 418.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 408.087 CPU sec, 22.806 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517185, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 462, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3952)
[0000][PE] mean and std.dev: (803.65, 713.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.19, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (635, 1328, 2916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7478)
[0000][PE] mean and std.dev: (1912.58, 1893.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 417.279 CPU sec, 23.440 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517284, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 637, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3112)
[0000][PE] mean and std.dev: (819.59, 675.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.48, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1733, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5185)
[0000][PE] mean and std.dev: (1646.95, 954.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 411.741 CPU sec, 23.076 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 517140, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 532, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2859)
[0000][PE] mean and std.dev: (698.57, 529.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1307, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4402)
[0000][PE] mean and std.dev: (1505.75, 800.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 411.203 CPU sec, 23.009 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517453, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 850, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3598)
[0000][PE] mean and std.dev: (952.97, 765.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1291, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3076)
[0000][PE] mean and std.dev: (1308.12, 485.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 411.134 CPU sec, 23.108 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517235, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (482, 1307, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5783)
[0000][PE] mean and std.dev: (1400.53, 1216.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.25, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1571, 2532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6066)
[0000][PE] mean and std.dev: (1595.87, 1011.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 413.636 CPU sec, 23.185 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517360, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 808, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4963)
[0000][PE] mean and std.dev: (1183.56, 1024.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.41, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1458, 2622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5904)
[0000][PE] mean and std.dev: (1696.25, 1027.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 412.525 CPU sec, 23.134 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517323, 7, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 475, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3108)
[0000][PE] mean and std.dev: (723.91, 713.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1418, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5805)
[0000][PE] mean and std.dev: (1687.84, 1127.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 411.908 CPU sec, 23.066 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516892, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 1152, 2603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7087)
[0000][PE] mean and std.dev: (1873.81, 1838.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.99, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1215, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3072)
[0000][PE] mean and std.dev: (1197.50, 420.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 414.206 CPU sec, 23.192 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516994, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 649, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (890.31, 717.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.73, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1336, 2905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7045)
[0000][PE] mean and std.dev: (1515.96, 1061.98)
[0000][PE] low and high boundaries for proper pairs: (1, 9115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 416.410 CPU sec, 23.353 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517122, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 741, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3257)
[0000][PE] mean and std.dev: (747.33, 652.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.48, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1530, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4436)
[0000][PE] mean and std.dev: (1396.50, 507.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 414.058 CPU sec, 23.238 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516860, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 577, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2710)
[0000][PE] mean and std.dev: (655.27, 547.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1388, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5711)
[0000][PE] mean and std.dev: (1697.27, 1264.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 412.928 CPU sec, 23.108 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516882, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 641, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3724)
[0000][PE] mean and std.dev: (790.44, 579.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1543, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4968)
[0000][PE] mean and std.dev: (1501.30, 897.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 417.414 CPU sec, 23.425 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517494, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 451, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2497)
[0000][PE] mean and std.dev: (600.84, 456.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1659, 2452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5042)
[0000][PE] mean and std.dev: (1749.87, 979.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 408.279 CPU sec, 22.873 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517008, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 687, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2505)
[0000][PE] mean and std.dev: (715.61, 518.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.14, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1343, 2737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6637)
[0000][PE] mean and std.dev: (1839.00, 1285.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 413.491 CPU sec, 23.142 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517614, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 745, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (987.36, 921.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.37, 119.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (607, 1537, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5686)
[0000][PE] mean and std.dev: (1566.84, 1040.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 410.405 CPU sec, 23.042 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517382, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 568, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (813.00, 611.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.82, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1396, 2768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6374)
[0000][PE] mean and std.dev: (1699.67, 1387.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 411.453 CPU sec, 23.051 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517633, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 536, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2176)
[0000][PE] mean and std.dev: (675.72, 511.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.05, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1440, 1847, 2319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4077)
[0000][PE] mean and std.dev: (1786.00, 748.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 412.714 CPU sec, 23.117 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517599, 2, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 489, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (779.22, 655.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.35, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1236, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4338)
[0000][PE] mean and std.dev: (1390.45, 915.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 404.121 CPU sec, 22.649 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517362, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 410, 712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1600)
[0000][PE] mean and std.dev: (517.63, 412.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.97, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1183, 2558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5890)
[0000][PE] mean and std.dev: (1605.57, 1152.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 409.126 CPU sec, 22.915 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517293, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 907, 2716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7422)
[0000][PE] mean and std.dev: (1528.63, 1617.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.22, 119.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1297, 2760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6460)
[0000][PE] mean and std.dev: (1856.62, 1288.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 411.963 CPU sec, 23.220 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517501, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 444, 1293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3269)
[0000][PE] mean and std.dev: (701.92, 583.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.05, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1457, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4180)
[0000][PE] mean and std.dev: (1540.11, 859.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 413.179 CPU sec, 23.197 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517149, 9, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 483, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (814.37, 739.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.31, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1718, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5212)
[0000][PE] mean and std.dev: (1845.64, 996.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 408.920 CPU sec, 22.909 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516966, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 867, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6366)
[0000][PE] mean and std.dev: (1098.18, 978.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1829, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4827)
[0000][PE] mean and std.dev: (1690.72, 972.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 412.613 CPU sec, 23.243 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517014, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 750, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3340)
[0000][PE] mean and std.dev: (860.81, 682.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.36, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1311, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3750)
[0000][PE] mean and std.dev: (1301.06, 678.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 406.869 CPU sec, 22.744 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517393, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 559, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3573)
[0000][PE] mean and std.dev: (759.78, 622.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1521, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5033)
[0000][PE] mean and std.dev: (1538.47, 635.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 408.629 CPU sec, 22.885 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517029, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 574, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3794)
[0000][PE] mean and std.dev: (866.84, 825.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.26, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1787, 3243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7333)
[0000][PE] mean and std.dev: (2351.91, 1682.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 405.240 CPU sec, 22.820 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 517512, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 763, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3503)
[0000][PE] mean and std.dev: (854.83, 752.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.24, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1372, 2605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5861)
[0000][PE] mean and std.dev: (1927.41, 1505.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 405.287 CPU sec, 22.676 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516756, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 899, 2073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5561)
[0000][PE] mean and std.dev: (1109.19, 954.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.43, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1392, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4187)
[0000][PE] mean and std.dev: (1530.04, 894.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 411.991 CPU sec, 23.039 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517252, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 964, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3487)
[0000][PE] mean and std.dev: (902.70, 546.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1395, 1577, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5328)
[0000][PE] mean and std.dev: (1952.04, 937.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 412.043 CPU sec, 23.113 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 516624, 9, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 413, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3055)
[0000][PE] mean and std.dev: (792.85, 818.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.13, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1493, 2412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5398)
[0000][PE] mean and std.dev: (1652.75, 1038.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 410.858 CPU sec, 22.999 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517084, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 884, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (1040.17, 861.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1572, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4294)
[0000][PE] mean and std.dev: (1442.12, 778.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 419.408 CPU sec, 23.703 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517674, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 514, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5319)
[0000][PE] mean and std.dev: (1000.76, 1026.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1389, 1906, 3607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8043)
[0000][PE] mean and std.dev: (2709.32, 1816.86)
[0000][PE] low and high boundaries for proper pairs: (1, 10261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 403.395 CPU sec, 22.569 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517165, 1, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 876, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4588)
[0000][PE] mean and std.dev: (1056.77, 1025.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.14, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1509, 2443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5445)
[0000][PE] mean and std.dev: (1798.06, 1123.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 409.339 CPU sec, 23.052 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517763, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 501, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4748)
[0000][PE] mean and std.dev: (1076.69, 1258.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.59, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1384, 2717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6401)
[0000][PE] mean and std.dev: (1678.93, 1294.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 408.177 CPU sec, 22.897 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517242, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 746, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4372)
[0000][PE] mean and std.dev: (1150.93, 1103.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.48, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1621, 3384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8222)
[0000][PE] mean and std.dev: (2224.79, 1839.63)
[0000][PE] low and high boundaries for proper pairs: (1, 10641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 411.966 CPU sec, 23.084 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517553, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 630, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (892.85, 701.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.27, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1621, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4228)
[0000][PE] mean and std.dev: (1744.12, 982.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 410.549 CPU sec, 23.112 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517191, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 779, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (978.33, 887.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1584, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (1506.14, 761.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 406.182 CPU sec, 22.712 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 516756, 8, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 507, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3064)
[0000][PE] mean and std.dev: (760.78, 693.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.44, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1107, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3726)
[0000][PE] mean and std.dev: (1104.57, 668.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 416.914 CPU sec, 23.359 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516823, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 512, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2893)
[0000][PE] mean and std.dev: (782.69, 696.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.19, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1377, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4222)
[0000][PE] mean and std.dev: (1629.68, 748.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 414.251 CPU sec, 23.374 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 517526, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 902, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3682)
[0000][PE] mean and std.dev: (1016.44, 844.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.51, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1300, 2804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6100)
[0000][PE] mean and std.dev: (1583.21, 913.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 413.593 CPU sec, 23.196 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516600, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 1053, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (940.15, 743.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1787, 3264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7562)
[0000][PE] mean and std.dev: (2035.57, 1210.76)
[0000][PE] low and high boundaries for proper pairs: (1, 9711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 413.542 CPU sec, 23.264 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517504, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 623, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3364)
[0000][PE] mean and std.dev: (880.40, 691.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.93, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1399, 2578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5840)
[0000][PE] mean and std.dev: (1748.86, 1138.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 413.548 CPU sec, 23.224 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516725, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 395, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2785)
[0000][PE] mean and std.dev: (688.55, 631.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1171, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2506)
[0000][PE] mean and std.dev: (1074.74, 464.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 408.773 CPU sec, 22.919 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516988, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 730, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (801.64, 656.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.13, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1169, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (1094.92, 480.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 411.416 CPU sec, 23.061 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517081, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 686, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4110)
[0000][PE] mean and std.dev: (857.37, 713.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1301, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (1217.09, 680.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 414.332 CPU sec, 23.201 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517067, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 443, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (847.76, 765.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1235, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3737)
[0000][PE] mean and std.dev: (1249.65, 692.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 408.137 CPU sec, 22.861 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516928, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 692, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4274)
[0000][PE] mean and std.dev: (940.08, 813.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.12, 119.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1375, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4832)
[0000][PE] mean and std.dev: (1547.54, 1042.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 410.875 CPU sec, 23.185 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516883, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 489, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2432)
[0000][PE] mean and std.dev: (650.10, 446.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.85, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1406, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (1515.96, 651.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 411.553 CPU sec, 23.049 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205304
	[0000][ M::kt_pipeline] read 1205304 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517044, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 617, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2343)
[0000][PE] mean and std.dev: (648.38, 474.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1775, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4440)
[0000][PE] mean and std.dev: (1612.50, 861.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 415.052 CPU sec, 23.387 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517607, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 402, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2285)
[0000][PE] mean and std.dev: (646.19, 596.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1668, 2817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6221)
[0000][PE] mean and std.dev: (1890.43, 1272.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205304 reads in 410.251 CPU sec, 23.014 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517452, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 496, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (809.95, 758.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 980, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3432)
[0000][PE] mean and std.dev: (1002.32, 660.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4345)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 408.486 CPU sec, 22.857 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517320, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 356, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3146)
[0000][PE] mean and std.dev: (657.66, 702.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.45, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1307, 1541, 2902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6092)
[0000][PE] mean and std.dev: (1502.11, 559.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 410.679 CPU sec, 23.004 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517178, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 430, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (717.60, 642.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.14, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1454, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (1600.17, 808.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 411.835 CPU sec, 23.142 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517402, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 496, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3750)
[0000][PE] mean and std.dev: (884.04, 872.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1290, 2726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6580)
[0000][PE] mean and std.dev: (1697.80, 1066.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 412.951 CPU sec, 23.138 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 517193, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 652, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (941.34, 868.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.30, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1638, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4506)
[0000][PE] mean and std.dev: (1640.13, 665.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 411.293 CPU sec, 23.014 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517249, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 863, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4802)
[0000][PE] mean and std.dev: (1046.35, 942.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.14, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1770, 2560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5542)
[0000][PE] mean and std.dev: (1787.76, 876.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 410.636 CPU sec, 23.006 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517379, 4, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 441, 1293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3575)
[0000][PE] mean and std.dev: (774.92, 757.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1448, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (1478.07, 743.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 411.540 CPU sec, 23.091 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517829, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 443, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3025)
[0000][PE] mean and std.dev: (732.39, 666.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 119.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1395, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5221)
[0000][PE] mean and std.dev: (1629.74, 1176.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 411.992 CPU sec, 23.077 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516950, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 619, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (840.89, 766.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.41, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1174, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (1267.25, 739.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 415.290 CPU sec, 23.274 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517261, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 433, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2844)
[0000][PE] mean and std.dev: (517.89, 423.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.18, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1390, 2898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6704)
[0000][PE] mean and std.dev: (2154.39, 1656.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 411.182 CPU sec, 23.128 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518132, 5, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 405, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5446)
[0000][PE] mean and std.dev: (1146.88, 1308.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.08, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1289, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3808)
[0000][PE] mean and std.dev: (1282.50, 638.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 411.114 CPU sec, 23.028 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517230, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1089, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5148)
[0000][PE] mean and std.dev: (996.57, 798.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.01, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1744, 2714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5928)
[0000][PE] mean and std.dev: (1920.96, 979.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 415.576 CPU sec, 23.294 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517110, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 473, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2664)
[0000][PE] mean and std.dev: (670.07, 499.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.05, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1443, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4885)
[0000][PE] mean and std.dev: (1651.61, 1028.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 415.393 CPU sec, 23.334 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517314, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 359, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2900)
[0000][PE] mean and std.dev: (587.49, 554.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.24, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1314, 1791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3779)
[0000][PE] mean and std.dev: (1248.45, 667.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 412.209 CPU sec, 23.145 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517145, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 417, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1983)
[0000][PE] mean and std.dev: (539.64, 415.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.16, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1429, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3362)
[0000][PE] mean and std.dev: (1393.39, 636.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 405.918 CPU sec, 22.708 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517694, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 413, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2919)
[0000][PE] mean and std.dev: (743.73, 684.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 1497, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4370)
[0000][PE] mean and std.dev: (1676.64, 801.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 409.057 CPU sec, 22.931 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517507, 2, 40)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 799, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2715)
[0000][PE] mean and std.dev: (858.11, 696.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.98, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1183, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5004)
[0000][PE] mean and std.dev: (1303.42, 659.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 410.726 CPU sec, 23.067 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517119, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 617, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2965)
[0000][PE] mean and std.dev: (710.38, 568.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.34, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1556, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5157)
[0000][PE] mean and std.dev: (1664.24, 843.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 407.043 CPU sec, 22.752 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517014, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 354, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3716)
[0000][PE] mean and std.dev: (632.30, 603.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (582, 1245, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5463)
[0000][PE] mean and std.dev: (1279.06, 817.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 413.523 CPU sec, 23.183 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517507, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 485, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (865.83, 822.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.34, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1309, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5547)
[0000][PE] mean and std.dev: (1500.67, 975.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 407.954 CPU sec, 22.862 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517444, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 823, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (1157.71, 1060.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.28, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1058, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4058)
[0000][PE] mean and std.dev: (1213.35, 775.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 408.944 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517236, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 935, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4875)
[0000][PE] mean and std.dev: (1196.72, 1066.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.30, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1216, 2027, 3188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7132)
[0000][PE] mean and std.dev: (2177.19, 1544.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 410.318 CPU sec, 22.983 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517523, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 784, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3975)
[0000][PE] mean and std.dev: (881.47, 766.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.28, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1399, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3849)
[0000][PE] mean and std.dev: (1449.38, 656.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 411.452 CPU sec, 23.015 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517009, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 790, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5821)
[0000][PE] mean and std.dev: (1306.89, 1486.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1547, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4598)
[0000][PE] mean and std.dev: (1508.15, 673.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 415.186 CPU sec, 23.363 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517217, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 441, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2463)
[0000][PE] mean and std.dev: (661.16, 591.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.30, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1157, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5151)
[0000][PE] mean and std.dev: (1381.64, 865.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 423.567 CPU sec, 23.930 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517265, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 528, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2700)
[0000][PE] mean and std.dev: (688.49, 525.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.23, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1420, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4826)
[0000][PE] mean and std.dev: (1657.62, 857.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 411.207 CPU sec, 23.079 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517183, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 516, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4819)
[0000][PE] mean and std.dev: (1168.88, 1145.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.47, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1216, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3894)
[0000][PE] mean and std.dev: (1396.59, 840.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 416.665 CPU sec, 23.358 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205324
	[0000][ M::kt_pipeline] read 1205324 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517304, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 1051, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4882)
[0000][PE] mean and std.dev: (1142.38, 854.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1621, 2489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5537)
[0000][PE] mean and std.dev: (1692.58, 978.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 412.731 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517460, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 703, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3626)
[0000][PE] mean and std.dev: (873.88, 745.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.96, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1349, 2807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6553)
[0000][PE] mean and std.dev: (1819.17, 1257.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205324 reads in 418.863 CPU sec, 23.662 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516675, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 494, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (974.51, 1075.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.36, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 1400, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3934)
[0000][PE] mean and std.dev: (1156.92, 648.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 414.251 CPU sec, 23.258 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516866, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 529, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3580)
[0000][PE] mean and std.dev: (773.58, 640.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.42, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (665, 1482, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5102)
[0000][PE] mean and std.dev: (1596.90, 1204.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 412.265 CPU sec, 23.090 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517341, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 473, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (775.33, 745.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1460, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5386)
[0000][PE] mean and std.dev: (1565.70, 1127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 414.932 CPU sec, 23.312 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517067, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 354, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2970)
[0000][PE] mean and std.dev: (677.47, 702.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.01, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1492, 2259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5079)
[0000][PE] mean and std.dev: (1582.28, 1096.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 412.258 CPU sec, 23.086 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517492, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 493, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2805)
[0000][PE] mean and std.dev: (734.73, 677.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1140, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (1331.64, 942.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 416.707 CPU sec, 23.356 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517462, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 483, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2176)
[0000][PE] mean and std.dev: (551.41, 397.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1137, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4145)
[0000][PE] mean and std.dev: (1276.26, 758.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 414.277 CPU sec, 23.310 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516814, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 701, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4901)
[0000][PE] mean and std.dev: (1107.82, 1006.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.04, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1157, 2423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5721)
[0000][PE] mean and std.dev: (1499.62, 1165.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 414.470 CPU sec, 23.325 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517204, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 458, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4269)
[0000][PE] mean and std.dev: (807.21, 723.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.25, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1413, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4256)
[0000][PE] mean and std.dev: (1663.12, 958.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 414.345 CPU sec, 23.296 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517695, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 360, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2499)
[0000][PE] mean and std.dev: (549.52, 583.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1411, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3987)
[0000][PE] mean and std.dev: (1444.29, 604.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 408.494 CPU sec, 22.845 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517059, 10, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 439, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3858)
[0000][PE] mean and std.dev: (865.83, 863.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.32, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (134, 1141, 3599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10529)
[0000][PE] mean and std.dev: (1886.90, 2158.61)
[0000][PE] low and high boundaries for proper pairs: (1, 13994)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (548, 1098, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3611)
[0000][PE] mean and std.dev: (1159.59, 665.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 412.180 CPU sec, 23.138 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517126, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 665, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3706)
[0000][PE] mean and std.dev: (757.33, 593.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.12, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1458, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4327)
[0000][PE] mean and std.dev: (1548.32, 798.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 412.966 CPU sec, 23.180 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517251, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 620, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4398)
[0000][PE] mean and std.dev: (911.70, 947.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.02, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1611, 2612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5946)
[0000][PE] mean and std.dev: (1526.26, 780.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 412.180 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205224
	[0000][ M::kt_pipeline] read 1205224 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517191, 8, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 539, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (791.14, 718.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.18, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1289, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3562)
[0000][PE] mean and std.dev: (1276.65, 684.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 410.380 CPU sec, 22.978 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517436, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 667, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (1039.17, 888.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.51, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1409, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4255)
[0000][PE] mean and std.dev: (1550.25, 780.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205224 reads in 411.195 CPU sec, 23.062 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205304
	[0000][ M::kt_pipeline] read 1205304 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517386, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 783, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3027)
[0000][PE] mean and std.dev: (802.09, 665.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.29, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1512, 3635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9019)
[0000][PE] mean and std.dev: (2294.73, 1662.38)
[0000][PE] low and high boundaries for proper pairs: (1, 11711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 415.377 CPU sec, 23.286 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 517231, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 696, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (772.50, 726.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1457, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4857)
[0000][PE] mean and std.dev: (1675.64, 1149.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205304 reads in 417.936 CPU sec, 23.466 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517030, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 660, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (1047.74, 920.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.34, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1227, 2448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5448)
[0000][PE] mean and std.dev: (1484.25, 947.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 411.510 CPU sec, 23.037 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517270, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 918, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4891)
[0000][PE] mean and std.dev: (1076.50, 925.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1484, 2746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6134)
[0000][PE] mean and std.dev: (1882.72, 1063.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 407.825 CPU sec, 22.847 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517039, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 990, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5790)
[0000][PE] mean and std.dev: (1312.26, 1213.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.44, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1343, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (1259.85, 525.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 411.476 CPU sec, 23.068 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517435, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 497, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2804)
[0000][PE] mean and std.dev: (757.67, 608.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1121, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2437)
[0000][PE] mean and std.dev: (989.74, 370.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 409.716 CPU sec, 22.897 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517182, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 753, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3547)
[0000][PE] mean and std.dev: (900.89, 759.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.27, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1268, 1802, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4832)
[0000][PE] mean and std.dev: (1684.72, 892.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 410.770 CPU sec, 23.013 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516708, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 369, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4442)
[0000][PE] mean and std.dev: (886.28, 917.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.16, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 1408, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3732)
[0000][PE] mean and std.dev: (1330.36, 794.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 412.149 CPU sec, 23.094 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517038, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 711, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4886)
[0000][PE] mean and std.dev: (1036.55, 896.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.39, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1518, 3276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7580)
[0000][PE] mean and std.dev: (1877.92, 1256.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 410.566 CPU sec, 22.987 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517265, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 528, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5204)
[0000][PE] mean and std.dev: (1056.44, 995.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1453, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3261)
[0000][PE] mean and std.dev: (1221.00, 558.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 412.344 CPU sec, 23.094 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516841, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 687, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5076)
[0000][PE] mean and std.dev: (1210.50, 1194.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.26, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1154, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4066)
[0000][PE] mean and std.dev: (1402.00, 958.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 411.837 CPU sec, 23.105 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517512, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 381, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2128)
[0000][PE] mean and std.dev: (584.75, 464.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.99, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1470, 2564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5688)
[0000][PE] mean and std.dev: (1599.37, 1062.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 410.191 CPU sec, 22.965 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517113, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 416, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2013)
[0000][PE] mean and std.dev: (548.21, 410.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.59, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1155, 1693, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (1531.29, 784.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 410.951 CPU sec, 23.032 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516973, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 424, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (723.82, 618.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.44, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1204, 1405, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3340)
[0000][PE] mean and std.dev: (1440.00, 671.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 409.749 CPU sec, 22.989 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517744, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 713, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3578)
[0000][PE] mean and std.dev: (792.42, 689.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1342, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4000)
[0000][PE] mean and std.dev: (1346.27, 724.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 407.097 CPU sec, 22.832 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517102, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 393, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2814)
[0000][PE] mean and std.dev: (662.21, 569.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.30, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1305, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (1489.19, 1096.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 413.432 CPU sec, 23.159 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516910, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 791, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4068)
[0000][PE] mean and std.dev: (877.28, 705.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1509, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (295, 2525)
[0000][PE] mean and std.dev: (1439.38, 378.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 418.386 CPU sec, 23.470 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517174, 7, 45)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 533, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2550)
[0000][PE] mean and std.dev: (685.32, 546.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.38, 119.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1270, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3820)
[0000][PE] mean and std.dev: (1270.57, 716.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 410.599 CPU sec, 23.035 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516934, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 905, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5712)
[0000][PE] mean and std.dev: (1263.94, 1070.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.37, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1347, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (1441.31, 780.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 414.138 CPU sec, 23.204 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517349, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 497, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2559)
[0000][PE] mean and std.dev: (651.15, 486.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.34, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1606, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3785)
[0000][PE] mean and std.dev: (1592.70, 655.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 411.694 CPU sec, 23.084 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517234, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 645, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5445)
[0000][PE] mean and std.dev: (1144.07, 1143.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.09, 119.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1247, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4977)
[0000][PE] mean and std.dev: (1686.54, 1082.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 414.341 CPU sec, 23.246 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516703, 3, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 887, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4597)
[0000][PE] mean and std.dev: (970.63, 694.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1282, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3926)
[0000][PE] mean and std.dev: (1375.58, 678.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 410.930 CPU sec, 23.052 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517146, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 584, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2885)
[0000][PE] mean and std.dev: (832.19, 706.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1314, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4325)
[0000][PE] mean and std.dev: (1515.59, 1012.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 415.290 CPU sec, 23.322 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517372, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 841, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3494)
[0000][PE] mean and std.dev: (882.59, 724.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.35, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1690, 2571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5729)
[0000][PE] mean and std.dev: (1694.08, 1015.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 413.022 CPU sec, 23.169 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517647, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 609, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2471)
[0000][PE] mean and std.dev: (627.06, 478.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.97, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1079, 2302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5266)
[0000][PE] mean and std.dev: (1301.00, 787.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 411.601 CPU sec, 23.020 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517059, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 456, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (817.72, 740.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1441, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4351)
[0000][PE] mean and std.dev: (1623.44, 913.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 410.744 CPU sec, 23.010 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516633, 8, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 966, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (1265.73, 1141.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1749, 2550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5548)
[0000][PE] mean and std.dev: (1762.81, 1045.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 410.863 CPU sec, 23.019 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517065, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 894, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (936.19, 652.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.17, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1497, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5001)
[0000][PE] mean and std.dev: (1726.50, 1224.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 412.362 CPU sec, 23.066 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517084, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 710, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5614)
[0000][PE] mean and std.dev: (1158.80, 998.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.30, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1409, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (69, 2734)
[0000][PE] mean and std.dev: (1270.65, 476.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 413.284 CPU sec, 23.214 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517139, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 1073, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4463)
[0000][PE] mean and std.dev: (969.48, 841.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.22, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1473, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5306)
[0000][PE] mean and std.dev: (1520.00, 836.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 415.783 CPU sec, 23.343 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517343, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 408, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2591)
[0000][PE] mean and std.dev: (666.95, 612.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.34, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1646, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3877)
[0000][PE] mean and std.dev: (1579.65, 879.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 412.889 CPU sec, 23.141 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517172, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 375, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4495)
[0000][PE] mean and std.dev: (752.63, 775.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1530, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (1583.28, 622.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 415.154 CPU sec, 23.220 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517190, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 877, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (857.09, 631.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.17, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1062, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2986)
[0000][PE] mean and std.dev: (1085.58, 446.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 410.955 CPU sec, 23.011 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516661, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 482, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2839)
[0000][PE] mean and std.dev: (689.57, 560.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1392, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3601)
[0000][PE] mean and std.dev: (1356.80, 612.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4430)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 410.073 CPU sec, 22.943 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517259, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 796, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (823.73, 642.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.43, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1417, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4132)
[0000][PE] mean and std.dev: (1557.33, 822.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 414.200 CPU sec, 23.249 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517263, 10, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 812, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3767)
[0000][PE] mean and std.dev: (1041.26, 959.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.45, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (405, 961, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2901)
[0000][PE] mean and std.dev: (994.30, 740.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3958)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1225, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2665)
[0000][PE] mean and std.dev: (1080.80, 456.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 410.673 CPU sec, 22.971 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517321, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 932, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3991)
[0000][PE] mean and std.dev: (1109.24, 957.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1254, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5007)
[0000][PE] mean and std.dev: (1575.60, 991.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 416.549 CPU sec, 23.440 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517399, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 502, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3515)
[0000][PE] mean and std.dev: (811.20, 727.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1241, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (1293.00, 794.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 414.736 CPU sec, 23.274 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517087, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 1237, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4960)
[0000][PE] mean and std.dev: (1228.42, 902.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1343, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3891)
[0000][PE] mean and std.dev: (1288.67, 584.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 411.375 CPU sec, 23.032 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517362, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 480, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3046)
[0000][PE] mean and std.dev: (731.57, 597.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.44, 119.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 2056, 2898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6272)
[0000][PE] mean and std.dev: (2065.04, 1070.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 408.597 CPU sec, 22.907 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517615, 3, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (604, 1134, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3802)
[0000][PE] mean and std.dev: (1107.69, 747.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1518, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4156)
[0000][PE] mean and std.dev: (1496.61, 707.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 404.778 CPU sec, 22.671 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517335, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 692, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (727.91, 484.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.45, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1342, 2349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5005)
[0000][PE] mean and std.dev: (1512.43, 838.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 424.773 CPU sec, 24.016 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517332, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 647, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (839.28, 700.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1394, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5175)
[0000][PE] mean and std.dev: (1548.25, 930.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 410.772 CPU sec, 22.986 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517471, 3, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 452, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2973)
[0000][PE] mean and std.dev: (766.45, 689.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.35, 119.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1177, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2957)
[0000][PE] mean and std.dev: (1179.52, 559.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 412.107 CPU sec, 23.074 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517436, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 984, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4151)
[0000][PE] mean and std.dev: (1026.24, 849.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.68, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1259, 1624, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4862)
[0000][PE] mean and std.dev: (1753.14, 736.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 413.338 CPU sec, 23.173 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517372, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 997, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5678)
[0000][PE] mean and std.dev: (976.21, 812.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.14, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1222, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2543)
[0000][PE] mean and std.dev: (1096.65, 343.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 410.864 CPU sec, 23.044 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516854, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 907, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3761)
[0000][PE] mean and std.dev: (971.12, 827.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1199, 1442, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3938)
[0000][PE] mean and std.dev: (1601.73, 603.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 409.625 CPU sec, 22.908 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517048, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 387, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2965)
[0000][PE] mean and std.dev: (695.59, 648.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.04, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1534, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4071)
[0000][PE] mean and std.dev: (1477.32, 708.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 414.703 CPU sec, 23.227 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517229, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 690, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2721)
[0000][PE] mean and std.dev: (669.16, 596.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.42, 120.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (805, 1206, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (1265.85, 711.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 410.847 CPU sec, 22.984 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517013, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 781, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2943)
[0000][PE] mean and std.dev: (814.03, 628.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.13, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1622, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4881)
[0000][PE] mean and std.dev: (1542.85, 859.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6188)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 410.848 CPU sec, 22.988 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517129, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 1012, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5347)
[0000][PE] mean and std.dev: (1113.12, 947.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1085, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2670)
[0000][PE] mean and std.dev: (1046.11, 535.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 412.696 CPU sec, 23.098 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517337, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 746, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (1024.32, 1022.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1463, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3731)
[0000][PE] mean and std.dev: (1438.38, 699.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 409.619 CPU sec, 22.964 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517098, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 785, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4030)
[0000][PE] mean and std.dev: (953.94, 689.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.87, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1589, 2795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6483)
[0000][PE] mean and std.dev: (1638.36, 1016.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 411.882 CPU sec, 23.069 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517115, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 827, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4556)
[0000][PE] mean and std.dev: (1011.74, 819.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.32, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1240, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (1207.19, 728.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 412.081 CPU sec, 23.091 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517235, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 811, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3853)
[0000][PE] mean and std.dev: (941.84, 759.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.40, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1029, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4908)
[0000][PE] mean and std.dev: (1408.35, 1242.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 412.836 CPU sec, 23.163 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517300, 5, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 916, 2534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7032)
[0000][PE] mean and std.dev: (1332.26, 1229.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.16, 119.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1648, 2548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5494)
[0000][PE] mean and std.dev: (1864.77, 1168.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 420.521 CPU sec, 23.782 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517217, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 455, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4742)
[0000][PE] mean and std.dev: (809.11, 824.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.14, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1199, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4615)
[0000][PE] mean and std.dev: (998.06, 534.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 413.815 CPU sec, 23.188 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 516943, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 826, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (978.74, 863.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.29, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1203, 1661, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (1669.11, 796.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 413.277 CPU sec, 23.115 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516933, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 674, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3928)
[0000][PE] mean and std.dev: (804.21, 795.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.41, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1643, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4465)
[0000][PE] mean and std.dev: (1664.38, 874.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 414.708 CPU sec, 23.220 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517310, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 961, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (947.71, 732.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1725, 2306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5260)
[0000][PE] mean and std.dev: (1480.22, 833.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 415.579 CPU sec, 23.277 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517108, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 568, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6181)
[0000][PE] mean and std.dev: (1072.59, 1176.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.09, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1346, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4275)
[0000][PE] mean and std.dev: (1489.48, 567.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 414.762 CPU sec, 23.294 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517042, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 423, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2381)
[0000][PE] mean and std.dev: (676.74, 556.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.25, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (628, 1553, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4090)
[0000][PE] mean and std.dev: (949.77, 628.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 409.609 CPU sec, 22.926 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517117, 7, 41)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 839, 2306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6290)
[0000][PE] mean and std.dev: (1369.36, 1356.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.24, 119.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1547, 2601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5797)
[0000][PE] mean and std.dev: (1703.26, 1200.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 410.669 CPU sec, 23.024 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517308, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 542, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3034)
[0000][PE] mean and std.dev: (819.03, 694.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1240, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3387)
[0000][PE] mean and std.dev: (1089.16, 607.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 415.321 CPU sec, 23.232 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516822, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 737, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (1035.29, 920.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.39, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1300, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4965)
[0000][PE] mean and std.dev: (1504.86, 874.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 415.625 CPU sec, 23.294 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517143, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 470, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3612)
[0000][PE] mean and std.dev: (768.14, 681.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.35, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1271, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4228)
[0000][PE] mean and std.dev: (1382.86, 801.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 412.710 CPU sec, 23.135 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517401, 5, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 623, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5011)
[0000][PE] mean and std.dev: (871.84, 849.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1252, 1758, 2417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4747)
[0000][PE] mean and std.dev: (1693.29, 645.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 412.123 CPU sec, 23.045 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 517487, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 516, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3780)
[0000][PE] mean and std.dev: (729.22, 663.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1406, 1663, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3566)
[0000][PE] mean and std.dev: (1725.32, 637.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 412.916 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517540, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 363, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2825)
[0000][PE] mean and std.dev: (627.19, 539.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.89, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1528, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (1569.78, 976.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 409.134 CPU sec, 22.953 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 516874, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 696, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3899)
[0000][PE] mean and std.dev: (900.20, 845.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.08, 119.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1541, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4368)
[0000][PE] mean and std.dev: (1442.87, 775.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 411.647 CPU sec, 23.060 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517020, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 980, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (1047.38, 953.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.16, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1702, 3565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8475)
[0000][PE] mean and std.dev: (2023.96, 1626.72)
[0000][PE] low and high boundaries for proper pairs: (1, 10930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 411.837 CPU sec, 23.072 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517122, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 508, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2569)
[0000][PE] mean and std.dev: (600.18, 470.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.61, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 1047, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5478)
[0000][PE] mean and std.dev: (1326.30, 989.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 414.851 CPU sec, 23.237 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517031, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 831, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3883)
[0000][PE] mean and std.dev: (903.57, 757.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.89, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1418, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3230)
[0000][PE] mean and std.dev: (1335.59, 589.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 411.165 CPU sec, 22.982 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516902, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 474, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4121)
[0000][PE] mean and std.dev: (889.07, 1013.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.21, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1219, 1540, 2041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3685)
[0000][PE] mean and std.dev: (1612.41, 667.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 414.322 CPU sec, 23.157 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517296, 9, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 873, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4412)
[0000][PE] mean and std.dev: (1062.00, 941.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.48, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1396, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3031)
[0000][PE] mean and std.dev: (1394.29, 655.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 414.554 CPU sec, 23.267 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 517715, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 1013, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3973)
[0000][PE] mean and std.dev: (1006.70, 734.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.28, 119.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1139, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (1219.58, 635.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 420.601 CPU sec, 23.756 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205324
	[0000][ M::kt_pipeline] read 1205324 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517163, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 712, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4846)
[0000][PE] mean and std.dev: (1042.00, 1214.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1419, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (1253.47, 541.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 416.433 CPU sec, 23.437 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517171, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 575, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (833.26, 710.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1175, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4498)
[0000][PE] mean and std.dev: (1382.96, 713.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205324 reads in 409.993 CPU sec, 22.981 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517391, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 516, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5007)
[0000][PE] mean and std.dev: (1092.53, 1154.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.38, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1204, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5721)
[0000][PE] mean and std.dev: (1628.92, 1044.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 413.971 CPU sec, 23.145 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516898, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 851, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (999.83, 813.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.26, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1376, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (1339.17, 700.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 417.507 CPU sec, 23.426 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517115, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 362, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4464)
[0000][PE] mean and std.dev: (843.66, 953.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.29, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1249, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1220.39, 643.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 413.269 CPU sec, 23.147 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517466, 4, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 863, 2423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6451)
[0000][PE] mean and std.dev: (1406.27, 1458.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1245, 1565, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3471)
[0000][PE] mean and std.dev: (1594.15, 564.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 412.440 CPU sec, 23.095 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517251, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 926, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4701)
[0000][PE] mean and std.dev: (1114.46, 892.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.14, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1578, 2441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5323)
[0000][PE] mean and std.dev: (1724.36, 1184.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 415.245 CPU sec, 23.444 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517774, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 716, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5716)
[0000][PE] mean and std.dev: (1238.26, 1334.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.38, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (668, 1047, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3761)
[0000][PE] mean and std.dev: (1258.86, 807.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4792)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 410.323 CPU sec, 23.022 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517496, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 640, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2874)
[0000][PE] mean and std.dev: (812.86, 598.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1458, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4709)
[0000][PE] mean and std.dev: (1647.52, 987.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 408.496 CPU sec, 22.836 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517502, 7, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 402, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2833)
[0000][PE] mean and std.dev: (674.39, 688.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.10, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1535, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3652)
[0000][PE] mean and std.dev: (1453.79, 577.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 409.522 CPU sec, 22.898 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517114, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 819, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4927)
[0000][PE] mean and std.dev: (1213.23, 1207.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.34, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1203, 1525, 2633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5493)
[0000][PE] mean and std.dev: (1915.00, 1009.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 422.714 CPU sec, 23.866 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517562, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 686, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (896.68, 840.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.47, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1071, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5213)
[0000][PE] mean and std.dev: (1244.40, 739.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 413.614 CPU sec, 23.157 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516994, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 377, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3983)
[0000][PE] mean and std.dev: (833.50, 838.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1303, 1610, 4057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9565)
[0000][PE] mean and std.dev: (2237.88, 1970.03)
[0000][PE] low and high boundaries for proper pairs: (1, 12319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 412.608 CPU sec, 23.123 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517218, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 964, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (965.50, 699.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1573, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3714)
[0000][PE] mean and std.dev: (1476.78, 796.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 414.064 CPU sec, 23.179 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516761, 6, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 709, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4307)
[0000][PE] mean and std.dev: (990.67, 857.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.02, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1572, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4617)
[0000][PE] mean and std.dev: (1436.83, 708.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 413.188 CPU sec, 23.126 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517801, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 887, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4695)
[0000][PE] mean and std.dev: (1217.92, 1009.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.59, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1427, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4460)
[0000][PE] mean and std.dev: (1613.70, 757.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5607)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 410.440 CPU sec, 22.986 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516862, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 480, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5918)
[0000][PE] mean and std.dev: (1062.80, 1065.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (494.94, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1487, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4179)
[0000][PE] mean and std.dev: (1541.93, 750.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 417.937 CPU sec, 23.461 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517603, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 443, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2335)
[0000][PE] mean and std.dev: (559.47, 463.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 1752, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4245)
[0000][PE] mean and std.dev: (1680.50, 892.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 415.171 CPU sec, 23.286 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517263, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 687, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3890)
[0000][PE] mean and std.dev: (952.55, 917.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.42, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1285, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2719)
[0000][PE] mean and std.dev: (1187.39, 531.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 417.682 CPU sec, 23.464 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517431, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 574, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (773.08, 750.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1661, 2470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5186)
[0000][PE] mean and std.dev: (1845.44, 1032.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 413.492 CPU sec, 23.143 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516924, 9, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (613, 1252, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4663)
[0000][PE] mean and std.dev: (1367.59, 1092.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.26, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1046, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2523)
[0000][PE] mean and std.dev: (969.30, 446.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 412.338 CPU sec, 23.054 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517049, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 396, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3176)
[0000][PE] mean and std.dev: (752.79, 637.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.32, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1254, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4160)
[0000][PE] mean and std.dev: (1561.81, 957.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 413.313 CPU sec, 23.176 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517008, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 471, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (832.10, 848.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.17, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1838, 2841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6485)
[0000][PE] mean and std.dev: (1661.11, 909.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 422.485 CPU sec, 23.842 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516936, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 803, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3641)
[0000][PE] mean and std.dev: (870.17, 687.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1466, 2950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6586)
[0000][PE] mean and std.dev: (2099.83, 1482.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 415.659 CPU sec, 23.269 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517357, 1, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 757, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4242)
[0000][PE] mean and std.dev: (845.34, 653.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.54, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1409, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (1500.38, 859.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 421.138 CPU sec, 23.707 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517123, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 399, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4393)
[0000][PE] mean and std.dev: (903.72, 1042.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.37, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1512, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4995)
[0000][PE] mean and std.dev: (1785.24, 920.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 413.215 CPU sec, 23.176 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517387, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 830, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3919)
[0000][PE] mean and std.dev: (974.48, 886.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1492, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5748)
[0000][PE] mean and std.dev: (1877.06, 1248.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 411.491 CPU sec, 23.078 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516837, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 613, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2960)
[0000][PE] mean and std.dev: (742.37, 514.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.27, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1391, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3390)
[0000][PE] mean and std.dev: (1343.86, 695.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 415.973 CPU sec, 23.343 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517150, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 447, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (810.80, 769.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.54, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1523, 2538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5462)
[0000][PE] mean and std.dev: (1758.11, 1233.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 413.866 CPU sec, 23.189 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517708, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 627, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (792.86, 736.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.11, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1420, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4040)
[0000][PE] mean and std.dev: (1392.95, 743.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 410.267 CPU sec, 23.068 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517174, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 567, 1059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2709)
[0000][PE] mean and std.dev: (661.47, 569.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.29, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1405, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (1504.21, 867.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 415.720 CPU sec, 23.348 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517256, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 337, 747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1785)
[0000][PE] mean and std.dev: (392.66, 318.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.41, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1296, 1502, 3094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6690)
[0000][PE] mean and std.dev: (1885.24, 1149.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 414.521 CPU sec, 23.252 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517193, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 442, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3467)
[0000][PE] mean and std.dev: (714.97, 577.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.48, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1177, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4789)
[0000][PE] mean and std.dev: (1320.71, 849.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 409.952 CPU sec, 22.910 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517373, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 366, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3334)
[0000][PE] mean and std.dev: (700.35, 752.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1391, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4887)
[0000][PE] mean and std.dev: (1533.46, 658.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 412.537 CPU sec, 23.186 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517177, 5, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 516, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (949.69, 878.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.15, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1428, 2521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5433)
[0000][PE] mean and std.dev: (1888.03, 1407.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 412.865 CPU sec, 23.125 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517339, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 433, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (835.63, 926.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1164, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2986)
[0000][PE] mean and std.dev: (1174.09, 581.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 415.651 CPU sec, 23.294 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516968, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 572, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (944.56, 870.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (494.94, 119.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1524, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4272)
[0000][PE] mean and std.dev: (1582.39, 795.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 412.167 CPU sec, 23.062 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 516962, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 460, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2888)
[0000][PE] mean and std.dev: (654.48, 554.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.41, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1288, 1932, 2605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5239)
[0000][PE] mean and std.dev: (1976.47, 1146.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 411.429 CPU sec, 23.007 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517323, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 761, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4744)
[0000][PE] mean and std.dev: (946.15, 913.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.96, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1373, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4850)
[0000][PE] mean and std.dev: (1694.94, 926.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 411.522 CPU sec, 23.061 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517161, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 725, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (793.24, 725.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 1753, 3020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6646)
[0000][PE] mean and std.dev: (2113.95, 1346.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 413.034 CPU sec, 23.117 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516781, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 427, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (784.55, 774.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.28, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1410, 2485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5469)
[0000][PE] mean and std.dev: (1704.45, 1028.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 414.152 CPU sec, 23.179 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517470, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 565, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3766)
[0000][PE] mean and std.dev: (835.50, 737.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.14, 119.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 1155, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (1151.67, 668.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 410.911 CPU sec, 23.068 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517533, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 492, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2583)
[0000][PE] mean and std.dev: (759.48, 643.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.91, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1419, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2989)
[0000][PE] mean and std.dev: (1427.89, 607.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 408.673 CPU sec, 22.868 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517564, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 368, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3293)
[0000][PE] mean and std.dev: (626.00, 564.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.40, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1253, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3181)
[0000][PE] mean and std.dev: (1270.62, 515.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 407.922 CPU sec, 22.812 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517250, 7, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 1032, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4307)
[0000][PE] mean and std.dev: (1175.61, 850.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.57, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1407, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (1280.81, 706.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 411.681 CPU sec, 23.040 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517175, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 491, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (918.97, 872.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1112, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (1240.96, 748.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 410.312 CPU sec, 22.986 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516944, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 435, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2724)
[0000][PE] mean and std.dev: (626.19, 505.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.52, 120.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1124, 2593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6059)
[0000][PE] mean and std.dev: (1649.04, 1254.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7792)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 423.283 CPU sec, 23.927 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517138, 8, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 749, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (850.31, 805.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.20, 119.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1402, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3457)
[0000][PE] mean and std.dev: (1434.66, 790.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 413.734 CPU sec, 23.133 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 517289, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 706, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4968)
[0000][PE] mean and std.dev: (1144.91, 1162.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1378, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5178)
[0000][PE] mean and std.dev: (1636.08, 1071.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 409.696 CPU sec, 22.962 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517179, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 766, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3688)
[0000][PE] mean and std.dev: (904.57, 728.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1376, 2844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6868)
[0000][PE] mean and std.dev: (1853.42, 1440.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 413.262 CPU sec, 23.087 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517297, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 829, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3895)
[0000][PE] mean and std.dev: (893.33, 844.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.17, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1545, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4041)
[0000][PE] mean and std.dev: (1550.52, 642.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 411.320 CPU sec, 23.040 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517306, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 645, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3060)
[0000][PE] mean and std.dev: (724.64, 666.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.57, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1372, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (1237.11, 671.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 412.096 CPU sec, 23.092 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517056, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 636, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3626)
[0000][PE] mean and std.dev: (886.80, 835.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.03, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1579, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3826)
[0000][PE] mean and std.dev: (1486.86, 654.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 417.095 CPU sec, 23.507 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 516978, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 557, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4354)
[0000][PE] mean and std.dev: (938.28, 1021.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.29, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1545, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3783)
[0000][PE] mean and std.dev: (1385.87, 649.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 415.738 CPU sec, 23.285 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517180, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 370, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2870)
[0000][PE] mean and std.dev: (662.92, 651.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.41, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1185, 1513, 2617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5481)
[0000][PE] mean and std.dev: (1792.68, 959.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 412.316 CPU sec, 23.108 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517381, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 461, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2117)
[0000][PE] mean and std.dev: (625.91, 496.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.38, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1524, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4173)
[0000][PE] mean and std.dev: (1387.48, 848.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 411.371 CPU sec, 22.995 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517065, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 419, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2466)
[0000][PE] mean and std.dev: (600.58, 533.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.63, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1292, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3500)
[0000][PE] mean and std.dev: (1268.00, 662.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 413.658 CPU sec, 23.194 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517529, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 810, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4710)
[0000][PE] mean and std.dev: (880.70, 689.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.14, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1271, 1789, 2881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6101)
[0000][PE] mean and std.dev: (2137.04, 1268.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 410.877 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516931, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 874, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4795)
[0000][PE] mean and std.dev: (931.56, 932.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.37, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1567, 2665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5865)
[0000][PE] mean and std.dev: (1775.87, 1020.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 418.896 CPU sec, 23.480 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517029, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 489, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (620.97, 548.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1607, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4727)
[0000][PE] mean and std.dev: (1700.93, 841.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 419.354 CPU sec, 23.556 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 517137, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 409, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3669)
[0000][PE] mean and std.dev: (765.35, 713.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1378, 2844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6852)
[0000][PE] mean and std.dev: (1867.71, 1482.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 413.607 CPU sec, 23.231 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516799, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 506, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3045)
[0000][PE] mean and std.dev: (825.59, 707.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1116, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4323)
[0000][PE] mean and std.dev: (1422.76, 718.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 413.618 CPU sec, 23.226 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517195, 7, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 419, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4015)
[0000][PE] mean and std.dev: (827.72, 833.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.17, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1422, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4766)
[0000][PE] mean and std.dev: (1612.68, 923.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 410.060 CPU sec, 22.932 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517086, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 898, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5020)
[0000][PE] mean and std.dev: (1073.32, 925.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1744, 3564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8630)
[0000][PE] mean and std.dev: (2563.06, 2426.86)
[0000][PE] low and high boundaries for proper pairs: (1, 12271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 413.036 CPU sec, 23.099 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517052, 10, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 481, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3231)
[0000][PE] mean and std.dev: (657.43, 579.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.39, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (736, 2409, 4814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12970)
[0000][PE] mean and std.dev: (2729.20, 2188.52)
[0000][PE] low and high boundaries for proper pairs: (1, 17048)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1481, 2861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6551)
[0000][PE] mean and std.dev: (1907.52, 1364.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 418.865 CPU sec, 23.467 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517565, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 507, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3621)
[0000][PE] mean and std.dev: (873.32, 832.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.01, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1221, 1377, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4905)
[0000][PE] mean and std.dev: (1572.32, 817.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 415.497 CPU sec, 23.237 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517591, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 491, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3421)
[0000][PE] mean and std.dev: (833.73, 736.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.39, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1199, 1738, 2966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6500)
[0000][PE] mean and std.dev: (2110.35, 1134.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 410.393 CPU sec, 23.007 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516753, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 510, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4626)
[0000][PE] mean and std.dev: (886.71, 931.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.26, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1566, 2502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5306)
[0000][PE] mean and std.dev: (1572.53, 1089.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 416.270 CPU sec, 23.337 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517040, 10, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 998, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4469)
[0000][PE] mean and std.dev: (1173.00, 880.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.39, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (285, 1331, 3858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11004)
[0000][PE] mean and std.dev: (1991.70, 1877.58)
[0000][PE] low and high boundaries for proper pairs: (1, 14577)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1402, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4932)
[0000][PE] mean and std.dev: (1408.81, 708.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 412.652 CPU sec, 23.113 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517114, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 874, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3969)
[0000][PE] mean and std.dev: (1024.21, 803.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1127, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2869)
[0000][PE] mean and std.dev: (1233.08, 455.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 416.126 CPU sec, 23.271 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517372, 9, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 732, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3415)
[0000][PE] mean and std.dev: (843.25, 704.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.02, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1468, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3943)
[0000][PE] mean and std.dev: (1383.32, 671.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 409.936 CPU sec, 23.028 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517147, 9, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 706, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4709)
[0000][PE] mean and std.dev: (1021.34, 1060.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1833, 2411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5225)
[0000][PE] mean and std.dev: (1766.44, 1008.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 412.907 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517380, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 1073, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5916)
[0000][PE] mean and std.dev: (1248.29, 1160.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.28, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1062, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4576)
[0000][PE] mean and std.dev: (1558.95, 1218.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 413.453 CPU sec, 23.133 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517412, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 481, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (761.71, 833.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.99, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1851, 2656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5818)
[0000][PE] mean and std.dev: (1953.95, 1134.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 413.714 CPU sec, 23.198 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517633, 11, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 470, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3382)
[0000][PE] mean and std.dev: (787.30, 807.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.17, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1708, 2655, 4287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9445)
[0000][PE] mean and std.dev: (2998.82, 2082.50)
[0000][PE] low and high boundaries for proper pairs: (1, 12024)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1183, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5592)
[0000][PE] mean and std.dev: (1490.12, 1176.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 423.067 CPU sec, 23.893 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 517145, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 573, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2646)
[0000][PE] mean and std.dev: (678.22, 571.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.65, 120.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1159, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (1136.90, 531.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 412.295 CPU sec, 23.122 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517015, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 783, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4859)
[0000][PE] mean and std.dev: (1071.27, 883.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.35, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1276, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3309)
[0000][PE] mean and std.dev: (1232.78, 646.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4145)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 412.717 CPU sec, 23.228 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517565, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 532, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4101)
[0000][PE] mean and std.dev: (911.38, 1053.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.34, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1350, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (1389.04, 654.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 414.362 CPU sec, 23.293 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517011, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 517, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (737.03, 628.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1429, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4026)
[0000][PE] mean and std.dev: (1516.26, 666.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5026)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 411.867 CPU sec, 23.013 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517268, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 911, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3653)
[0000][PE] mean and std.dev: (855.06, 722.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1424, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4310)
[0000][PE] mean and std.dev: (1441.93, 859.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 414.713 CPU sec, 23.206 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517062, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 396, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2627)
[0000][PE] mean and std.dev: (553.22, 482.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.64, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1694, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4492)
[0000][PE] mean and std.dev: (1704.94, 1013.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 416.897 CPU sec, 23.458 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517308, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 614, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3580)
[0000][PE] mean and std.dev: (839.61, 660.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.30, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1307, 1426, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (1560.00, 646.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 410.395 CPU sec, 22.980 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517702, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 465, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3767)
[0000][PE] mean and std.dev: (846.86, 943.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.00, 120.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1070, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (1265.53, 734.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 407.120 CPU sec, 22.805 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517463, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 350, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (666.75, 655.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.03, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1254, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (1220.82, 674.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 416.679 CPU sec, 23.444 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517462, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 679, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4892)
[0000][PE] mean and std.dev: (1073.84, 1124.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.33, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1192, 1917, 3626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8494)
[0000][PE] mean and std.dev: (2133.73, 1234.55)
[0000][PE] low and high boundaries for proper pairs: (1, 10928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 414.155 CPU sec, 23.222 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517508, 9, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 600, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3582)
[0000][PE] mean and std.dev: (923.47, 860.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1415, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4848)
[0000][PE] mean and std.dev: (1572.68, 961.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 416.458 CPU sec, 23.437 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517139, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (605, 905, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (994.85, 661.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.44, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1321, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3047)
[0000][PE] mean and std.dev: (1272.29, 539.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 410.043 CPU sec, 23.062 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517279, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 727, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3934)
[0000][PE] mean and std.dev: (925.50, 834.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.91, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1374, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3778)
[0000][PE] mean and std.dev: (1407.05, 839.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 414.466 CPU sec, 23.309 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516968, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 681, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (1010.97, 878.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.97, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1488, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4330)
[0000][PE] mean and std.dev: (1350.29, 776.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 411.959 CPU sec, 23.054 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517179, 3, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 681, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3927)
[0000][PE] mean and std.dev: (911.08, 799.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.39, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1420, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4793)
[0000][PE] mean and std.dev: (1437.38, 839.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 415.162 CPU sec, 23.341 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517507, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 346, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1778)
[0000][PE] mean and std.dev: (447.00, 332.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.20, 119.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1614, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4238)
[0000][PE] mean and std.dev: (1482.93, 812.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 409.619 CPU sec, 22.941 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 516907, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 749, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2950)
[0000][PE] mean and std.dev: (843.00, 686.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.39, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1506, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4727)
[0000][PE] mean and std.dev: (1586.50, 903.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 410.783 CPU sec, 23.008 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517671, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 753, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3488)
[0000][PE] mean and std.dev: (791.06, 557.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.37, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1130, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (1201.23, 587.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 410.929 CPU sec, 23.134 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517355, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 588, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3105)
[0000][PE] mean and std.dev: (705.67, 604.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1637, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5050)
[0000][PE] mean and std.dev: (1822.87, 1039.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 410.625 CPU sec, 22.954 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517314, 5, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 748, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (910.39, 742.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.40, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1601, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4842)
[0000][PE] mean and std.dev: (1594.66, 818.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 415.350 CPU sec, 23.394 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517077, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 968, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (1063.15, 891.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1299, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3897)
[0000][PE] mean and std.dev: (1280.60, 645.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 414.333 CPU sec, 23.389 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516920, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 449, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3848)
[0000][PE] mean and std.dev: (883.64, 756.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1419, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4566)
[0000][PE] mean and std.dev: (1378.86, 781.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 414.797 CPU sec, 23.256 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517164, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 403, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (777.88, 794.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.15, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1255, 3170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7268)
[0000][PE] mean and std.dev: (1836.19, 1149.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 410.788 CPU sec, 22.969 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517293, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 395, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3210)
[0000][PE] mean and std.dev: (688.77, 667.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.38, 119.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1238, 2822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6756)
[0000][PE] mean and std.dev: (1759.61, 1268.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 416.523 CPU sec, 23.468 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517259, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 852, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3312)
[0000][PE] mean and std.dev: (892.78, 705.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.38, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (593, 1339, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4949)
[0000][PE] mean and std.dev: (1405.64, 1080.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 411.970 CPU sec, 23.141 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517390, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 1012, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5273)
[0000][PE] mean and std.dev: (1189.29, 908.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.94, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1145, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3054)
[0000][PE] mean and std.dev: (1101.25, 491.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 414.078 CPU sec, 23.192 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517552, 2, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 445, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3248)
[0000][PE] mean and std.dev: (790.24, 763.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.47, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1338, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4416)
[0000][PE] mean and std.dev: (1453.81, 940.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 414.556 CPU sec, 23.257 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517124, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 916, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5359)
[0000][PE] mean and std.dev: (1228.98, 1186.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.35, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1306, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4570)
[0000][PE] mean and std.dev: (1414.05, 859.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 416.691 CPU sec, 23.404 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517018, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 1169, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4844)
[0000][PE] mean and std.dev: (1200.20, 1064.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1490, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4628)
[0000][PE] mean and std.dev: (1637.10, 794.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 412.863 CPU sec, 23.183 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517125, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 517, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5476)
[0000][PE] mean and std.dev: (1250.21, 1343.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1170, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4069)
[0000][PE] mean and std.dev: (1328.40, 786.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 409.752 CPU sec, 22.975 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516893, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 493, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3674)
[0000][PE] mean and std.dev: (880.90, 798.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.01, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1582, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (1604.84, 588.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 413.269 CPU sec, 23.147 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516997, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 451, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (766.31, 664.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1514, 2601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5587)
[0000][PE] mean and std.dev: (1783.93, 994.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 410.944 CPU sec, 23.018 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517388, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 468, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (1023.74, 1013.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (498, 1182, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (1171.90, 752.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 411.364 CPU sec, 23.036 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517357, 8, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 493, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2925)
[0000][PE] mean and std.dev: (730.10, 586.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.10, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1368, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4403)
[0000][PE] mean and std.dev: (1444.35, 760.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 414.383 CPU sec, 23.340 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516932, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 598, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (858.45, 831.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1378, 1669, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (1658.77, 820.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 411.921 CPU sec, 23.114 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517202, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 936, 2546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6862)
[0000][PE] mean and std.dev: (1239.74, 1237.90)
[0000][PE] low and high boundaries for proper pairs: (1, 9020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1311, 2686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6330)
[0000][PE] mean and std.dev: (1806.52, 1323.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 414.152 CPU sec, 23.326 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516742, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 844, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2762)
[0000][PE] mean and std.dev: (835.88, 644.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1208, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5018)
[0000][PE] mean and std.dev: (1436.23, 926.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 415.494 CPU sec, 23.350 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517209, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 659, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4691)
[0000][PE] mean and std.dev: (907.95, 827.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.32, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1497, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4353)
[0000][PE] mean and std.dev: (1490.93, 625.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 410.703 CPU sec, 23.020 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517256, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 369, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3448)
[0000][PE] mean and std.dev: (679.16, 706.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.31, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1567, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4705)
[0000][PE] mean and std.dev: (1828.55, 1024.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 412.621 CPU sec, 23.115 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517508, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 454, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5263)
[0000][PE] mean and std.dev: (1097.87, 1157.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.38, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1153, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4847)
[0000][PE] mean and std.dev: (1639.43, 1170.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 418.706 CPU sec, 23.611 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517283, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 466, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (696.19, 612.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.25, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 1221, 1892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4178)
[0000][PE] mean and std.dev: (1398.77, 865.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 408.080 CPU sec, 22.792 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517000, 6, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 466, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2579)
[0000][PE] mean and std.dev: (682.52, 573.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.42, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 1504, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4675)
[0000][PE] mean and std.dev: (1363.25, 812.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 411.706 CPU sec, 23.045 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517287, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 969, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5489)
[0000][PE] mean and std.dev: (1077.19, 800.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.13, 119.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1231, 2316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5068)
[0000][PE] mean and std.dev: (1418.09, 782.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6444)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 410.260 CPU sec, 22.942 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 516758, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 486, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (839.03, 761.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.86, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1617, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3775)
[0000][PE] mean and std.dev: (1453.80, 726.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 413.133 CPU sec, 23.197 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517032, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 409, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (710.09, 654.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.14, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1608, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4650)
[0000][PE] mean and std.dev: (1514.94, 945.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 409.131 CPU sec, 22.896 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516877, 11, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 938, 2290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6240)
[0000][PE] mean and std.dev: (1314.50, 1268.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (506, 856, 4006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11006)
[0000][PE] mean and std.dev: (2272.82, 2688.68)
[0000][PE] low and high boundaries for proper pairs: (1, 14506)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1501, 3123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7169)
[0000][PE] mean and std.dev: (2221.55, 1634.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 416.408 CPU sec, 23.365 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516685, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 379, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2357)
[0000][PE] mean and std.dev: (555.59, 477.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1179, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3091)
[0000][PE] mean and std.dev: (1059.88, 522.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 416.367 CPU sec, 23.380 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516834, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 413, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (808.03, 744.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.26, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1440, 4149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10513)
[0000][PE] mean and std.dev: (2161.37, 1617.95)
[0000][PE] low and high boundaries for proper pairs: (1, 13695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 415.644 CPU sec, 23.300 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517326, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 439, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (791.38, 678.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (494.97, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1647, 2659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5965)
[0000][PE] mean and std.dev: (1865.44, 1267.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 415.679 CPU sec, 23.265 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517448, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 529, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3371)
[0000][PE] mean and std.dev: (792.39, 668.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.24, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1219, 2746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6306)
[0000][PE] mean and std.dev: (1496.72, 1058.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 409.992 CPU sec, 22.961 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517412, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 693, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4810)
[0000][PE] mean and std.dev: (1175.57, 1122.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.29, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (722, 1285, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5318)
[0000][PE] mean and std.dev: (1416.88, 945.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 411.357 CPU sec, 23.045 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516954, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 1144, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4040)
[0000][PE] mean and std.dev: (1064.40, 849.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1341, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (298, 2403)
[0000][PE] mean and std.dev: (1284.48, 310.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 414.367 CPU sec, 23.263 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205324
	[0000][ M::kt_pipeline] read 1205324 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516949, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 441, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (856.72, 801.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.27, 119.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1417, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (1398.96, 735.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 415.169 CPU sec, 23.307 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517153, 8, 37)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 741, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (959.34, 904.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.27, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1275, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3980)
[0000][PE] mean and std.dev: (1531.78, 776.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205324 reads in 413.600 CPU sec, 23.151 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517249, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 1055, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4126)
[0000][PE] mean and std.dev: (1050.22, 774.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.23, 119.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1452, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4542)
[0000][PE] mean and std.dev: (1560.52, 760.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 423.558 CPU sec, 23.842 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516880, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 1142, 2411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6613)
[0000][PE] mean and std.dev: (1480.71, 1550.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.10, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1453, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3830)
[0000][PE] mean and std.dev: (1584.62, 734.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 415.141 CPU sec, 23.216 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516741, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 429, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (748.90, 744.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.26, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1295, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (1338.38, 648.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 416.823 CPU sec, 23.564 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517222, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 604, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3250)
[0000][PE] mean and std.dev: (825.83, 683.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.45, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1778, 2667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5661)
[0000][PE] mean and std.dev: (1830.00, 956.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 412.388 CPU sec, 23.085 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516556, 4, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 419, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2461)
[0000][PE] mean and std.dev: (635.57, 506.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1379, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4200)
[0000][PE] mean and std.dev: (1450.38, 676.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 411.061 CPU sec, 23.017 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516931, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 1184, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4992)
[0000][PE] mean and std.dev: (1115.29, 986.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.33, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1487, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3078)
[0000][PE] mean and std.dev: (1462.56, 576.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 413.646 CPU sec, 23.186 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517547, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 463, 1035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2511)
[0000][PE] mean and std.dev: (588.63, 477.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1476, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3304)
[0000][PE] mean and std.dev: (1414.46, 622.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 410.311 CPU sec, 22.969 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517561, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 614, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3671)
[0000][PE] mean and std.dev: (860.16, 803.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.13, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1049, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4135)
[0000][PE] mean and std.dev: (1425.60, 769.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 411.253 CPU sec, 23.005 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517072, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 751, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4406)
[0000][PE] mean and std.dev: (1157.71, 1009.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.25, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1343, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3786)
[0000][PE] mean and std.dev: (1488.19, 707.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 409.076 CPU sec, 22.871 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517259, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 681, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3430)
[0000][PE] mean and std.dev: (842.23, 720.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.30, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1416, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4661)
[0000][PE] mean and std.dev: (1553.64, 912.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 412.380 CPU sec, 23.138 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517141, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 445, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2607)
[0000][PE] mean and std.dev: (652.03, 501.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1388, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5501)
[0000][PE] mean and std.dev: (1553.35, 1062.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 416.553 CPU sec, 23.359 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517181, 9, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 496, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2755)
[0000][PE] mean and std.dev: (659.70, 496.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1514, 2482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5452)
[0000][PE] mean and std.dev: (1765.81, 1187.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 410.706 CPU sec, 23.117 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517110, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 463, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (918.39, 899.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.38, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1462, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4934)
[0000][PE] mean and std.dev: (1709.71, 799.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 414.269 CPU sec, 23.200 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517293, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 874, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4153)
[0000][PE] mean and std.dev: (1034.50, 850.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1327, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4006)
[0000][PE] mean and std.dev: (1458.92, 647.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 415.201 CPU sec, 23.317 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517121, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 559, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (862.51, 719.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1367, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4536)
[0000][PE] mean and std.dev: (1655.59, 906.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 414.785 CPU sec, 23.322 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517354, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (498, 926, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (1077.20, 847.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.46, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 2041, 2698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5852)
[0000][PE] mean and std.dev: (1951.29, 1061.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 419.068 CPU sec, 23.627 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517355, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 869, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2988)
[0000][PE] mean and std.dev: (852.08, 585.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.36, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1481, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4572)
[0000][PE] mean and std.dev: (1675.00, 907.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 415.420 CPU sec, 23.295 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516879, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 859, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3821)
[0000][PE] mean and std.dev: (893.80, 770.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.31, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1417, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (1436.52, 866.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 412.277 CPU sec, 23.104 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517576, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 927, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3706)
[0000][PE] mean and std.dev: (890.58, 600.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1366, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4149)
[0000][PE] mean and std.dev: (1618.35, 938.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 411.657 CPU sec, 23.126 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517725, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 619, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3503)
[0000][PE] mean and std.dev: (873.90, 885.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1312, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4392)
[0000][PE] mean and std.dev: (1411.36, 854.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 410.035 CPU sec, 22.972 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517044, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 868, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3977)
[0000][PE] mean and std.dev: (920.02, 753.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.04, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 1291, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5141)
[0000][PE] mean and std.dev: (1570.42, 1078.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 414.684 CPU sec, 23.258 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517266, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 359, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3113)
[0000][PE] mean and std.dev: (548.33, 476.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.27, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1411, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3156)
[0000][PE] mean and std.dev: (1344.38, 433.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 414.163 CPU sec, 23.246 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517102, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 1065, 2625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7245)
[0000][PE] mean and std.dev: (1344.74, 1370.54)
[0000][PE] low and high boundaries for proper pairs: (1, 9555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1625, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5234)
[0000][PE] mean and std.dev: (1438.40, 784.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 414.253 CPU sec, 23.260 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517033, 10, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 403, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3362)
[0000][PE] mean and std.dev: (780.41, 809.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.08, 119.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (601, 2896, 5997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16789)
[0000][PE] mean and std.dev: (3233.60, 2626.41)
[0000][PE] low and high boundaries for proper pairs: (1, 22185)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1077, 1513, 2849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6393)
[0000][PE] mean and std.dev: (1846.46, 1250.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 413.443 CPU sec, 23.140 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517040, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 930, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3965)
[0000][PE] mean and std.dev: (1096.82, 946.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1738, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4861)
[0000][PE] mean and std.dev: (1561.38, 688.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 411.992 CPU sec, 23.140 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517138, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 1068, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6061)
[0000][PE] mean and std.dev: (1129.64, 911.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.90, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1520, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (1801.50, 1068.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 419.082 CPU sec, 23.563 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517326, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 593, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3226)
[0000][PE] mean and std.dev: (725.50, 586.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.98, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1471, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (1371.48, 682.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 409.275 CPU sec, 22.885 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517586, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 569, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (844.83, 779.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.52, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1552, 2739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6385)
[0000][PE] mean and std.dev: (1854.41, 1269.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 412.931 CPU sec, 23.152 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517233, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 499, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (716.05, 642.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1086, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2814)
[0000][PE] mean and std.dev: (956.90, 502.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 413.842 CPU sec, 23.198 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517481, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 716, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4664)
[0000][PE] mean and std.dev: (928.12, 933.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.35, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1402, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3580)
[0000][PE] mean and std.dev: (1325.79, 707.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 408.298 CPU sec, 22.832 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516927, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 549, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3491)
[0000][PE] mean and std.dev: (759.13, 620.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1643, 2598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5468)
[0000][PE] mean and std.dev: (1771.69, 985.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 416.997 CPU sec, 23.393 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516871, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 510, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (890.81, 808.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.05, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1295, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (1196.43, 593.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 417.819 CPU sec, 23.516 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 516648, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 464, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (684.92, 633.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1240, 1536, 3019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6577)
[0000][PE] mean and std.dev: (2216.42, 1638.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 412.791 CPU sec, 23.108 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516871, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 1161, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5127)
[0000][PE] mean and std.dev: (1209.54, 1048.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1320, 2262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5140)
[0000][PE] mean and std.dev: (1503.08, 1105.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 418.301 CPU sec, 23.448 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516976, 9, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 679, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2995)
[0000][PE] mean and std.dev: (864.06, 672.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.37, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1578, 2791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6251)
[0000][PE] mean and std.dev: (1985.28, 1227.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 414.266 CPU sec, 23.241 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517483, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 1309, 2727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7527)
[0000][PE] mean and std.dev: (1523.56, 1249.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1441, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4713)
[0000][PE] mean and std.dev: (1699.70, 1094.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 413.733 CPU sec, 23.145 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517426, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1188, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4217)
[0000][PE] mean and std.dev: (1026.91, 848.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.35, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (596, 1498, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4217)
[0000][PE] mean and std.dev: (1336.32, 737.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 410.906 CPU sec, 22.998 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517131, 7, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 687, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (903.00, 756.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.26, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1430, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3860)
[0000][PE] mean and std.dev: (1479.94, 681.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 416.519 CPU sec, 23.399 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516759, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 661, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (939.69, 825.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.26, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1279, 1730, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4987)
[0000][PE] mean and std.dev: (1913.95, 898.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 417.638 CPU sec, 23.417 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517590, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 740, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2574)
[0000][PE] mean and std.dev: (785.64, 458.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1479, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4172)
[0000][PE] mean and std.dev: (1464.13, 668.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 415.332 CPU sec, 23.306 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516880, 6, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 440, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3972)
[0000][PE] mean and std.dev: (850.44, 879.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.22, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1138, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3608)
[0000][PE] mean and std.dev: (1256.32, 635.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 413.817 CPU sec, 23.139 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516599, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 456, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4545)
[0000][PE] mean and std.dev: (860.44, 970.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.15, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1279, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2886)
[0000][PE] mean and std.dev: (1282.96, 531.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 415.920 CPU sec, 23.332 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517261, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 820, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3576)
[0000][PE] mean and std.dev: (947.83, 896.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.46, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1515, 2542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5544)
[0000][PE] mean and std.dev: (1910.61, 1403.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 415.398 CPU sec, 23.282 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517210, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 376, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4747)
[0000][PE] mean and std.dev: (891.37, 1092.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1871, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4650)
[0000][PE] mean and std.dev: (1731.32, 825.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 413.402 CPU sec, 23.106 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517136, 6, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 788, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3479)
[0000][PE] mean and std.dev: (732.51, 540.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.94, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1431, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3714)
[0000][PE] mean and std.dev: (1587.00, 763.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 414.990 CPU sec, 23.225 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516654, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 704, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2604)
[0000][PE] mean and std.dev: (744.57, 560.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.34, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1207, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4160)
[0000][PE] mean and std.dev: (1231.56, 704.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 421.171 CPU sec, 23.646 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205224
	[0000][ M::kt_pipeline] read 1205224 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518029, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 676, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3627)
[0000][PE] mean and std.dev: (872.19, 735.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.38, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1303, 2395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4913)
[0000][PE] mean and std.dev: (1655.26, 922.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 413.210 CPU sec, 23.154 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517671, 7, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 401, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (410.58, 325.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.44, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1273, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4543)
[0000][PE] mean and std.dev: (1520.03, 912.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205224 reads in 419.037 CPU sec, 23.676 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517479, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 403, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (796.28, 913.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.31, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1173, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (1247.90, 577.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 418.200 CPU sec, 23.581 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517059, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 1025, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (935.27, 582.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1457, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5259)
[0000][PE] mean and std.dev: (1666.33, 1113.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 413.822 CPU sec, 23.225 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517273, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 414, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (687.96, 682.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.98, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1483, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4842)
[0000][PE] mean and std.dev: (1446.38, 872.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 413.540 CPU sec, 23.136 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517396, 9, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 842, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (822.75, 731.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.41, 119.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1254, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3862)
[0000][PE] mean and std.dev: (1457.62, 736.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 410.356 CPU sec, 23.001 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517773, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 639, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (866.46, 799.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.56, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1422, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4937)
[0000][PE] mean and std.dev: (1692.28, 1026.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 413.577 CPU sec, 23.184 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517501, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 431, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3890)
[0000][PE] mean and std.dev: (771.32, 688.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.00, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1386, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3713)
[0000][PE] mean and std.dev: (1414.12, 798.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 416.937 CPU sec, 23.354 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516806, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 702, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (948.11, 891.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.22, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 1109, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4350)
[0000][PE] mean and std.dev: (1122.09, 794.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 415.090 CPU sec, 23.389 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 517391, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 913, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4890)
[0000][PE] mean and std.dev: (1005.33, 956.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1559, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (1452.12, 696.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 417.440 CPU sec, 23.432 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517301, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 469, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3403)
[0000][PE] mean and std.dev: (737.12, 591.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.11, 119.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1518, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3632)
[0000][PE] mean and std.dev: (1276.87, 626.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 412.347 CPU sec, 23.197 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517215, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 514, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (839.68, 705.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1531, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3417)
[0000][PE] mean and std.dev: (1412.39, 678.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 408.851 CPU sec, 22.864 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517424, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 453, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4251)
[0000][PE] mean and std.dev: (975.00, 1007.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1332, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5252)
[0000][PE] mean and std.dev: (1404.65, 701.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 413.133 CPU sec, 23.138 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517038, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 632, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3687)
[0000][PE] mean and std.dev: (801.63, 663.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.08, 119.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1506, 2568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5950)
[0000][PE] mean and std.dev: (1842.39, 1325.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 412.434 CPU sec, 23.065 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517414, 0, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 717, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4319)
[0000][PE] mean and std.dev: (930.36, 715.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1573, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5209)
[0000][PE] mean and std.dev: (1509.35, 809.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 412.148 CPU sec, 23.050 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517445, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 890, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4313)
[0000][PE] mean and std.dev: (961.97, 766.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.46, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1257, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5989)
[0000][PE] mean and std.dev: (1539.12, 1071.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 415.296 CPU sec, 23.230 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517661, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 1115, 2674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7316)
[0000][PE] mean and std.dev: (1520.15, 1561.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.37, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1246, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3221)
[0000][PE] mean and std.dev: (1210.06, 645.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 414.662 CPU sec, 23.228 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516956, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 822, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (975.76, 725.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.27, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1206, 1375, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (1800.96, 994.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 413.231 CPU sec, 23.214 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 517208, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 670, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4192)
[0000][PE] mean and std.dev: (921.78, 832.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.91, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1138, 1485, 2430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5014)
[0000][PE] mean and std.dev: (1721.10, 966.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 412.252 CPU sec, 23.105 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517458, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 641, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5132)
[0000][PE] mean and std.dev: (1223.93, 1277.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.67, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1180, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3016)
[0000][PE] mean and std.dev: (1123.75, 477.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 423.703 CPU sec, 23.957 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517036, 1, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 639, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (957.97, 829.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.15, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1526, 3059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7249)
[0000][PE] mean and std.dev: (1799.86, 1281.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 416.641 CPU sec, 23.355 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517112, 6, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 560, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (941.12, 865.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1775, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5291)
[0000][PE] mean and std.dev: (1777.00, 1166.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 413.897 CPU sec, 23.130 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516995, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 397, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4268)
[0000][PE] mean and std.dev: (693.72, 663.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.33, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1434, 2177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4625)
[0000][PE] mean and std.dev: (1553.80, 870.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 413.563 CPU sec, 23.166 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517119, 3, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 441, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3596)
[0000][PE] mean and std.dev: (709.45, 812.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.27, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1501, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4914)
[0000][PE] mean and std.dev: (1650.50, 920.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 411.855 CPU sec, 23.043 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 517344, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 469, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4073)
[0000][PE] mean and std.dev: (927.29, 942.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.30, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1199, 1462, 2239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4319)
[0000][PE] mean and std.dev: (1596.35, 925.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 411.946 CPU sec, 23.090 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205304
	[0000][ M::kt_pipeline] read 1205304 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517144, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 705, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3763)
[0000][PE] mean and std.dev: (935.39, 767.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.27, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1489, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2966)
[0000][PE] mean and std.dev: (1267.11, 534.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 412.965 CPU sec, 23.143 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517332, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 516, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3662)
[0000][PE] mean and std.dev: (846.75, 711.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1321, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3699)
[0000][PE] mean and std.dev: (1483.44, 733.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205304 reads in 413.822 CPU sec, 23.178 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517165, 5, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 564, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3735)
[0000][PE] mean and std.dev: (922.10, 885.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.28, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1534, 3043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7265)
[0000][PE] mean and std.dev: (2023.88, 1625.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 413.296 CPU sec, 23.256 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517189, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 361, 828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1978)
[0000][PE] mean and std.dev: (433.62, 315.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.02, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1229, 1588, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3434)
[0000][PE] mean and std.dev: (1572.50, 687.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 413.382 CPU sec, 23.233 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517440, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 495, 948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2206)
[0000][PE] mean and std.dev: (555.58, 361.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.04, 119.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1416, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3817)
[0000][PE] mean and std.dev: (1377.86, 830.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 415.140 CPU sec, 23.334 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517401, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 506, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4472)
[0000][PE] mean and std.dev: (774.73, 744.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.21, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1559, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5428)
[0000][PE] mean and std.dev: (1598.04, 994.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 413.574 CPU sec, 23.198 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517493, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 836, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4584)
[0000][PE] mean and std.dev: (1080.19, 1068.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.26, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1311, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (1420.25, 734.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 408.947 CPU sec, 22.896 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517190, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 725, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3473)
[0000][PE] mean and std.dev: (846.62, 738.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.52, 120.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1366, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4803)
[0000][PE] mean and std.dev: (1501.56, 871.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 415.759 CPU sec, 23.340 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517353, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 806, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3970)
[0000][PE] mean and std.dev: (984.00, 820.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1216, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (1160.22, 526.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 409.091 CPU sec, 22.874 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517335, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 446, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2423)
[0000][PE] mean and std.dev: (588.19, 456.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.28, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1371, 1787, 3001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6261)
[0000][PE] mean and std.dev: (2164.19, 1233.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 410.882 CPU sec, 23.003 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516663, 3, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 564, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (767.50, 716.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.42, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1138, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3233)
[0000][PE] mean and std.dev: (1230.34, 639.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 414.427 CPU sec, 23.274 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517352, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 858, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (926.03, 716.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1699, 2196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4750)
[0000][PE] mean and std.dev: (1598.62, 911.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6027)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 412.271 CPU sec, 23.059 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517120, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 526, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (776.52, 706.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.38, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1525, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4862)
[0000][PE] mean and std.dev: (1598.89, 862.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 412.567 CPU sec, 23.155 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516752, 7, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 382, 885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2161)
[0000][PE] mean and std.dev: (448.77, 466.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.37, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1418, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (1569.33, 860.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 415.869 CPU sec, 23.296 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517162, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 539, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (828.23, 735.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1051, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4964)
[0000][PE] mean and std.dev: (1364.50, 1022.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 414.667 CPU sec, 23.255 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000160 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517117, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 554, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (889.22, 755.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1272, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2617)
[0000][PE] mean and std.dev: (1262.27, 521.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 416.794 CPU sec, 23.390 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 516991, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 727, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (836.43, 631.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (672, 1470, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5334)
[0000][PE] mean and std.dev: (1434.52, 857.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 413.033 CPU sec, 23.129 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516749, 4, 37)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 439, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3641)
[0000][PE] mean and std.dev: (785.82, 714.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1430, 2683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6073)
[0000][PE] mean and std.dev: (1733.47, 1053.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 412.376 CPU sec, 23.072 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517090, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 532, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (685.66, 501.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.28, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1629, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4105)
[0000][PE] mean and std.dev: (1330.94, 535.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 415.592 CPU sec, 23.350 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517413, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 1025, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4434)
[0000][PE] mean and std.dev: (1089.23, 825.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.02, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1387, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4443)
[0000][PE] mean and std.dev: (1404.87, 874.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 413.107 CPU sec, 23.128 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516773, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 707, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3160)
[0000][PE] mean and std.dev: (825.97, 658.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.31, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1490, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2979)
[0000][PE] mean and std.dev: (1331.06, 530.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 411.217 CPU sec, 23.002 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 516787, 7, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 608, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3146)
[0000][PE] mean and std.dev: (779.07, 679.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.28, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1405, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3243)
[0000][PE] mean and std.dev: (1353.93, 568.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 414.081 CPU sec, 23.173 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517131, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 657, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2952)
[0000][PE] mean and std.dev: (866.15, 690.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.23, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1370, 3404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8008)
[0000][PE] mean and std.dev: (1864.62, 1145.89)
[0000][PE] low and high boundaries for proper pairs: (1, 10310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 417.383 CPU sec, 23.407 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516850, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 493, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (846.16, 821.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.21, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 1342, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (1490.56, 668.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 411.573 CPU sec, 23.047 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517051, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 539, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3984)
[0000][PE] mean and std.dev: (896.65, 813.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1277, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3630)
[0000][PE] mean and std.dev: (1378.69, 669.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 413.408 CPU sec, 23.213 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517080, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 814, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3148)
[0000][PE] mean and std.dev: (770.04, 560.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.37, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (721, 1135, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (1305.86, 722.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 425.668 CPU sec, 24.131 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517129, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 653, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3705)
[0000][PE] mean and std.dev: (873.00, 750.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.00, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1238, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3633)
[0000][PE] mean and std.dev: (1298.00, 788.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 412.397 CPU sec, 23.071 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517444, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 979, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3435)
[0000][PE] mean and std.dev: (921.67, 766.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.18, 119.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (545, 1373, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4151)
[0000][PE] mean and std.dev: (1242.43, 743.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 407.441 CPU sec, 22.820 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517086, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 558, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (917.61, 1009.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.32, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1270, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4711)
[0000][PE] mean and std.dev: (1386.47, 755.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 410.933 CPU sec, 22.968 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517211, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 389, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4057)
[0000][PE] mean and std.dev: (855.80, 937.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (525, 1265, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4131)
[0000][PE] mean and std.dev: (1145.81, 663.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 410.876 CPU sec, 23.077 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517410, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 942, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5355)
[0000][PE] mean and std.dev: (1072.94, 904.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.21, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1473, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (1499.40, 657.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 412.882 CPU sec, 23.152 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517391, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 724, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6100)
[0000][PE] mean and std.dev: (1176.12, 1179.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1484, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (1321.71, 525.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 408.723 CPU sec, 22.877 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517516, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 721, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2487)
[0000][PE] mean and std.dev: (658.79, 450.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1473, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (1419.81, 780.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 410.407 CPU sec, 22.970 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517187, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 886, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4202)
[0000][PE] mean and std.dev: (1080.67, 1008.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.26, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1217, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (1296.05, 613.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 416.212 CPU sec, 23.371 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517170, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 929, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4079)
[0000][PE] mean and std.dev: (913.94, 753.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.26, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1281, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4192)
[0000][PE] mean and std.dev: (1252.62, 910.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 411.013 CPU sec, 22.994 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516825, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 384, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2831)
[0000][PE] mean and std.dev: (692.88, 619.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.36, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (405, 1400, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5739)
[0000][PE] mean and std.dev: (1548.58, 1184.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 413.649 CPU sec, 23.156 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516831, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 646, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (738.81, 520.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1721, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5154)
[0000][PE] mean and std.dev: (1678.42, 1136.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 412.995 CPU sec, 23.117 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517022, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 458, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2840)
[0000][PE] mean and std.dev: (697.24, 594.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1424, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5073)
[0000][PE] mean and std.dev: (1765.36, 1091.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 410.491 CPU sec, 22.974 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 516874, 11, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 575, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4093)
[0000][PE] mean and std.dev: (869.61, 819.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (647, 901, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4439)
[0000][PE] mean and std.dev: (1127.10, 833.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5703)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1307, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (1190.78, 571.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 409.908 CPU sec, 22.921 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516786, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (642, 817, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (1046.65, 844.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1410, 3198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7202)
[0000][PE] mean and std.dev: (2292.52, 1570.63)
[0000][PE] low and high boundaries for proper pairs: (1, 9204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 411.063 CPU sec, 23.022 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516983, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 507, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (748.27, 692.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.02, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1296, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4361)
[0000][PE] mean and std.dev: (1414.94, 949.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 413.041 CPU sec, 23.136 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517611, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 506, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5772)
[0000][PE] mean and std.dev: (1141.06, 1118.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.55, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1233, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (1316.40, 806.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 409.319 CPU sec, 22.925 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517019, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 844, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (768.11, 702.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.29, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1152, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2752)
[0000][PE] mean and std.dev: (1162.36, 515.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 409.980 CPU sec, 22.986 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517474, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 536, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (705.35, 543.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.78, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1322, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4354)
[0000][PE] mean and std.dev: (1581.36, 1070.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 410.010 CPU sec, 22.938 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516972, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 377, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2937)
[0000][PE] mean and std.dev: (796.76, 763.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.13, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1366, 3344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7986)
[0000][PE] mean and std.dev: (2164.00, 1784.84)
[0000][PE] low and high boundaries for proper pairs: (1, 10307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 412.898 CPU sec, 23.106 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516953, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 865, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3015)
[0000][PE] mean and std.dev: (845.50, 685.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.33, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1586, 2390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5178)
[0000][PE] mean and std.dev: (1748.67, 1282.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 410.504 CPU sec, 22.977 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517194, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 629, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3062)
[0000][PE] mean and std.dev: (793.58, 630.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 119.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1375, 2481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5253)
[0000][PE] mean and std.dev: (1860.37, 1099.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 412.521 CPU sec, 23.080 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517498, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 484, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (727.83, 588.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.24, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1378, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3574)
[0000][PE] mean and std.dev: (1354.24, 588.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 410.596 CPU sec, 22.981 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516806, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 689, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (925.03, 743.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.34, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1258, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3609)
[0000][PE] mean and std.dev: (1494.60, 828.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 411.612 CPU sec, 23.097 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516957, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 1071, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5093)
[0000][PE] mean and std.dev: (1205.03, 1195.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.05, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1334, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (1360.78, 765.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 411.583 CPU sec, 23.073 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 517203, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 735, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3685)
[0000][PE] mean and std.dev: (925.17, 800.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.20, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1432, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3081)
[0000][PE] mean and std.dev: (1269.60, 452.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 411.875 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517084, 9, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 808, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4321)
[0000][PE] mean and std.dev: (949.38, 834.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.93, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1267, 1680, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3262)
[0000][PE] mean and std.dev: (1588.04, 560.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 410.374 CPU sec, 23.020 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517093, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 916, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3800)
[0000][PE] mean and std.dev: (977.14, 704.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1308, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4027)
[0000][PE] mean and std.dev: (1411.08, 586.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 410.002 CPU sec, 22.949 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517034, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 720, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6982)
[0000][PE] mean and std.dev: (1113.33, 1091.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.96, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1281, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3399)
[0000][PE] mean and std.dev: (1256.65, 632.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 406.607 CPU sec, 22.737 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517571, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 614, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (944.12, 841.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.19, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1314, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3161)
[0000][PE] mean and std.dev: (1412.31, 640.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 419.697 CPU sec, 23.702 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517000, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1045, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4370)
[0000][PE] mean and std.dev: (1301.15, 1146.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1391, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3980)
[0000][PE] mean and std.dev: (1346.73, 824.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 411.150 CPU sec, 23.035 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517040, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 810, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3212)
[0000][PE] mean and std.dev: (962.19, 729.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.32, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1568, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3573)
[0000][PE] mean and std.dev: (1442.29, 865.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 412.358 CPU sec, 23.121 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517293, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 886, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4045)
[0000][PE] mean and std.dev: (858.46, 729.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.00, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1463, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5068)
[0000][PE] mean and std.dev: (1499.10, 794.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 411.449 CPU sec, 23.063 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517369, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 408, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2965)
[0000][PE] mean and std.dev: (617.03, 578.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.01, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1193, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4189)
[0000][PE] mean and std.dev: (1692.93, 1064.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 411.542 CPU sec, 23.076 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517503, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 407, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2612)
[0000][PE] mean and std.dev: (631.25, 569.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.53, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1289, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (1359.86, 489.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 416.135 CPU sec, 23.420 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517041, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 477, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4386)
[0000][PE] mean and std.dev: (874.96, 822.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1447, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (1353.00, 613.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 413.574 CPU sec, 23.219 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517077, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 632, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2961)
[0000][PE] mean and std.dev: (771.55, 619.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1398, 2483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5359)
[0000][PE] mean and std.dev: (1704.53, 1094.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 410.928 CPU sec, 23.019 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517069, 2, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 682, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (940.97, 771.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1536, 3276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7762)
[0000][PE] mean and std.dev: (2169.62, 1708.44)
[0000][PE] low and high boundaries for proper pairs: (1, 10005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 412.087 CPU sec, 23.111 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517241, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 757, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2868)
[0000][PE] mean and std.dev: (813.59, 683.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.33, 119.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1444, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5145)
[0000][PE] mean and std.dev: (1686.45, 1236.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 414.841 CPU sec, 23.254 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516908, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 773, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3939)
[0000][PE] mean and std.dev: (932.92, 905.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.16, 119.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1254, 1583, 2429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4779)
[0000][PE] mean and std.dev: (1820.65, 903.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 417.538 CPU sec, 23.447 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 516959, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 858, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3177)
[0000][PE] mean and std.dev: (755.98, 595.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1366, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (1316.41, 643.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 412.371 CPU sec, 23.097 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517592, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 385, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1574)
[0000][PE] mean and std.dev: (393.16, 298.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1187, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (1314.60, 649.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 414.621 CPU sec, 23.245 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517401, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 774, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (846.15, 665.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.50, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 956, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3839)
[0000][PE] mean and std.dev: (1158.18, 599.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 411.163 CPU sec, 23.022 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517509, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 566, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (852.09, 826.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.37, 120.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1302, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2473)
[0000][PE] mean and std.dev: (1285.04, 520.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 410.868 CPU sec, 22.971 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517037, 7, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 786, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4389)
[0000][PE] mean and std.dev: (1255.00, 1142.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1761, 2653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5707)
[0000][PE] mean and std.dev: (1776.77, 1007.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 414.976 CPU sec, 23.246 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517311, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 673, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (833.35, 660.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.33, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1367, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5273)
[0000][PE] mean and std.dev: (1548.07, 793.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 411.258 CPU sec, 23.044 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517665, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 565, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3178)
[0000][PE] mean and std.dev: (788.19, 700.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.17, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 809, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3139)
[0000][PE] mean and std.dev: (1046.38, 732.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 411.511 CPU sec, 23.099 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517270, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 627, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (967.40, 943.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.07, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1620, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4443)
[0000][PE] mean and std.dev: (1503.84, 838.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 413.252 CPU sec, 23.158 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517480, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 354, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1807)
[0000][PE] mean and std.dev: (448.07, 384.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.89, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1411, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (1341.96, 670.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 410.660 CPU sec, 23.008 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517099, 5, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 406, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2377)
[0000][PE] mean and std.dev: (517.72, 421.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1277, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3736)
[0000][PE] mean and std.dev: (1344.76, 720.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 413.250 CPU sec, 23.112 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517395, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 938, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5203)
[0000][PE] mean and std.dev: (1234.58, 1181.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.51, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1233, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (1331.57, 653.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 419.873 CPU sec, 23.553 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516994, 5, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 365, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2337)
[0000][PE] mean and std.dev: (581.23, 517.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.94, 120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1880, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5110)
[0000][PE] mean and std.dev: (1764.91, 957.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 413.128 CPU sec, 23.113 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517575, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 467, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (710.38, 608.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.22, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 1925, 2720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6814)
[0000][PE] mean and std.dev: (1696.56, 1128.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 412.927 CPU sec, 23.090 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517089, 3, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 473, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4243)
[0000][PE] mean and std.dev: (839.57, 740.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.56, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 1232, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (1199.36, 744.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 410.046 CPU sec, 22.991 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517330, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1112, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5606)
[0000][PE] mean and std.dev: (1233.00, 1077.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.29, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1216, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4289)
[0000][PE] mean and std.dev: (1345.86, 776.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 409.958 CPU sec, 22.955 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516777, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 392, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3065)
[0000][PE] mean and std.dev: (592.27, 616.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.24, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1287, 1636, 3150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6876)
[0000][PE] mean and std.dev: (1908.29, 1111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 415.710 CPU sec, 23.286 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516849, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 417, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2439)
[0000][PE] mean and std.dev: (612.12, 484.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.32, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1395, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3656)
[0000][PE] mean and std.dev: (1315.41, 597.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 414.808 CPU sec, 23.268 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517008, 9, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 676, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3973)
[0000][PE] mean and std.dev: (1013.49, 859.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1283, 2600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5858)
[0000][PE] mean and std.dev: (1733.79, 1056.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 415.616 CPU sec, 23.241 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 516926, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 490, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3519)
[0000][PE] mean and std.dev: (803.13, 779.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.50, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1124, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (1232.00, 575.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 417.159 CPU sec, 23.329 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517008, 3, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 836, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3732)
[0000][PE] mean and std.dev: (921.73, 650.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.55, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1441, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4643)
[0000][PE] mean and std.dev: (1431.71, 831.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 413.393 CPU sec, 23.230 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517271, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 713, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2471)
[0000][PE] mean and std.dev: (716.55, 438.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.88, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1335, 2899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6439)
[0000][PE] mean and std.dev: (1706.12, 1159.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 413.534 CPU sec, 23.242 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517452, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 644, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (769.54, 559.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.11, 119.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1071, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3052)
[0000][PE] mean and std.dev: (1112.26, 536.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 410.858 CPU sec, 23.044 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517262, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 969, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4434)
[0000][PE] mean and std.dev: (1335.80, 1141.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1495, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4768)
[0000][PE] mean and std.dev: (1668.10, 880.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 411.452 CPU sec, 23.015 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517225, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 599, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6047)
[0000][PE] mean and std.dev: (1037.59, 1166.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.28, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1306, 1714, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5302)
[0000][PE] mean and std.dev: (1782.21, 1041.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 409.757 CPU sec, 22.945 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517479, 9, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 888, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3684)
[0000][PE] mean and std.dev: (985.40, 832.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1284, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3706)
[0000][PE] mean and std.dev: (1331.57, 798.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 409.256 CPU sec, 22.909 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205224
	[0000][ M::kt_pipeline] read 1205224 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517391, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 510, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2337)
[0000][PE] mean and std.dev: (688.62, 619.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.97, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1537, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3845)
[0000][PE] mean and std.dev: (1596.21, 731.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 410.061 CPU sec, 22.958 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516768, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 761, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3724)
[0000][PE] mean and std.dev: (963.97, 911.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1420, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (1509.78, 1079.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205224 reads in 413.695 CPU sec, 23.291 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517415, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 353, 835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1989)
[0000][PE] mean and std.dev: (487.07, 403.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.32, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1346, 2913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6573)
[0000][PE] mean and std.dev: (1722.76, 1028.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 410.814 CPU sec, 23.008 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516986, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 677, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (770.54, 648.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1220, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2569)
[0000][PE] mean and std.dev: (1228.82, 423.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 413.435 CPU sec, 23.141 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517249, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 388, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (704.69, 768.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.18, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 1857, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4043)
[0000][PE] mean and std.dev: (1823.77, 740.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 415.167 CPU sec, 23.230 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517391, 9, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 799, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6644)
[0000][PE] mean and std.dev: (1216.90, 1234.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1605, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4575)
[0000][PE] mean and std.dev: (1648.81, 694.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 410.702 CPU sec, 22.944 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517515, 6, 38)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 641, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2937)
[0000][PE] mean and std.dev: (701.69, 448.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.92, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1761, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4231)
[0000][PE] mean and std.dev: (1578.41, 703.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 415.571 CPU sec, 23.399 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517401, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 362, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (704.33, 813.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1124, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3432)
[0000][PE] mean and std.dev: (1317.24, 697.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 407.363 CPU sec, 22.818 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517280, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 409, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2615)
[0000][PE] mean and std.dev: (568.11, 580.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 879)
[0000][PE] mean and std.dev: (494.79, 119.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1034)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1255, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3778)
[0000][PE] mean and std.dev: (1330.56, 708.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 414.964 CPU sec, 23.297 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517646, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 532, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3505)
[0000][PE] mean and std.dev: (802.46, 735.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.00, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1514, 3207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7781)
[0000][PE] mean and std.dev: (2126.50, 1671.50)
[0000][PE] low and high boundaries for proper pairs: (1, 10068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 412.593 CPU sec, 23.182 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516672, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 800, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3399)
[0000][PE] mean and std.dev: (806.41, 592.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.95, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1727, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4738)
[0000][PE] mean and std.dev: (1619.91, 957.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 410.632 CPU sec, 22.950 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517026, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (636, 1099, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4719)
[0000][PE] mean and std.dev: (1292.77, 1035.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.99, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1307, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (1341.86, 719.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 413.592 CPU sec, 23.156 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516780, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 389, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (820.22, 720.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.86, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1395, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (1291.76, 675.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 411.968 CPU sec, 23.092 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517251, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 737, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2769)
[0000][PE] mean and std.dev: (717.55, 516.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.18, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1230, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3834)
[0000][PE] mean and std.dev: (1228.96, 625.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 411.357 CPU sec, 23.036 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517416, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 666, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5118)
[0000][PE] mean and std.dev: (1261.10, 1150.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.17, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1757, 2606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6150)
[0000][PE] mean and std.dev: (1814.56, 1150.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 410.439 CPU sec, 22.981 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 516981, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 1058, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3745)
[0000][PE] mean and std.dev: (1095.81, 775.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.41, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1475, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3950)
[0000][PE] mean and std.dev: (1530.25, 713.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4926)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 412.182 CPU sec, 23.125 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516990, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 977, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5390)
[0000][PE] mean and std.dev: (1342.55, 1346.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.42, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1410, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4593)
[0000][PE] mean and std.dev: (1593.20, 945.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 411.419 CPU sec, 23.120 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517203, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 368, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4192)
[0000][PE] mean and std.dev: (878.48, 953.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1479, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4718)
[0000][PE] mean and std.dev: (1642.67, 1018.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 410.007 CPU sec, 22.955 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517367, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 738, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4149)
[0000][PE] mean and std.dev: (1039.71, 952.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.27, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1144, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (1329.42, 875.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 411.870 CPU sec, 23.094 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 516947, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 609, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3977)
[0000][PE] mean and std.dev: (886.98, 785.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1514, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (1457.69, 809.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 412.121 CPU sec, 23.129 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 516945, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 407, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2820)
[0000][PE] mean and std.dev: (736.36, 605.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.52, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1535, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4318)
[0000][PE] mean and std.dev: (1433.64, 857.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 411.241 CPU sec, 23.059 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516851, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 474, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3751)
[0000][PE] mean and std.dev: (889.75, 942.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.02, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1160, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (1238.28, 784.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4812)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 413.634 CPU sec, 23.163 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517633, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 616, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (763.65, 661.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.12, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1718, 2665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6401)
[0000][PE] mean and std.dev: (1973.63, 1415.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 408.018 CPU sec, 22.936 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517052, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 986, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5930)
[0000][PE] mean and std.dev: (1236.90, 1222.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1377, 2528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5688)
[0000][PE] mean and std.dev: (1711.00, 1313.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 413.789 CPU sec, 23.226 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517171, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 1100, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (1182.64, 930.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.11, 119.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1718, 2859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6403)
[0000][PE] mean and std.dev: (2171.34, 1550.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 415.161 CPU sec, 23.305 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517411, 5, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 524, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (840.16, 817.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1437, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4257)
[0000][PE] mean and std.dev: (1441.69, 783.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 410.789 CPU sec, 23.045 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205304
	[0000][ M::kt_pipeline] read 1205304 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517540, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 415, 923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2221)
[0000][PE] mean and std.dev: (574.69, 448.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.35, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1344, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3659)
[0000][PE] mean and std.dev: (1500.79, 731.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 412.292 CPU sec, 23.128 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517166, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 415, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (685.69, 596.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1114, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3775)
[0000][PE] mean and std.dev: (1345.28, 742.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205304 reads in 411.788 CPU sec, 23.147 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516933, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 1001, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4922)
[0000][PE] mean and std.dev: (1124.08, 1023.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 120.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (805, 1590, 2041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1455.65, 836.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 411.880 CPU sec, 23.063 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517138, 8, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 538, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2688)
[0000][PE] mean and std.dev: (789.15, 638.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.36, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (598, 1428, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4375)
[0000][PE] mean and std.dev: (1319.50, 693.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 416.172 CPU sec, 23.379 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517400, 6, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 713, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3657)
[0000][PE] mean and std.dev: (803.17, 676.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.92, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1750, 2729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6271)
[0000][PE] mean and std.dev: (1914.27, 1447.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 409.527 CPU sec, 22.912 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517440, 0, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 730, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (922.19, 785.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1451, 2732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5962)
[0000][PE] mean and std.dev: (1842.08, 1185.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 410.979 CPU sec, 23.082 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517546, 4, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 696, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3543)
[0000][PE] mean and std.dev: (806.97, 751.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.40, 119.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1566, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5455)
[0000][PE] mean and std.dev: (1625.68, 1025.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 414.996 CPU sec, 23.300 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517285, 6, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 1138, 2739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7495)
[0000][PE] mean and std.dev: (1621.46, 1533.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.44, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1521, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (1703.24, 1014.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 415.374 CPU sec, 23.265 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 517410, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 834, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (892.67, 724.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.12, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1403, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4896)
[0000][PE] mean and std.dev: (1693.22, 1030.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 413.291 CPU sec, 23.168 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516959, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 425, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2832)
[0000][PE] mean and std.dev: (637.08, 491.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.28, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (570, 986, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4083)
[0000][PE] mean and std.dev: (1026.00, 685.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5254)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 415.685 CPU sec, 23.325 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516632, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 717, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2940)
[0000][PE] mean and std.dev: (729.75, 543.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.40, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1234, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3553)
[0000][PE] mean and std.dev: (1268.25, 658.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 412.683 CPU sec, 23.280 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517046, 5, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 511, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6520)
[0000][PE] mean and std.dev: (1174.82, 1281.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.43, 120.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 1152, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3914)
[0000][PE] mean and std.dev: (1255.94, 833.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 413.308 CPU sec, 23.230 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 516814, 4, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 591, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2473)
[0000][PE] mean and std.dev: (676.02, 497.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.54, 120.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1606, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4056)
[0000][PE] mean and std.dev: (1520.31, 680.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 410.484 CPU sec, 22.991 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517380, 8, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 617, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (860.36, 768.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.47, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1362, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3655)
[0000][PE] mean and std.dev: (1444.11, 659.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 408.217 CPU sec, 22.851 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517238, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 898, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3268)
[0000][PE] mean and std.dev: (855.47, 590.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.16, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1764, 2666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5760)
[0000][PE] mean and std.dev: (1781.71, 912.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 415.140 CPU sec, 23.269 real sec
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517348, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 456, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2803)
[0000][PE] mean and std.dev: (629.33, 528.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.36, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1268, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4589)
[0000][PE] mean and std.dev: (1643.26, 1010.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 413.257 CPU sec, 23.172 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517070, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 369, 779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1797)
[0000][PE] mean and std.dev: (371.15, 240.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.33, 119.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1333, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4146)
[0000][PE] mean and std.dev: (1471.00, 849.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 411.489 CPU sec, 23.104 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517194, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 525, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3091)
[0000][PE] mean and std.dev: (724.48, 538.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.22, 119.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1425, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4803)
[0000][PE] mean and std.dev: (1727.77, 1067.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 411.607 CPU sec, 23.050 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517339, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 779, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4502)
[0000][PE] mean and std.dev: (1004.02, 857.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.23, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1357, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3858)
[0000][PE] mean and std.dev: (1354.64, 553.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 412.606 CPU sec, 23.198 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517014, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 724, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2857)
[0000][PE] mean and std.dev: (809.62, 606.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.35, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (699, 1205, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4320)
[0000][PE] mean and std.dev: (1202.90, 679.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 413.048 CPU sec, 23.126 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517030, 7, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 958, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4289)
[0000][PE] mean and std.dev: (1078.11, 747.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.34, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1341, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (1506.25, 817.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 413.992 CPU sec, 23.166 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517284, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 460, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2479)
[0000][PE] mean and std.dev: (646.72, 550.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.13, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1295, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3911)
[0000][PE] mean and std.dev: (1352.67, 644.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 412.511 CPU sec, 23.131 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517298, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 452, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (812.97, 930.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.26, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1069, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4896)
[0000][PE] mean and std.dev: (1361.71, 923.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 416.231 CPU sec, 23.387 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517651, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 551, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3648)
[0000][PE] mean and std.dev: (827.86, 766.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 120.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1236, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4336)
[0000][PE] mean and std.dev: (1438.00, 991.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 410.555 CPU sec, 23.001 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517724, 2, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 680, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6220)
[0000][PE] mean and std.dev: (1212.66, 1404.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.13, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1372, 2111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4523)
[0000][PE] mean and std.dev: (1565.88, 1023.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 411.744 CPU sec, 23.094 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517061, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 551, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4582)
[0000][PE] mean and std.dev: (999.62, 1036.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.35, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1510, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4246)
[0000][PE] mean and std.dev: (1528.33, 642.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 411.699 CPU sec, 23.024 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516913, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 651, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3997)
[0000][PE] mean and std.dev: (848.69, 725.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.14, 119.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1344, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (1528.71, 776.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 414.622 CPU sec, 23.172 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516807, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 850, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4734)
[0000][PE] mean and std.dev: (1032.67, 946.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 2112, 2771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6167)
[0000][PE] mean and std.dev: (1907.77, 963.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 412.320 CPU sec, 23.068 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 516935, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 637, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4315)
[0000][PE] mean and std.dev: (864.46, 803.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.14, 120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1419, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5029)
[0000][PE] mean and std.dev: (1600.48, 900.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 412.004 CPU sec, 23.021 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517390, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 481, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (884.97, 872.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.51, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1567, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4757)
[0000][PE] mean and std.dev: (1547.73, 1010.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 411.313 CPU sec, 23.104 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517289, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 370, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2753)
[0000][PE] mean and std.dev: (566.05, 580.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.40, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (563, 1106, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (1068.67, 746.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 413.589 CPU sec, 23.202 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516997, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (430, 958, 2290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6010)
[0000][PE] mean and std.dev: (1327.78, 1155.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.47, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1175, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1601.52, 933.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 412.346 CPU sec, 23.073 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517486, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 672, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3568)
[0000][PE] mean and std.dev: (890.45, 797.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1449, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3065)
[0000][PE] mean and std.dev: (1433.63, 486.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 412.649 CPU sec, 23.048 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517072, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 672, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3429)
[0000][PE] mean and std.dev: (785.36, 620.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1389, 1783, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4272)
[0000][PE] mean and std.dev: (1843.00, 707.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 415.518 CPU sec, 23.271 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516680, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 1012, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5109)
[0000][PE] mean and std.dev: (1175.65, 1037.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.94, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1508, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5700)
[0000][PE] mean and std.dev: (1694.00, 1162.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 417.613 CPU sec, 23.397 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 516793, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 473, 949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2309)
[0000][PE] mean and std.dev: (590.88, 452.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.17, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1261, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2583)
[0000][PE] mean and std.dev: (1174.00, 531.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 420.785 CPU sec, 23.567 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517292, 8, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 651, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4699)
[0000][PE] mean and std.dev: (1023.26, 1057.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.41, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1246, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4548)
[0000][PE] mean and std.dev: (1467.34, 838.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 416.762 CPU sec, 23.359 real sec
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517190, 7, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (688, 1270, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4462)
[0000][PE] mean and std.dev: (1292.35, 908.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 877)
[0000][PE] mean and std.dev: (495.04, 119.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1031)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1229, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (1378.94, 966.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 417.855 CPU sec, 23.433 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517186, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 505, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3233)
[0000][PE] mean and std.dev: (884.42, 731.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1579, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (1557.45, 699.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 414.875 CPU sec, 23.199 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517365, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 1177, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4653)
[0000][PE] mean and std.dev: (1194.00, 929.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.29, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (508, 1101, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4414)
[0000][PE] mean and std.dev: (1250.48, 1050.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 411.988 CPU sec, 23.061 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516863, 4, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 348, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2533)
[0000][PE] mean and std.dev: (650.31, 634.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.11, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1300, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (1322.57, 600.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 411.965 CPU sec, 23.051 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516894, 10, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 797, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5257)
[0000][PE] mean and std.dev: (1208.82, 1243.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (166, 2284, 3025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8743)
[0000][PE] mean and std.dev: (2194.70, 2349.53)
[0000][PE] low and high boundaries for proper pairs: (1, 11602)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1343, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (1446.65, 617.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 412.345 CPU sec, 23.075 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517324, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 704, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4922)
[0000][PE] mean and std.dev: (1049.97, 1077.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.40, 120.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1260, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (1379.25, 571.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 411.645 CPU sec, 23.084 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205304
	[0000][ M::kt_pipeline] read 1205304 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517516, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (87, 400, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (707.24, 723.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.29, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1574, 2754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6316)
[0000][PE] mean and std.dev: (1906.85, 1173.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 406.420 CPU sec, 22.761 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517402, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 397, 793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1995)
[0000][PE] mean and std.dev: (508.26, 430.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.25, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1405, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (1501.86, 872.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205304 reads in 416.059 CPU sec, 23.297 real sec
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517609, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 645, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4350)
[0000][PE] mean and std.dev: (760.26, 649.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1525, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4244)
[0000][PE] mean and std.dev: (1636.81, 958.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 416.078 CPU sec, 23.354 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 517822, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 912, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3302)
[0000][PE] mean and std.dev: (947.83, 699.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.29, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1155, 1566, 2592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5466)
[0000][PE] mean and std.dev: (1794.05, 834.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 408.618 CPU sec, 22.875 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517486, 10, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 686, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6004)
[0000][PE] mean and std.dev: (1357.00, 1441.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.18, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (930, 2257, 3846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9678)
[0000][PE] mean and std.dev: (2295.00, 1922.19)
[0000][PE] low and high boundaries for proper pairs: (1, 12594)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (533, 1118, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3842)
[0000][PE] mean and std.dev: (1037.12, 671.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 415.394 CPU sec, 23.282 real sec
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205324
	[0000][ M::kt_pipeline] read 1205324 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517096, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 705, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4427)
[0000][PE] mean and std.dev: (1073.33, 1006.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.00, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 1156, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5034)
[0000][PE] mean and std.dev: (1405.86, 1011.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 410.620 CPU sec, 22.941 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517404, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 1268, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (1241.18, 1094.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.45, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 1556, 2707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6567)
[0000][PE] mean and std.dev: (1633.29, 1108.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205324 reads in 415.652 CPU sec, 23.337 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205224
	[0000][ M::kt_pipeline] read 1205224 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517842, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 816, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4086)
[0000][PE] mean and std.dev: (1048.65, 889.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.44, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1096, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3867)
[0000][PE] mean and std.dev: (1406.47, 815.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 414.271 CPU sec, 23.192 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516946, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 985, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6121)
[0000][PE] mean and std.dev: (1335.73, 1128.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.07, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1560, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4412)
[0000][PE] mean and std.dev: (1583.45, 703.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205224 reads in 413.928 CPU sec, 23.204 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517466, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 723, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (942.85, 898.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1360, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (1489.15, 700.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 416.397 CPU sec, 23.391 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517325, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 733, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3821)
[0000][PE] mean and std.dev: (1051.80, 903.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.35, 119.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1256, 1695, 2614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5330)
[0000][PE] mean and std.dev: (1926.43, 1247.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 411.748 CPU sec, 23.086 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517018, 2, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 686, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4339)
[0000][PE] mean and std.dev: (939.19, 792.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.17, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1459, 2420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4960)
[0000][PE] mean and std.dev: (1753.77, 1028.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 410.348 CPU sec, 22.947 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517058, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 492, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4695)
[0000][PE] mean and std.dev: (1095.43, 1208.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.26, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1297, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (1301.19, 783.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 414.397 CPU sec, 23.208 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 516871, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 414, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3001)
[0000][PE] mean and std.dev: (635.75, 618.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.04, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1584, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (1486.35, 797.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 418.857 CPU sec, 23.630 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517092, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 428, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4079)
[0000][PE] mean and std.dev: (954.39, 872.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.26, 120.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 2023, 2978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7088)
[0000][PE] mean and std.dev: (1927.00, 1154.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 411.121 CPU sec, 23.171 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516862, 11, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 716, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3751)
[0000][PE] mean and std.dev: (1001.77, 874.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.49, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (513, 1036, 2525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6549)
[0000][PE] mean and std.dev: (1645.64, 1633.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8561)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1148, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (1355.89, 827.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 413.203 CPU sec, 23.154 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517349, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 735, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3193)
[0000][PE] mean and std.dev: (861.16, 731.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.18, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1375, 2587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5585)
[0000][PE] mean and std.dev: (1688.84, 883.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 416.024 CPU sec, 23.330 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 517288, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 579, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3627)
[0000][PE] mean and std.dev: (942.00, 938.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.02, 120.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1305, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4465)
[0000][PE] mean and std.dev: (1555.19, 1006.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 412.210 CPU sec, 23.096 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517037, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 696, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2599)
[0000][PE] mean and std.dev: (622.38, 431.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.15, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1812, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (1694.38, 928.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 414.277 CPU sec, 23.199 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517359, 4, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 340, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3039)
[0000][PE] mean and std.dev: (604.00, 657.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.65, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1287, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4093)
[0000][PE] mean and std.dev: (1442.74, 812.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5136)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 410.876 CPU sec, 22.996 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517286, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 646, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3520)
[0000][PE] mean and std.dev: (858.85, 764.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.37, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 2013, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5454)
[0000][PE] mean and std.dev: (1613.61, 889.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 410.687 CPU sec, 22.985 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517252, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 537, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3580)
[0000][PE] mean and std.dev: (906.70, 876.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.57, 120.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1389, 3737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8879)
[0000][PE] mean and std.dev: (2108.00, 1294.01)
[0000][PE] low and high boundaries for proper pairs: (1, 11450)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 415.526 CPU sec, 23.335 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516921, 5, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 459, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4431)
[0000][PE] mean and std.dev: (795.62, 756.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.20, 119.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1383, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3724)
[0000][PE] mean and std.dev: (1412.97, 669.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 414.851 CPU sec, 23.304 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517075, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 383, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (765.68, 750.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1195, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2607)
[0000][PE] mean and std.dev: (1049.50, 417.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 415.587 CPU sec, 23.346 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517175, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 391, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (765.06, 691.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.17, 120.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1519, 2415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4863)
[0000][PE] mean and std.dev: (1495.35, 669.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 408.678 CPU sec, 22.905 real sec
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000200 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516821, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 575, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3059)
[0000][PE] mean and std.dev: (815.72, 769.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.48, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1129, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2328)
[0000][PE] mean and std.dev: (1027.74, 434.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 420.798 CPU sec, 23.638 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517222, 6, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 356, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (771.23, 834.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.10, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1650, 4571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11875)
[0000][PE] mean and std.dev: (2721.48, 2437.61)
[0000][PE] low and high boundaries for proper pairs: (1, 15527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 415.751 CPU sec, 23.278 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516982, 8, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 917, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5041)
[0000][PE] mean and std.dev: (1054.11, 954.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1255, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2941)
[0000][PE] mean and std.dev: (1275.60, 495.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 415.745 CPU sec, 23.269 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516859, 5, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 452, 916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2272)
[0000][PE] mean and std.dev: (608.76, 589.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.39, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1565, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4845)
[0000][PE] mean and std.dev: (1632.38, 935.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 412.667 CPU sec, 23.255 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517101, 0, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 1066, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3634)
[0000][PE] mean and std.dev: (800.73, 583.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.63, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1313, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3130)
[0000][PE] mean and std.dev: (1229.00, 493.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 412.921 CPU sec, 23.101 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517068, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 430, 691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1417)
[0000][PE] mean and std.dev: (483.96, 319.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.20, 119.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1835, 2479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5501)
[0000][PE] mean and std.dev: (1780.88, 988.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 410.634 CPU sec, 22.964 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517299, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 718, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (767.38, 681.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.09, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 1097, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4334)
[0000][PE] mean and std.dev: (1168.83, 611.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 420.136 CPU sec, 23.747 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517598, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 1178, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4206)
[0000][PE] mean and std.dev: (1044.37, 794.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.28, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1234, 1501, 2646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5470)
[0000][PE] mean and std.dev: (1780.73, 1000.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 407.955 CPU sec, 22.840 real sec
[0000] Calling mem_process_seqs.., task: 1019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517020, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 631, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (918.70, 940.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.51, 119.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1262, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3913)
[0000][PE] mean and std.dev: (1386.59, 864.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 411.681 CPU sec, 22.992 real sec
[0000] Calling mem_process_seqs.., task: 1020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517063, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 409, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2544)
[0000][PE] mean and std.dev: (546.26, 344.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.04, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1657, 2602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5724)
[0000][PE] mean and std.dev: (2018.52, 1354.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 411.071 CPU sec, 23.005 real sec
[0000] Calling mem_process_seqs.., task: 1021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 516745, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 700, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3662)
[0000][PE] mean and std.dev: (908.75, 762.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.24, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1245, 1527, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4104)
[0000][PE] mean and std.dev: (1602.67, 635.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 410.713 CPU sec, 22.973 real sec
[0000] Calling mem_process_seqs.., task: 1022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517489, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 571, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2748)
[0000][PE] mean and std.dev: (821.29, 651.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.26, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1277, 2713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6039)
[0000][PE] mean and std.dev: (1797.74, 1279.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 413.875 CPU sec, 23.243 real sec
[0000] Calling mem_process_seqs.., task: 1023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517067, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 800, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3637)
[0000][PE] mean and std.dev: (877.77, 606.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.32, 119.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1415, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5831)
[0000][PE] mean and std.dev: (1983.21, 1447.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 413.645 CPU sec, 23.134 real sec
[0000] Calling mem_process_seqs.., task: 1024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517387, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 978, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4194)
[0000][PE] mean and std.dev: (1019.97, 860.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.89, 119.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1508, 2111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4319)
[0000][PE] mean and std.dev: (1518.95, 682.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 413.463 CPU sec, 23.173 real sec
[0000] Calling mem_process_seqs.., task: 1025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516888, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 399, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2475)
[0000][PE] mean and std.dev: (519.15, 431.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1820, 2619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5755)
[0000][PE] mean and std.dev: (1737.65, 1108.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 415.603 CPU sec, 23.274 real sec
[0000] Calling mem_process_seqs.., task: 1026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517112, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 548, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2837)
[0000][PE] mean and std.dev: (767.80, 593.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 120.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (553, 999, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (1181.46, 798.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 410.652 CPU sec, 23.003 real sec
[0000] Calling mem_process_seqs.., task: 1027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517593, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 439, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (569.72, 498.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.28, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1458, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4776)
[0000][PE] mean and std.dev: (1576.20, 842.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 406.657 CPU sec, 22.779 real sec
[0000] Calling mem_process_seqs.., task: 1028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517755, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 1144, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4395)
[0000][PE] mean and std.dev: (1224.92, 918.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.21, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1145, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4029)
[0000][PE] mean and std.dev: (1338.38, 892.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 419.695 CPU sec, 23.604 real sec
[0000] Calling mem_process_seqs.., task: 1029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 517093, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 577, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (793.23, 698.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.27, 120.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1185, 1606, 2716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5778)
[0000][PE] mean and std.dev: (1713.00, 1274.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7309)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 430.380 CPU sec, 24.406 real sec
[0000] Calling mem_process_seqs.., task: 1030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517453, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 486, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5413)
[0000][PE] mean and std.dev: (1059.00, 1001.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.51, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1707, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3941)
[0000][PE] mean and std.dev: (1694.60, 965.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 410.264 CPU sec, 22.968 real sec
[0000] Calling mem_process_seqs.., task: 1031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517122, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 786, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3788)
[0000][PE] mean and std.dev: (955.78, 828.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.21, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1328, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5087)
[0000][PE] mean and std.dev: (1537.32, 943.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 414.090 CPU sec, 23.190 real sec
[0000] Calling mem_process_seqs.., task: 1032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517237, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 623, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (831.00, 701.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.98, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1390, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3266)
[0000][PE] mean and std.dev: (1365.45, 599.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 416.084 CPU sec, 23.290 real sec
[0000] Calling mem_process_seqs.., task: 1033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517912, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 491, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2171)
[0000][PE] mean and std.dev: (661.64, 549.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.31, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1226, 1413, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3167)
[0000][PE] mean and std.dev: (1457.47, 581.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3814)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 415.526 CPU sec, 23.336 real sec
[0000] Calling mem_process_seqs.., task: 1034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516953, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 418, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2915)
[0000][PE] mean and std.dev: (548.61, 459.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (494.83, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1201, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (1336.48, 726.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 413.776 CPU sec, 23.144 real sec
[0000] Calling mem_process_seqs.., task: 1035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205324
	[0000][ M::kt_pipeline] read 1205324 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517212, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 844, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5230)
[0000][PE] mean and std.dev: (1007.39, 925.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.30, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1561, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4441)
[0000][PE] mean and std.dev: (1804.39, 877.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 415.417 CPU sec, 23.244 real sec
[0000] Calling mem_process_seqs.., task: 1036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517707, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 499, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4105)
[0000][PE] mean and std.dev: (884.14, 880.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.08, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1286, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3367)
[0000][PE] mean and std.dev: (1252.58, 555.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205324 reads in 411.511 CPU sec, 23.136 real sec
[0000] Calling mem_process_seqs.., task: 1037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517084, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 927, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (997.04, 821.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.22, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1457, 2611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5649)
[0000][PE] mean and std.dev: (1544.50, 919.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 415.773 CPU sec, 23.281 real sec
[0000] Calling mem_process_seqs.., task: 1038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516810, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 490, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (951.42, 895.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1285, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3573)
[0000][PE] mean and std.dev: (1130.72, 576.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 422.988 CPU sec, 23.957 real sec
[0000] Calling mem_process_seqs.., task: 1039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517001, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 389, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (692.57, 595.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.10, 119.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1317, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4126)
[0000][PE] mean and std.dev: (1399.47, 813.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 415.805 CPU sec, 23.316 real sec
[0000] Calling mem_process_seqs.., task: 1040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517317, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 764, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3650)
[0000][PE] mean and std.dev: (948.03, 860.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.19, 120.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1242, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4277)
[0000][PE] mean and std.dev: (1230.52, 652.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 415.335 CPU sec, 23.301 real sec
[0000] Calling mem_process_seqs.., task: 1041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 517114, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 772, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3354)
[0000][PE] mean and std.dev: (849.77, 676.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.24, 119.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1218, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3429)
[0000][PE] mean and std.dev: (1220.91, 554.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 416.825 CPU sec, 23.501 real sec
[0000] Calling mem_process_seqs.., task: 1042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517588, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 468, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3103)
[0000][PE] mean and std.dev: (738.58, 678.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.21, 119.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1553, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5076)
[0000][PE] mean and std.dev: (1715.24, 997.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 411.348 CPU sec, 23.016 real sec
[0000] Calling mem_process_seqs.., task: 1043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517089, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 451, 885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2249)
[0000][PE] mean and std.dev: (540.77, 425.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.31, 120.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1487, 2664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5980)
[0000][PE] mean and std.dev: (1882.33, 1406.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 417.735 CPU sec, 23.486 real sec
[0000] Calling mem_process_seqs.., task: 1044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517044, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 573, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4862)
[0000][PE] mean and std.dev: (1004.03, 854.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.64, 119.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1125, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4371)
[0000][PE] mean and std.dev: (1320.30, 650.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 413.064 CPU sec, 23.182 real sec
[0000] Calling mem_process_seqs.., task: 1045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205304
	[0000][ M::kt_pipeline] read 1205304 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516890, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 548, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3141)
[0000][PE] mean and std.dev: (718.64, 599.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.19, 120.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1393, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3928)
[0000][PE] mean and std.dev: (1487.00, 903.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 417.297 CPU sec, 23.504 real sec
[0000] Calling mem_process_seqs.., task: 1046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 517075, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 953, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (1067.08, 785.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.37, 120.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1437, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4823)
[0000][PE] mean and std.dev: (1391.00, 758.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205304 reads in 413.018 CPU sec, 23.172 real sec
[0000] Calling mem_process_seqs.., task: 1047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517304, 5, 42)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 756, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (964.51, 816.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1431, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4637)
[0000][PE] mean and std.dev: (1487.50, 795.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 413.744 CPU sec, 23.166 real sec
[0000] Calling mem_process_seqs.., task: 1048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 516770, 3, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 778, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3982)
[0000][PE] mean and std.dev: (870.00, 707.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.04, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1587, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4644)
[0000][PE] mean and std.dev: (1455.14, 718.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 414.645 CPU sec, 23.205 real sec
[0000] Calling mem_process_seqs.., task: 1049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517094, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 744, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3866)
[0000][PE] mean and std.dev: (945.87, 895.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 120.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1704, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (1604.47, 559.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 411.624 CPU sec, 23.052 real sec
[0000] Calling mem_process_seqs.., task: 1050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 517187, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 923, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4448)
[0000][PE] mean and std.dev: (1104.48, 1027.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.20, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1352, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4498)
[0000][PE] mean and std.dev: (1513.43, 759.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 414.216 CPU sec, 23.225 real sec
[0000] Calling mem_process_seqs.., task: 1051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517050, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 442, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4451)
[0000][PE] mean and std.dev: (870.06, 952.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.43, 119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1432, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4101)
[0000][PE] mean and std.dev: (1510.04, 769.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 417.507 CPU sec, 23.457 real sec
[0000] Calling mem_process_seqs.., task: 1052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517211, 11, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 790, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5189)
[0000][PE] mean and std.dev: (1084.81, 1136.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.10, 119.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (3415, 3990, 5963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11059)
[0000][PE] mean and std.dev: (3864.00, 2641.34)
[0000][PE] low and high boundaries for proper pairs: (1, 14429)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1209, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3168)
[0000][PE] mean and std.dev: (1245.61, 646.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 408.201 CPU sec, 22.820 real sec
[0000] Calling mem_process_seqs.., task: 1053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516968, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 932, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5107)
[0000][PE] mean and std.dev: (1254.90, 1066.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 885)
[0000][PE] mean and std.dev: (495.46, 120.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1081, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3144)
[0000][PE] mean and std.dev: (1126.86, 660.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 413.473 CPU sec, 23.200 real sec
[0000] Calling mem_process_seqs.., task: 1054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517499, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 440, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2819)
[0000][PE] mean and std.dev: (652.06, 586.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.16, 119.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1488, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5233)
[0000][PE] mean and std.dev: (1755.83, 1088.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 410.203 CPU sec, 23.023 real sec
[0000] Calling mem_process_seqs.., task: 1055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516848, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 1093, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4556)
[0000][PE] mean and std.dev: (1126.32, 895.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.01, 119.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1587, 2361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4705)
[0000][PE] mean and std.dev: (1526.24, 697.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 412.632 CPU sec, 23.119 real sec
[0000] Calling mem_process_seqs.., task: 1056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517412, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 563, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2628)
[0000][PE] mean and std.dev: (791.22, 600.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.01, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (675, 1587, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5799)
[0000][PE] mean and std.dev: (1562.38, 1118.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 413.684 CPU sec, 23.137 real sec
[0000] Calling mem_process_seqs.., task: 1057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516952, 12, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 444, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3243)
[0000][PE] mean and std.dev: (755.64, 645.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.25, 120.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1181, 3576, 5057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12809)
[0000][PE] mean and std.dev: (3614.58, 2763.33)
[0000][PE] low and high boundaries for proper pairs: (1, 16685)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1118, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3559)
[0000][PE] mean and std.dev: (1298.36, 724.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 417.910 CPU sec, 23.449 real sec
[0000] Calling mem_process_seqs.., task: 1058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205304
	[0000][ M::kt_pipeline] read 1205304 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517147, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 781, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (867.51, 678.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.35, 119.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1292, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (1326.25, 876.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 413.689 CPU sec, 23.196 real sec
[0000] Calling mem_process_seqs.., task: 1059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517254, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 566, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4389)
[0000][PE] mean and std.dev: (849.91, 798.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.28, 119.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1607, 3004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6694)
[0000][PE] mean and std.dev: (2195.17, 1582.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205304 reads in 416.418 CPU sec, 23.429 real sec
[0000] Calling mem_process_seqs.., task: 1060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 516927, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 877, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4221)
[0000][PE] mean and std.dev: (1002.31, 897.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.23, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1524, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4968)
[0000][PE] mean and std.dev: (1658.56, 833.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 419.218 CPU sec, 23.488 real sec
[0000] Calling mem_process_seqs.., task: 1061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517448, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 569, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (830.48, 730.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.28, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1588, 2407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5031)
[0000][PE] mean and std.dev: (1419.65, 773.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 413.647 CPU sec, 23.168 real sec
[0000] Calling mem_process_seqs.., task: 1062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517410, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 447, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2160)
[0000][PE] mean and std.dev: (461.21, 376.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.28, 120.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1420, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (51, 2771)
[0000][PE] mean and std.dev: (1360.50, 423.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 409.855 CPU sec, 22.946 real sec
[0000] Calling mem_process_seqs.., task: 1063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 517132, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 417, 845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2075)
[0000][PE] mean and std.dev: (591.40, 508.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 486, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 883)
[0000][PE] mean and std.dev: (495.56, 120.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 1529, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3563)
[0000][PE] mean and std.dev: (1487.86, 716.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 410.899 CPU sec, 23.014 real sec
[0000] Calling mem_process_seqs.., task: 1064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516838, 3, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 797, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3484)
[0000][PE] mean and std.dev: (842.96, 740.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.34, 120.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1381, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (1469.88, 635.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 416.170 CPU sec, 23.365 real sec
[0000] Calling mem_process_seqs.., task: 1065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 517225, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 852, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3786)
[0000][PE] mean and std.dev: (1088.82, 895.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.33, 119.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1482, 1726, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (1695.55, 682.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 420.249 CPU sec, 23.572 real sec
[0000] Calling mem_process_seqs.., task: 1066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517228, 8, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 577, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3459)
[0000][PE] mean and std.dev: (914.35, 764.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.18, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1277, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4550)
[0000][PE] mean and std.dev: (1460.68, 914.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 411.491 CPU sec, 23.006 real sec
[0000] Calling mem_process_seqs.., task: 1067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517386, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 660, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (841.11, 705.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.29, 119.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1309, 2534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5624)
[0000][PE] mean and std.dev: (1652.09, 1133.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 415.028 CPU sec, 23.288 real sec
[0000] Calling mem_process_seqs.., task: 1068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517203, 10, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 560, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3660)
[0000][PE] mean and std.dev: (804.18, 693.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.06, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (793, 1680, 3200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8014)
[0000][PE] mean and std.dev: (1612.33, 1123.76)
[0000][PE] low and high boundaries for proper pairs: (1, 10421)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1190, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4671)
[0000][PE] mean and std.dev: (1496.69, 1055.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 415.233 CPU sec, 23.274 real sec
[0000] Calling mem_process_seqs.., task: 1069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517769, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 1002, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5169)
[0000][PE] mean and std.dev: (1093.63, 971.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.24, 119.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1348, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3779)
[0000][PE] mean and std.dev: (1528.95, 756.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 409.503 CPU sec, 22.957 real sec
[0000] Calling mem_process_seqs.., task: 1070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517042, 2, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 541, 879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2129)
[0000][PE] mean and std.dev: (612.53, 488.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (495.21, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1356, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (1356.14, 613.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 416.529 CPU sec, 23.342 real sec
[0000] Calling mem_process_seqs.., task: 1071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517363, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 724, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5033)
[0000][PE] mean and std.dev: (1070.59, 1072.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.15, 120.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1258, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3792)
[0000][PE] mean and std.dev: (1417.72, 761.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 415.343 CPU sec, 23.258 real sec
[0000] Calling mem_process_seqs.., task: 1072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517027, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 1082, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (1068.54, 1049.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.22, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1440, 2121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4289)
[0000][PE] mean and std.dev: (1425.32, 666.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 413.237 CPU sec, 23.167 real sec
[0000] Calling mem_process_seqs.., task: 1073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 69779108, nseq: 467232
	[0000][ M::kt_pipeline] read 467232 sequences (69779108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516665, 8, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 1050, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4800)
[0000][PE] mean and std.dev: (1247.21, 1030.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 486, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 882)
[0000][PE] mean and std.dev: (495.48, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1185, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3114)
[0000][PE] mean and std.dev: (1163.48, 704.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 412.387 CPU sec, 23.149 real sec
[0000] Calling mem_process_seqs.., task: 1074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 467232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 200447, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 502, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2353)
[0000][PE] mean and std.dev: (693.08, 530.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 485, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 880)
[0000][PE] mean and std.dev: (494.99, 119.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1280, 1730, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (1588.80, 573.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 467232 reads in 163.313 CPU sec, 9.169 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.132312 MHz
Runtime profile:

	Time taken for main_mem function: 24939.45 sec

	IO times (sec) :
	Reading IO time (reads) avg: 1152.76, (1152.76, 1152.76)
	Writing IO time (SAM) avg: 1905.00, (1905.00, 1905.00)
	Reading IO time (Reference Genome) avg: 7.91, (7.91, 7.91)
	Index read time avg: 13.75, (13.75, 13.75)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 24916.80
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 24914.10, (24914.10, 24914.10)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 10088.14, (10088.14, 10088.14)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 14712.70, (14712.70, 14712.70)
		SMEM compute avg: 5157.47, (5160.96, 5154.56)
		SAL compute avg: 2064.32, (2066.06, 2061.61)
				MEM_SA avg: 1010.03, (1010.89, 1008.58)

		BSW time, avg: 5471.32, (5472.62, 5468.88)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
