Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000078 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517984, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 536, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2965)
[0000][PE] mean and std.dev: (697.43, 454.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.07, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 386.674 CPU sec, 21.856 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518017, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 507, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2674)
[0000][PE] mean and std.dev: (711.94, 533.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1954, 2976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6550)
[0000][PE] mean and std.dev: (2014.64, 1088.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 392.791 CPU sec, 22.074 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517690, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 452, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (770.45, 844.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 402.733 CPU sec, 22.692 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518461, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 390, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (577.20, 463.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 403.681 CPU sec, 22.696 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517947, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 359, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6518)
[0000][PE] mean and std.dev: (1128.56, 1219.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1424, 1544, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (614, 2639)
[0000][PE] mean and std.dev: (1588.30, 446.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 404.744 CPU sec, 22.789 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518283, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (672, 967, 2491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6129)
[0000][PE] mean and std.dev: (1506.19, 1417.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.02, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1854, 2185, 3266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6090)
[0000][PE] mean and std.dev: (2330.91, 1216.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 398.299 CPU sec, 22.356 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517947, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 404, 3673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10287)
[0000][PE] mean and std.dev: (1560.62, 1601.73)
[0000][PE] low and high boundaries for proper pairs: (1, 13594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 397.633 CPU sec, 22.315 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518093, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 441, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (688.29, 525.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1579, 2967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6905)
[0000][PE] mean and std.dev: (2084.62, 1659.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 399.141 CPU sec, 22.573 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517954, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 413, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4853)
[0000][PE] mean and std.dev: (851.32, 950.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 397.251 CPU sec, 22.238 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517910, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 592, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2710)
[0000][PE] mean and std.dev: (712.10, 542.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.47, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 400.593 CPU sec, 22.463 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518437, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 402, 633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1451)
[0000][PE] mean and std.dev: (429.92, 238.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.46, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 395.713 CPU sec, 22.142 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518276, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (713, 861, 2470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5984)
[0000][PE] mean and std.dev: (1540.47, 1480.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1526, 2315, 2760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5228)
[0000][PE] mean and std.dev: (2264.20, 822.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 395.345 CPU sec, 22.156 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518256, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 379, 787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1839)
[0000][PE] mean and std.dev: (431.40, 343.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.71, 125.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1143, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3852)
[0000][PE] mean and std.dev: (1166.50, 482.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 395.156 CPU sec, 22.129 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518113, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 443, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4429)
[0000][PE] mean and std.dev: (654.00, 583.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1139, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5349)
[0000][PE] mean and std.dev: (1362.29, 909.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 397.793 CPU sec, 22.331 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517959, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 515, 2649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7273)
[0000][PE] mean and std.dev: (1382.35, 1549.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.25, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1550, 2156, 2619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4757)
[0000][PE] mean and std.dev: (1997.38, 804.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 399.022 CPU sec, 22.335 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518062, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 410, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3015)
[0000][PE] mean and std.dev: (652.00, 512.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.89, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1344, 1536, 3033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6411)
[0000][PE] mean and std.dev: (2104.91, 1483.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 396.847 CPU sec, 22.206 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518413, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 396.181 CPU sec, 22.216 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517723, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 853, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6935)
[0000][PE] mean and std.dev: (1255.33, 1167.43)
[0000][PE] low and high boundaries for proper pairs: (1, 9137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.48, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1606, 1850, 3063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5977)
[0000][PE] mean and std.dev: (2277.30, 1283.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 404.276 CPU sec, 22.799 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517947, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 650, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2939)
[0000][PE] mean and std.dev: (666.44, 499.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.21, 124.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 396.954 CPU sec, 22.215 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518224, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 1152, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4141)
[0000][PE] mean and std.dev: (1225.94, 917.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1425, 1734, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (1764.60, 584.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 396.500 CPU sec, 22.201 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517872, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 721, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3982)
[0000][PE] mean and std.dev: (1148.86, 1048.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.80, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 397.141 CPU sec, 22.369 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518362, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 441, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1832)
[0000][PE] mean and std.dev: (603.71, 453.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1449, 1813, 4372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10218)
[0000][PE] mean and std.dev: (2191.38, 1423.34)
[0000][PE] low and high boundaries for proper pairs: (1, 13141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 397.341 CPU sec, 22.258 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518006, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 591, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (892.91, 792.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1298, 1454, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (2, 3242)
[0000][PE] mean and std.dev: (1509.50, 524.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 395.457 CPU sec, 22.114 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518005, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 472, 999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2297)
[0000][PE] mean and std.dev: (681.83, 499.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 2111, 3722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8976)
[0000][PE] mean and std.dev: (2319.50, 1553.33)
[0000][PE] low and high boundaries for proper pairs: (1, 11603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 394.288 CPU sec, 22.090 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517500, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 910, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4632)
[0000][PE] mean and std.dev: (599.17, 518.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1396, 4300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10864)
[0000][PE] mean and std.dev: (2267.07, 1597.88)
[0000][PE] low and high boundaries for proper pairs: (1, 14146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 397.788 CPU sec, 22.245 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517762, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 997, 2528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6900)
[0000][PE] mean and std.dev: (1411.80, 1565.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.74, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 398.091 CPU sec, 22.386 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518127, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1176, 2799, 4889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12315)
[0000][PE] mean and std.dev: (3048.60, 2200.54)
[0000][PE] low and high boundaries for proper pairs: (1, 16028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1266, 1933, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3834)
[0000][PE] mean and std.dev: (1779.30, 663.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 398.994 CPU sec, 22.335 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518193, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 436, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3208)
[0000][PE] mean and std.dev: (698.94, 616.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 397.214 CPU sec, 22.244 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518700, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 278, 389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 755)
[0000][PE] mean and std.dev: (246.50, 70.15)
[0000][PE] low and high boundaries for proper pairs: (1, 938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 391.429 CPU sec, 21.919 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518052, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 519, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6768)
[0000][PE] mean and std.dev: (1359.00, 1452.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 391.383 CPU sec, 21.920 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518049, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 849, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3776)
[0000][PE] mean and std.dev: (721.67, 484.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 393.105 CPU sec, 22.003 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518118, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 532, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7492)
[0000][PE] mean and std.dev: (1131.19, 1226.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1138, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (1277.27, 630.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 399.444 CPU sec, 22.445 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517812, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 726, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5378)
[0000][PE] mean and std.dev: (1167.57, 963.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 1922, 4792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13078)
[0000][PE] mean and std.dev: (2454.92, 1962.75)
[0000][PE] low and high boundaries for proper pairs: (1, 17221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 397.499 CPU sec, 22.237 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518031, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 329, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4928)
[0000][PE] mean and std.dev: (997.44, 1247.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1469, 2814, 3558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7736)
[0000][PE] mean and std.dev: (2690.75, 1899.98)
[0000][PE] low and high boundaries for proper pairs: (1, 10291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 398.692 CPU sec, 22.297 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518112, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 414, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (760.61, 725.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 395.546 CPU sec, 22.144 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517655, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 460, 2814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7658)
[0000][PE] mean and std.dev: (1426.08, 1540.42)
[0000][PE] low and high boundaries for proper pairs: (1, 10080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.72, 125.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1247, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (1232.20, 549.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 395.567 CPU sec, 22.171 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517941, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 1140, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4040)
[0000][PE] mean and std.dev: (882.17, 734.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1405, 3542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8368)
[0000][PE] mean and std.dev: (2430.93, 1981.28)
[0000][PE] low and high boundaries for proper pairs: (1, 10781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 399.749 CPU sec, 22.486 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517934, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 834, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5708)
[0000][PE] mean and std.dev: (1293.14, 1195.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.70, 125.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1673, 2585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6055)
[0000][PE] mean and std.dev: (1641.83, 929.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 394.485 CPU sec, 22.082 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517949, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 503, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5050)
[0000][PE] mean and std.dev: (880.23, 890.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1594, 1737, 3118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6166)
[0000][PE] mean and std.dev: (2222.13, 1185.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 394.782 CPU sec, 22.085 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518067, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 461, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2737)
[0000][PE] mean and std.dev: (688.67, 575.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.73, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 394.243 CPU sec, 22.100 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518259, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 769, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3893)
[0000][PE] mean and std.dev: (1091.00, 967.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1446, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2811)
[0000][PE] mean and std.dev: (1248.33, 482.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 401.648 CPU sec, 22.540 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517746, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 250, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 810)
[0000][PE] mean and std.dev: (231.92, 82.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.32, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1566, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4616)
[0000][PE] mean and std.dev: (1420.42, 763.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 397.835 CPU sec, 22.279 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000078 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518414, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 868, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3948)
[0000][PE] mean and std.dev: (856.60, 724.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.41, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 392.026 CPU sec, 22.222 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517611, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 1067, 2576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7422)
[0000][PE] mean and std.dev: (1328.46, 1293.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1980, 3003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7261)
[0000][PE] mean and std.dev: (1751.64, 992.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 392.407 CPU sec, 21.976 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517808, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 624, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3437)
[0000][PE] mean and std.dev: (717.95, 588.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 399.618 CPU sec, 22.354 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518097, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 382, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5658)
[0000][PE] mean and std.dev: (1036.24, 903.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1437, 2631, 4379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10263)
[0000][PE] mean and std.dev: (2686.77, 1432.83)
[0000][PE] low and high boundaries for proper pairs: (1, 13205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 396.062 CPU sec, 22.173 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517947, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 551, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2942)
[0000][PE] mean and std.dev: (686.65, 669.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.64, 125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 396.906 CPU sec, 22.208 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518152, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 348, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (770.54, 756.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.64, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (610, 1266, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4729)
[0000][PE] mean and std.dev: (1347.10, 1048.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 395.672 CPU sec, 22.411 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518180, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 786, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5969)
[0000][PE] mean and std.dev: (1195.71, 1130.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1792, 2492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5574)
[0000][PE] mean and std.dev: (1424.40, 963.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 396.368 CPU sec, 22.157 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518289, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 898, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (963.39, 849.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1175, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (998.62, 538.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 392.078 CPU sec, 21.950 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518157, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 1366, 3597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10129)
[0000][PE] mean and std.dev: (1727.08, 1694.29)
[0000][PE] low and high boundaries for proper pairs: (1, 13395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1362, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4651)
[0000][PE] mean and std.dev: (1479.50, 1001.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 394.827 CPU sec, 22.077 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518204, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 931, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4599)
[0000][PE] mean and std.dev: (1007.50, 1002.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 395.608 CPU sec, 22.130 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518286, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 439, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2313)
[0000][PE] mean and std.dev: (570.00, 375.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 395.393 CPU sec, 22.138 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518069, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 366, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1876)
[0000][PE] mean and std.dev: (461.74, 343.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.89, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1720, 2492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5446)
[0000][PE] mean and std.dev: (1856.44, 872.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 392.304 CPU sec, 21.925 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518176, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 396, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (842.46, 941.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 2038, 3669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9145)
[0000][PE] mean and std.dev: (1986.50, 1279.17)
[0000][PE] low and high boundaries for proper pairs: (1, 11883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 393.199 CPU sec, 22.023 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518363, 8, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 839, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (906.80, 741.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 397.377 CPU sec, 22.225 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518017, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (488, 1050, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4394)
[0000][PE] mean and std.dev: (1081.31, 891.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 398.536 CPU sec, 22.285 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517870, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 716, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4490)
[0000][PE] mean and std.dev: (1272.79, 1245.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 396.326 CPU sec, 22.238 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518020, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 401, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4561)
[0000][PE] mean and std.dev: (911.40, 1074.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.65, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 392.892 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518333, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 375, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (772.39, 827.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.72, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1279, 1645, 2560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5122)
[0000][PE] mean and std.dev: (1792.50, 875.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 394.755 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517783, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 730, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5025)
[0000][PE] mean and std.dev: (1041.36, 1117.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.95, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1578, 3520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8730)
[0000][PE] mean and std.dev: (2475.86, 2214.03)
[0000][PE] low and high boundaries for proper pairs: (1, 11335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 393.653 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518238, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 675, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4770)
[0000][PE] mean and std.dev: (808.40, 868.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1303, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (1297.60, 761.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 394.675 CPU sec, 22.181 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518017, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 1318, 2646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7246)
[0000][PE] mean and std.dev: (1616.71, 1458.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1635, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4964)
[0000][PE] mean and std.dev: (1641.56, 802.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 392.441 CPU sec, 22.003 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518164, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 875, 3008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8392)
[0000][PE] mean and std.dev: (1710.36, 1811.73)
[0000][PE] low and high boundaries for proper pairs: (1, 11084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1295, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3641)
[0000][PE] mean and std.dev: (1326.64, 735.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 395.404 CPU sec, 22.214 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517931, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 740, 2690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7372)
[0000][PE] mean and std.dev: (1563.85, 1816.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.19, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 2217, 3874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9418)
[0000][PE] mean and std.dev: (2428.42, 1777.39)
[0000][PE] low and high boundaries for proper pairs: (1, 12190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 394.676 CPU sec, 22.099 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518412, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 381, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4126)
[0000][PE] mean and std.dev: (843.71, 837.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 389.456 CPU sec, 21.829 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517907, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 523, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3415)
[0000][PE] mean and std.dev: (777.54, 589.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (723, 1131, 2518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6108)
[0000][PE] mean and std.dev: (1295.13, 1210.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 393.420 CPU sec, 22.036 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517911, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 452, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4128)
[0000][PE] mean and std.dev: (836.55, 766.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.66, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1774, 3077, 4264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9244)
[0000][PE] mean and std.dev: (3143.73, 1671.56)
[0000][PE] low and high boundaries for proper pairs: (1, 11734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 392.359 CPU sec, 22.020 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517963, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 404, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2220)
[0000][PE] mean and std.dev: (460.08, 430.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 603)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 925)
[0000][PE] mean and std.dev: (527.02, 124.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1086)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 2372, 2613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5841)
[0000][PE] mean and std.dev: (1826.36, 760.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 395.462 CPU sec, 22.210 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518465, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 313, 691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1543)
[0000][PE] mean and std.dev: (358.40, 159.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1202, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5823)
[0000][PE] mean and std.dev: (1553.92, 1118.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 393.429 CPU sec, 22.065 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518219, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 918, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5913)
[0000][PE] mean and std.dev: (1138.44, 1020.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.26, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1507, 2500, 3996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8974)
[0000][PE] mean and std.dev: (2908.00, 2073.47)
[0000][PE] low and high boundaries for proper pairs: (1, 11463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 392.405 CPU sec, 22.018 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518342, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 1563, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5023)
[0000][PE] mean and std.dev: (1420.65, 1164.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 394.450 CPU sec, 22.150 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517970, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (674, 1292, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4562)
[0000][PE] mean and std.dev: (1122.36, 738.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 393.490 CPU sec, 22.049 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518263, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 918, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4291)
[0000][PE] mean and std.dev: (903.64, 664.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.62, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (541, 1497, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6487)
[0000][PE] mean and std.dev: (1498.00, 1004.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 394.621 CPU sec, 22.125 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517744, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 616, 2744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7654)
[0000][PE] mean and std.dev: (1746.80, 2189.47)
[0000][PE] low and high boundaries for proper pairs: (1, 10505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.80, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 828, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2774)
[0000][PE] mean and std.dev: (994.71, 695.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 395.955 CPU sec, 22.199 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517903, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 460, 2877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8143)
[0000][PE] mean and std.dev: (1595.86, 1930.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.87, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 393.084 CPU sec, 22.018 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518143, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 514, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (726.45, 606.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.44, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1439, 1813, 2852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5678)
[0000][PE] mean and std.dev: (2088.42, 1098.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 390.876 CPU sec, 21.899 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517807, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 523, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2753)
[0000][PE] mean and std.dev: (897.14, 720.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 394.068 CPU sec, 22.091 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518322, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 806, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4356)
[0000][PE] mean and std.dev: (861.47, 820.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.63, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1252, 1669, 3807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8917)
[0000][PE] mean and std.dev: (2161.27, 1347.80)
[0000][PE] low and high boundaries for proper pairs: (1, 11472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 392.021 CPU sec, 21.947 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517848, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 396, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4356)
[0000][PE] mean and std.dev: (811.00, 769.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.73, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1221, 1457, 3108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6882)
[0000][PE] mean and std.dev: (2078.42, 1700.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 392.602 CPU sec, 22.007 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518025, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 706, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5311)
[0000][PE] mean and std.dev: (1370.35, 1616.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.68, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 395.699 CPU sec, 22.161 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518128, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 462, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3150)
[0000][PE] mean and std.dev: (713.13, 472.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1236, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3196)
[0000][PE] mean and std.dev: (1364.42, 654.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 395.567 CPU sec, 22.223 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518404, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 1493, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5053)
[0000][PE] mean and std.dev: (1287.44, 813.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1359, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4602)
[0000][PE] mean and std.dev: (1298.83, 862.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 392.683 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517768, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 374, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3596)
[0000][PE] mean and std.dev: (742.62, 657.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 394.076 CPU sec, 22.141 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517831, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 430, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3374)
[0000][PE] mean and std.dev: (766.24, 618.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 395.738 CPU sec, 22.195 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518440, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 448, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4246)
[0000][PE] mean and std.dev: (695.67, 544.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 391.201 CPU sec, 21.912 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517942, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 432, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (675.71, 637.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.63, 125.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1445, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4077)
[0000][PE] mean and std.dev: (1759.00, 876.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 391.959 CPU sec, 21.973 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517777, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 1351, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6592)
[0000][PE] mean and std.dev: (1432.20, 1404.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 394.373 CPU sec, 22.141 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518049, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 494, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6422)
[0000][PE] mean and std.dev: (1058.26, 1224.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1639, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5205)
[0000][PE] mean and std.dev: (1580.91, 944.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 395.174 CPU sec, 22.168 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518428, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 388, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2486)
[0000][PE] mean and std.dev: (560.78, 426.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 393.101 CPU sec, 22.064 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517704, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (870, 1344, 2653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6219)
[0000][PE] mean and std.dev: (1562.75, 1056.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.74, 125.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1290, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (1434.79, 849.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 393.925 CPU sec, 22.085 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518020, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 593, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5068)
[0000][PE] mean and std.dev: (1085.81, 1027.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.23, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 394.176 CPU sec, 22.073 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518257, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 548, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (907.59, 903.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (610, 1370, 2877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7411)
[0000][PE] mean and std.dev: (1630.85, 1199.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 390.658 CPU sec, 21.889 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517901, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 375, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3307)
[0000][PE] mean and std.dev: (593.59, 593.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1604, 3741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8849)
[0000][PE] mean and std.dev: (2043.70, 1372.62)
[0000][PE] low and high boundaries for proper pairs: (1, 11403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 394.255 CPU sec, 22.107 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518095, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 434, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2373)
[0000][PE] mean and std.dev: (552.83, 444.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1254, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3765)
[0000][PE] mean and std.dev: (1303.33, 670.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 393.515 CPU sec, 22.067 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517855, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 352, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6087)
[0000][PE] mean and std.dev: (1165.38, 1406.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 396.161 CPU sec, 22.261 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518035, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 1393, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (1143.77, 1096.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 2477, 2852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6802)
[0000][PE] mean and std.dev: (2230.21, 1647.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 395.366 CPU sec, 22.150 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518065, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 990, 2824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7726)
[0000][PE] mean and std.dev: (1087.80, 1034.74)
[0000][PE] low and high boundaries for proper pairs: (1, 10177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.01, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1549, 5167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13713)
[0000][PE] mean and std.dev: (2672.00, 2388.76)
[0000][PE] low and high boundaries for proper pairs: (1, 17986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 394.498 CPU sec, 22.116 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518144, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 402, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1221)
[0000][PE] mean and std.dev: (361.92, 199.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.74, 124.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1298, 2399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5493)
[0000][PE] mean and std.dev: (1499.36, 732.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 394.707 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518070, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 655, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6714)
[0000][PE] mean and std.dev: (1049.57, 1093.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 394.460 CPU sec, 22.127 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517989, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 867, 4153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11921)
[0000][PE] mean and std.dev: (2253.85, 2523.15)
[0000][PE] low and high boundaries for proper pairs: (1, 15805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.42, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 391.401 CPU sec, 21.916 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518474, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 618, 3038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8644)
[0000][PE] mean and std.dev: (1913.93, 2286.60)
[0000][PE] low and high boundaries for proper pairs: (1, 11447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.90, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1470, 2486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5346)
[0000][PE] mean and std.dev: (1592.40, 882.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 391.748 CPU sec, 21.956 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517820, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 445, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6051)
[0000][PE] mean and std.dev: (1346.10, 1457.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1269, 1583, 2918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6216)
[0000][PE] mean and std.dev: (1982.46, 1162.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 392.703 CPU sec, 22.032 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517961, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 965, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3292)
[0000][PE] mean and std.dev: (948.10, 691.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 392.641 CPU sec, 22.007 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517825, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 650, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5655)
[0000][PE] mean and std.dev: (1122.00, 1082.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.84, 125.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 396.082 CPU sec, 22.219 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518573, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 913, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (953.31, 850.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1763, 3113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7575)
[0000][PE] mean and std.dev: (2382.10, 2051.55)
[0000][PE] low and high boundaries for proper pairs: (1, 10588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 392.144 CPU sec, 22.007 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518000, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1375, 2885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7937)
[0000][PE] mean and std.dev: (1386.44, 1225.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (407, 879, 3137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8597)
[0000][PE] mean and std.dev: (1361.31, 1235.42)
[0000][PE] low and high boundaries for proper pairs: (1, 11327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 393.515 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518231, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 1071, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4356)
[0000][PE] mean and std.dev: (1291.35, 1214.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 392.760 CPU sec, 22.002 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517954, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 371, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4034)
[0000][PE] mean and std.dev: (792.50, 687.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1279, 1454, 2797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5833)
[0000][PE] mean and std.dev: (1688.90, 910.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 395.509 CPU sec, 22.158 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518004, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (566, 1181, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4718)
[0000][PE] mean and std.dev: (1295.46, 946.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.11, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 394.144 CPU sec, 22.101 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518038, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (448, 940, 2391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6277)
[0000][PE] mean and std.dev: (1353.09, 1179.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 395.638 CPU sec, 22.165 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517758, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 495, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4286)
[0000][PE] mean and std.dev: (761.06, 624.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.78, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1298, 3745, 4505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10919)
[0000][PE] mean and std.dev: (3347.00, 2521.99)
[0000][PE] low and high boundaries for proper pairs: (1, 14126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 396.080 CPU sec, 22.186 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518188, 3, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 394.168 CPU sec, 22.056 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517942, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 947, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6118)
[0000][PE] mean and std.dev: (1272.15, 1210.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.84, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1231, 1570, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (157, 2842)
[0000][PE] mean and std.dev: (1354.67, 573.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 394.874 CPU sec, 22.164 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517728, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 413, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3316)
[0000][PE] mean and std.dev: (701.93, 642.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1638, 3110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7056)
[0000][PE] mean and std.dev: (2135.27, 1329.68)
[0000][PE] low and high boundaries for proper pairs: (1, 9029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 397.627 CPU sec, 22.266 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518252, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 289, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2878)
[0000][PE] mean and std.dev: (554.53, 656.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.47, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (637, 2119, 2563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6415)
[0000][PE] mean and std.dev: (1893.70, 1337.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 394.612 CPU sec, 22.091 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518052, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 319, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3051)
[0000][PE] mean and std.dev: (482.00, 457.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 396.667 CPU sec, 22.230 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518673, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 1430, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6584)
[0000][PE] mean and std.dev: (1374.10, 1002.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (684, 1529, 3990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10602)
[0000][PE] mean and std.dev: (2003.08, 1964.01)
[0000][PE] low and high boundaries for proper pairs: (1, 13908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 391.978 CPU sec, 21.959 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518316, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 919, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5022)
[0000][PE] mean and std.dev: (1187.43, 1179.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.17, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 395.598 CPU sec, 22.155 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518008, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 823, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3590)
[0000][PE] mean and std.dev: (1118.93, 914.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 393.741 CPU sec, 22.102 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517992, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 479, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1830)
[0000][PE] mean and std.dev: (589.67, 397.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.78, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1056, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4899)
[0000][PE] mean and std.dev: (1553.27, 1252.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 395.084 CPU sec, 22.198 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518616, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 450, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3661)
[0000][PE] mean and std.dev: (763.10, 719.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.82, 125.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 391.453 CPU sec, 21.944 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 517880, 8, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1553, 2665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6345)
[0000][PE] mean and std.dev: (1934.20, 1266.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8185)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 394.565 CPU sec, 22.119 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518275, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 377, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1044)
[0000][PE] mean and std.dev: (348.08, 188.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.85, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1299, 1481, 2303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4311)
[0000][PE] mean and std.dev: (1606.55, 461.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 391.876 CPU sec, 21.942 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518320, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 516, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4824)
[0000][PE] mean and std.dev: (983.82, 749.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1651, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4996)
[0000][PE] mean and std.dev: (1929.57, 1232.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 392.946 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518247, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 408, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2953)
[0000][PE] mean and std.dev: (561.93, 374.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 125.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1865, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (1728.86, 862.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 393.522 CPU sec, 22.043 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518191, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 990, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (1053.00, 969.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1252, 3852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9528)
[0000][PE] mean and std.dev: (1810.08, 1326.39)
[0000][PE] low and high boundaries for proper pairs: (1, 12366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 394.773 CPU sec, 22.151 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517837, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 398, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5630)
[0000][PE] mean and std.dev: (939.29, 1145.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.58, 125.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 391.812 CPU sec, 21.982 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517797, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 481, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4042)
[0000][PE] mean and std.dev: (883.38, 984.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.80, 125.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1562, 2762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6342)
[0000][PE] mean and std.dev: (1692.42, 802.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 392.071 CPU sec, 21.983 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518093, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 490, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3854)
[0000][PE] mean and std.dev: (899.00, 952.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1339, 1810, 3836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8830)
[0000][PE] mean and std.dev: (2374.90, 1612.34)
[0000][PE] low and high boundaries for proper pairs: (1, 11327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 396.593 CPU sec, 22.228 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518272, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 378, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1867)
[0000][PE] mean and std.dev: (494.46, 377.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 396.869 CPU sec, 22.222 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517993, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (782, 1049, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (987.64, 503.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 393.650 CPU sec, 22.054 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 517989, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 397.065 CPU sec, 22.276 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518071, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 470, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (1054.05, 1041.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 395.788 CPU sec, 22.215 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517794, 8, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.75, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 394.505 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518312, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 351, 594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1324)
[0000][PE] mean and std.dev: (358.17, 193.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1597, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (1270.20, 641.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 395.676 CPU sec, 22.181 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517689, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 434, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4018)
[0000][PE] mean and std.dev: (965.89, 1069.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 396.708 CPU sec, 22.264 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518054, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 893, 3118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8978)
[0000][PE] mean and std.dev: (2100.80, 2494.08)
[0000][PE] low and high boundaries for proper pairs: (1, 12077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 392.081 CPU sec, 21.970 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518095, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 358, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (807.79, 863.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.38, 124.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 394.208 CPU sec, 22.077 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518062, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 536, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4216)
[0000][PE] mean and std.dev: (938.86, 895.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 394.196 CPU sec, 22.047 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517861, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 425, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4695)
[0000][PE] mean and std.dev: (856.67, 875.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 395.745 CPU sec, 22.273 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518377, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 1264, 3163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8819)
[0000][PE] mean and std.dev: (1339.29, 1267.05)
[0000][PE] low and high boundaries for proper pairs: (1, 11647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1348, 1680, 2290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (1589.36, 672.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 395.528 CPU sec, 22.465 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518330, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 799, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3814)
[0000][PE] mean and std.dev: (937.79, 718.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1360, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5678)
[0000][PE] mean and std.dev: (1486.36, 1019.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 394.638 CPU sec, 22.068 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518273, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (462, 869, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5493)
[0000][PE] mean and std.dev: (1358.83, 1153.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1677, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3780)
[0000][PE] mean and std.dev: (1613.50, 953.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 394.696 CPU sec, 22.183 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517887, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 388, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6598)
[0000][PE] mean and std.dev: (1172.00, 1217.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 394.964 CPU sec, 22.159 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517856, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 749, 3095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8627)
[0000][PE] mean and std.dev: (1487.42, 1933.86)
[0000][PE] low and high boundaries for proper pairs: (1, 11393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1235, 1523, 3267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7331)
[0000][PE] mean and std.dev: (1415.56, 815.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 395.130 CPU sec, 22.142 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518386, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 944, 2975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8451)
[0000][PE] mean and std.dev: (1739.92, 2215.34)
[0000][PE] low and high boundaries for proper pairs: (1, 11189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.77, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1195, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4893)
[0000][PE] mean and std.dev: (1579.42, 850.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 397.675 CPU sec, 22.268 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518059, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (570, 911, 3301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8763)
[0000][PE] mean and std.dev: (1445.42, 1403.68)
[0000][PE] low and high boundaries for proper pairs: (1, 11494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1510, 3644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9082)
[0000][PE] mean and std.dev: (2130.00, 1747.95)
[0000][PE] low and high boundaries for proper pairs: (1, 11801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 395.081 CPU sec, 22.139 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518015, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 690, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6654)
[0000][PE] mean and std.dev: (1145.65, 1160.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 125.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 392.571 CPU sec, 21.961 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518227, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 462, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2882)
[0000][PE] mean and std.dev: (686.92, 537.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1965, 6638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17746)
[0000][PE] mean and std.dev: (3261.08, 3104.70)
[0000][PE] low and high boundaries for proper pairs: (1, 23300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 396.903 CPU sec, 22.226 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517929, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 607, 2262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6168)
[0000][PE] mean and std.dev: (1433.53, 1698.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 396.279 CPU sec, 22.172 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517552, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 866, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4955)
[0000][PE] mean and std.dev: (1149.50, 1014.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.42, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 396.175 CPU sec, 22.152 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517770, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 402, 766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1784)
[0000][PE] mean and std.dev: (397.73, 234.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1603, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3629)
[0000][PE] mean and std.dev: (1379.60, 707.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 395.200 CPU sec, 22.079 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517994, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 1332, 2538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6832)
[0000][PE] mean and std.dev: (1358.89, 993.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.47, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 394.971 CPU sec, 22.133 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518026, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 513, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2776)
[0000][PE] mean and std.dev: (556.00, 539.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.54, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1927, 2761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5923)
[0000][PE] mean and std.dev: (2019.44, 1008.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 392.996 CPU sec, 21.959 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517805, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 628, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3275)
[0000][PE] mean and std.dev: (786.11, 572.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 396.804 CPU sec, 22.189 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518340, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 1721, 3068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8544)
[0000][PE] mean and std.dev: (1571.00, 1219.80)
[0000][PE] low and high boundaries for proper pairs: (1, 11282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 394.744 CPU sec, 22.110 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518337, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 1292, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4762)
[0000][PE] mean and std.dev: (1285.20, 1177.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 393.024 CPU sec, 22.059 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518519, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 313, 626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1496)
[0000][PE] mean and std.dev: (315.33, 176.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.40, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 2653, 2835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7301)
[0000][PE] mean and std.dev: (1989.29, 1378.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 392.380 CPU sec, 21.949 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518172, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 422, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3547)
[0000][PE] mean and std.dev: (754.00, 789.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.29, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (442, 1526, 3635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10021)
[0000][PE] mean and std.dev: (2325.00, 2190.70)
[0000][PE] low and high boundaries for proper pairs: (1, 13214)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1208, 2192, 3578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8318)
[0000][PE] mean and std.dev: (2428.08, 1584.25)
[0000][PE] low and high boundaries for proper pairs: (1, 10688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 391.461 CPU sec, 21.913 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518177, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 373, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3623)
[0000][PE] mean and std.dev: (754.00, 619.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 397.470 CPU sec, 22.270 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517853, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 586, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3103)
[0000][PE] mean and std.dev: (658.05, 443.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.69, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1892, 4816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12258)
[0000][PE] mean and std.dev: (2573.75, 2262.53)
[0000][PE] low and high boundaries for proper pairs: (1, 15979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 398.122 CPU sec, 22.328 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517944, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 435, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (833.44, 881.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.62, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1403, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3283)
[0000][PE] mean and std.dev: (1515.40, 620.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 392.070 CPU sec, 21.940 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518315, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 1126, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3913)
[0000][PE] mean and std.dev: (925.53, 810.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 392.636 CPU sec, 21.956 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518303, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 828, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3666)
[0000][PE] mean and std.dev: (926.23, 768.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.26, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 392.458 CPU sec, 21.946 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517951, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 324, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3212)
[0000][PE] mean and std.dev: (571.18, 538.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 603)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 925)
[0000][PE] mean and std.dev: (527.08, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1086)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1263, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (1164.73, 620.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 396.712 CPU sec, 22.271 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518307, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 730, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3643)
[0000][PE] mean and std.dev: (810.59, 601.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 395.497 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518117, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 323, 938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2258)
[0000][PE] mean and std.dev: (644.20, 571.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.63, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 394.962 CPU sec, 22.152 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518191, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 757, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5390)
[0000][PE] mean and std.dev: (1228.00, 1416.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.85, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1314, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4882)
[0000][PE] mean and std.dev: (1297.00, 774.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 392.649 CPU sec, 21.984 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517823, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 670, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3867)
[0000][PE] mean and std.dev: (700.83, 486.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.71, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 397.401 CPU sec, 22.247 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518206, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (659, 1314, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5888)
[0000][PE] mean and std.dev: (1516.81, 1110.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.45, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 397.530 CPU sec, 22.260 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517613, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 387, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3794)
[0000][PE] mean and std.dev: (821.38, 863.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 396.461 CPU sec, 22.211 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517540, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 330, 695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1699)
[0000][PE] mean and std.dev: (402.67, 259.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1306, 2295, 2810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5818)
[0000][PE] mean and std.dev: (1891.56, 1107.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 398.740 CPU sec, 22.329 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518355, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 733, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (950.80, 837.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 395.323 CPU sec, 22.245 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518150, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 515, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4034)
[0000][PE] mean and std.dev: (797.74, 681.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.27, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 397.654 CPU sec, 22.295 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518063, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (669, 1619, 2720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6822)
[0000][PE] mean and std.dev: (1673.31, 1499.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1441, 1864, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4660)
[0000][PE] mean and std.dev: (1917.50, 634.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 395.122 CPU sec, 22.108 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518461, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 473, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5135)
[0000][PE] mean and std.dev: (864.62, 778.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.66, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 397.223 CPU sec, 22.226 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518101, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (498, 823, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2073)
[0000][PE] mean and std.dev: (792.55, 312.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1626, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (1535.36, 601.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4136)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 393.801 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517716, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 374, 868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1952)
[0000][PE] mean and std.dev: (430.64, 220.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 395.489 CPU sec, 22.128 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518014, 6, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.23, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 394.875 CPU sec, 22.129 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517666, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 1182, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6172)
[0000][PE] mean and std.dev: (1368.77, 1358.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 395.000 CPU sec, 22.135 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518053, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 470, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2460)
[0000][PE] mean and std.dev: (563.58, 349.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.19, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (592, 1366, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4003)
[0000][PE] mean and std.dev: (1232.69, 770.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 397.330 CPU sec, 22.263 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517781, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 537, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2866)
[0000][PE] mean and std.dev: (805.05, 737.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.76, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1490, 1926, 5342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13046)
[0000][PE] mean and std.dev: (3280.20, 2567.50)
[0000][PE] low and high boundaries for proper pairs: (1, 16898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 397.406 CPU sec, 22.246 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518021, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 479, 3671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10403)
[0000][PE] mean and std.dev: (1997.00, 2460.64)
[0000][PE] low and high boundaries for proper pairs: (1, 13769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 392.812 CPU sec, 21.964 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517750, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 1422, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4967)
[0000][PE] mean and std.dev: (1156.33, 790.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1096, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3090)
[0000][PE] mean and std.dev: (926.50, 513.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 397.172 CPU sec, 22.249 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518098, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 958, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3093)
[0000][PE] mean and std.dev: (846.36, 501.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1811, 3013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6753)
[0000][PE] mean and std.dev: (1880.20, 1066.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 397.484 CPU sec, 22.284 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518739, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 388, 821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1855)
[0000][PE] mean and std.dev: (551.08, 454.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1016, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2887)
[0000][PE] mean and std.dev: (1004.56, 515.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 392.197 CPU sec, 21.960 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517797, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 613, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5507)
[0000][PE] mean and std.dev: (1151.38, 1122.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 1168, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4149)
[0000][PE] mean and std.dev: (1196.08, 904.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 394.133 CPU sec, 22.107 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518355, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 771, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5415)
[0000][PE] mean and std.dev: (969.95, 865.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1506, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4394)
[0000][PE] mean and std.dev: (1639.40, 954.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 393.422 CPU sec, 22.011 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517806, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 872, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5024)
[0000][PE] mean and std.dev: (968.88, 789.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.74, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 396.594 CPU sec, 22.201 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518104, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 336, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4799)
[0000][PE] mean and std.dev: (1052.64, 1263.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 395.407 CPU sec, 22.115 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517916, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 505, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4599)
[0000][PE] mean and std.dev: (1014.36, 870.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.42, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1656, 2979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6817)
[0000][PE] mean and std.dev: (1766.92, 1156.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 393.320 CPU sec, 22.010 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517837, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 382, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3001)
[0000][PE] mean and std.dev: (523.31, 539.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 125.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 394.458 CPU sec, 22.122 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518257, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 437, 785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1771)
[0000][PE] mean and std.dev: (380.00, 196.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1227, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4930)
[0000][PE] mean and std.dev: (1531.70, 1059.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 392.164 CPU sec, 21.969 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517989, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 490, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4222)
[0000][PE] mean and std.dev: (822.94, 743.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (607, 1746, 2882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7432)
[0000][PE] mean and std.dev: (1870.30, 1569.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 395.426 CPU sec, 22.153 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517878, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 416, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4107)
[0000][PE] mean and std.dev: (912.50, 1005.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1386, 2177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (1664.55, 1064.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 392.632 CPU sec, 21.992 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 518574, 7, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.79, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (510, 1692, 4738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13194)
[0000][PE] mean and std.dev: (2440.33, 2411.07)
[0000][PE] low and high boundaries for proper pairs: (1, 17422)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 392.244 CPU sec, 21.938 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518124, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 931, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4077)
[0000][PE] mean and std.dev: (1180.00, 1121.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.46, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 395.537 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518343, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 468, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2950)
[0000][PE] mean and std.dev: (613.31, 405.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.36, 124.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1517, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4859)
[0000][PE] mean and std.dev: (1793.42, 943.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 392.931 CPU sec, 22.073 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518299, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 496, 3006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8608)
[0000][PE] mean and std.dev: (1419.32, 1858.96)
[0000][PE] low and high boundaries for proper pairs: (1, 11409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 125.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1289, 1836, 2299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4319)
[0000][PE] mean and std.dev: (1850.00, 853.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 396.076 CPU sec, 22.145 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518262, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 456, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (977.81, 956.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 396.643 CPU sec, 22.197 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518018, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 373, 2593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7393)
[0000][PE] mean and std.dev: (1200.67, 1282.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.80, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 393.922 CPU sec, 22.038 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517836, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 491, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3734)
[0000][PE] mean and std.dev: (789.56, 741.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1251, 2242, 3688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8562)
[0000][PE] mean and std.dev: (2360.31, 1522.71)
[0000][PE] low and high boundaries for proper pairs: (1, 10999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 394.357 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517707, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 1189, 2806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7858)
[0000][PE] mean and std.dev: (2063.93, 2179.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.20, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 397.500 CPU sec, 22.247 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517926, 7, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 427, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (685.80, 677.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.20, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 393.438 CPU sec, 22.078 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517715, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 632, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (891.17, 770.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.18, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 2648, 3504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8764)
[0000][PE] mean and std.dev: (2350.54, 1430.02)
[0000][PE] low and high boundaries for proper pairs: (1, 11394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 396.969 CPU sec, 22.255 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517406, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 478, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3068)
[0000][PE] mean and std.dev: (797.91, 723.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.46, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 2019, 3186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7710)
[0000][PE] mean and std.dev: (2028.92, 1524.45)
[0000][PE] low and high boundaries for proper pairs: (1, 9972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 397.671 CPU sec, 22.252 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517535, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 1071, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4746)
[0000][PE] mean and std.dev: (908.23, 691.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.76, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1512, 2352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5056)
[0000][PE] mean and std.dev: (1545.91, 762.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 396.923 CPU sec, 22.231 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518343, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 307, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2440)
[0000][PE] mean and std.dev: (395.83, 340.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.82, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 396.801 CPU sec, 22.199 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518073, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 767, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5673)
[0000][PE] mean and std.dev: (928.00, 891.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 392.662 CPU sec, 21.973 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517997, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 387, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4592)
[0000][PE] mean and std.dev: (949.35, 920.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.39, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 396.008 CPU sec, 22.242 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518395, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 740, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3647)
[0000][PE] mean and std.dev: (923.50, 821.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1400, 3668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8894)
[0000][PE] mean and std.dev: (2046.82, 1746.67)
[0000][PE] low and high boundaries for proper pairs: (1, 11507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 394.094 CPU sec, 22.062 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517748, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 1179, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4053)
[0000][PE] mean and std.dev: (1105.50, 943.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.03, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1285, 2042, 3567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8131)
[0000][PE] mean and std.dev: (2369.92, 1612.53)
[0000][PE] low and high boundaries for proper pairs: (1, 10413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 394.386 CPU sec, 22.124 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518647, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 386, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2137)
[0000][PE] mean and std.dev: (427.29, 293.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 397.102 CPU sec, 22.212 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518652, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 435, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3323)
[0000][PE] mean and std.dev: (694.06, 527.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.86, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 393.742 CPU sec, 22.042 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517839, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 364, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1457)
[0000][PE] mean and std.dev: (460.14, 357.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1652, 2360, 3409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6923)
[0000][PE] mean and std.dev: (2469.18, 1390.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 395.425 CPU sec, 22.129 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518433, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 668, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3307)
[0000][PE] mean and std.dev: (838.70, 634.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1442, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5635)
[0000][PE] mean and std.dev: (1608.54, 864.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 396.628 CPU sec, 22.192 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518158, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 394, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6532)
[0000][PE] mean and std.dev: (1138.91, 1092.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1617, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4179)
[0000][PE] mean and std.dev: (1153.00, 627.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 396.220 CPU sec, 22.220 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518250, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 560, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1036.07, 1073.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.20, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 396.477 CPU sec, 22.182 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518232, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 518, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (698.79, 525.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (401, 643, 2708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7322)
[0000][PE] mean and std.dev: (1368.30, 1366.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9629)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1489, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4184)
[0000][PE] mean and std.dev: (1434.40, 769.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 396.051 CPU sec, 22.160 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518168, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 909, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3899)
[0000][PE] mean and std.dev: (971.58, 948.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.81, 125.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (172, 620, 4922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14422)
[0000][PE] mean and std.dev: (2152.10, 2985.39)
[0000][PE] low and high boundaries for proper pairs: (1, 19172)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 397.015 CPU sec, 22.222 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518207, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 939, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4438)
[0000][PE] mean and std.dev: (747.00, 464.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.17, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 397.193 CPU sec, 22.231 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517803, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 423, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3210)
[0000][PE] mean and std.dev: (726.88, 721.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 397.464 CPU sec, 22.218 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518426, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 719, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6386)
[0000][PE] mean and std.dev: (1297.77, 1311.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1060, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (193, 1838)
[0000][PE] mean and std.dev: (929.33, 251.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 394.642 CPU sec, 22.088 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518407, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 572, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5031)
[0000][PE] mean and std.dev: (1004.94, 1216.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.26, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 394.545 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517976, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 340, 948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2468)
[0000][PE] mean and std.dev: (563.67, 559.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.76, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 396.011 CPU sec, 22.147 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517734, 0, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 438, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3725)
[0000][PE] mean and std.dev: (813.72, 663.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.63, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1419, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4055)
[0000][PE] mean and std.dev: (1430.09, 859.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 397.716 CPU sec, 22.247 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518146, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 455, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3251)
[0000][PE] mean and std.dev: (802.36, 740.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 393.562 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518236, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 481, 896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2050)
[0000][PE] mean and std.dev: (431.92, 196.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1921, 2879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6367)
[0000][PE] mean and std.dev: (1968.44, 1171.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 395.056 CPU sec, 22.114 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518192, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 493, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (990.00, 1042.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1180, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2708)
[0000][PE] mean and std.dev: (1114.31, 546.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 394.590 CPU sec, 22.101 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517846, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 598, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3122)
[0000][PE] mean and std.dev: (750.81, 581.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.63, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2136, 2913, 3803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7137)
[0000][PE] mean and std.dev: (2782.44, 1508.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8818)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 396.120 CPU sec, 22.174 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518263, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 478, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (826.50, 744.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.26, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1877, 3912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9994)
[0000][PE] mean and std.dev: (2230.36, 1935.11)
[0000][PE] low and high boundaries for proper pairs: (1, 13035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 395.906 CPU sec, 22.165 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518269, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (483, 740, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5826)
[0000][PE] mean and std.dev: (1243.21, 1275.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 396.921 CPU sec, 22.194 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518242, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 553, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6478)
[0000][PE] mean and std.dev: (951.88, 955.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 395.104 CPU sec, 22.097 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517915, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 416, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (1103.94, 1301.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 398.530 CPU sec, 22.340 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518056, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (487, 1393, 3464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9418)
[0000][PE] mean and std.dev: (2267.00, 2318.68)
[0000][PE] low and high boundaries for proper pairs: (1, 12395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.93, 125.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 398.413 CPU sec, 22.313 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518335, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 972, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6202)
[0000][PE] mean and std.dev: (1222.75, 1044.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (437, 1040, 2972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8042)
[0000][PE] mean and std.dev: (2010.94, 2367.96)
[0000][PE] low and high boundaries for proper pairs: (1, 11483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 394.952 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517920, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 1066, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3800)
[0000][PE] mean and std.dev: (1154.10, 836.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.64, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 398.926 CPU sec, 22.342 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518264, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 272, 424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 860)
[0000][PE] mean and std.dev: (298.11, 139.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.41, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1612, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4057)
[0000][PE] mean and std.dev: (1328.64, 466.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 391.366 CPU sec, 21.929 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518335, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 818, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5221)
[0000][PE] mean and std.dev: (1127.06, 912.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.76, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1396, 2550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6154)
[0000][PE] mean and std.dev: (1475.64, 931.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 396.148 CPU sec, 22.207 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518129, 2, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1512, 2165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (1418.86, 437.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5234)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 397.826 CPU sec, 22.268 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518034, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 706, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3649)
[0000][PE] mean and std.dev: (956.67, 827.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 395.850 CPU sec, 22.183 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517734, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 674, 2444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6668)
[0000][PE] mean and std.dev: (1375.75, 1538.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.76, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1073, 2969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7251)
[0000][PE] mean and std.dev: (1970.50, 1729.90)
[0000][PE] low and high boundaries for proper pairs: (1, 9392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 398.262 CPU sec, 22.295 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518343, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 426, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2579)
[0000][PE] mean and std.dev: (640.36, 497.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 393.816 CPU sec, 22.062 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518039, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 410, 712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1686)
[0000][PE] mean and std.dev: (463.75, 369.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.65, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (133, 637, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (607.67, 538.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5073)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 2170, 4295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10517)
[0000][PE] mean and std.dev: (2600.91, 1626.81)
[0000][PE] low and high boundaries for proper pairs: (1, 13628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 395.230 CPU sec, 22.101 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517834, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 913, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4029)
[0000][PE] mean and std.dev: (1084.56, 863.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1795, 2510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5464)
[0000][PE] mean and std.dev: (1663.42, 921.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 396.529 CPU sec, 22.152 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517945, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 1062, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3138)
[0000][PE] mean and std.dev: (754.22, 514.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.92, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 396.504 CPU sec, 22.178 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518182, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 1297, 2259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6111)
[0000][PE] mean and std.dev: (1323.08, 1190.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 1349, 2474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6122)
[0000][PE] mean and std.dev: (1324.42, 933.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 395.743 CPU sec, 22.152 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517983, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 571, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3139)
[0000][PE] mean and std.dev: (768.41, 639.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 395.756 CPU sec, 22.226 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517985, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 350, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3372)
[0000][PE] mean and std.dev: (840.17, 1029.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.51, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (588, 2424, 3294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8706)
[0000][PE] mean and std.dev: (2327.10, 1880.71)
[0000][PE] low and high boundaries for proper pairs: (1, 11412)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1565, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4846)
[0000][PE] mean and std.dev: (1691.77, 848.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 396.293 CPU sec, 22.187 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517989, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 481, 733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1605)
[0000][PE] mean and std.dev: (518.86, 310.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.72, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 398.435 CPU sec, 22.305 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518665, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 588, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (1047.24, 1214.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 394.447 CPU sec, 22.120 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517427, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 590, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5303)
[0000][PE] mean and std.dev: (1119.50, 1341.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 396.863 CPU sec, 22.243 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518161, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 497, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (692.07, 592.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.41, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 397.510 CPU sec, 22.262 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518124, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 879, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4667)
[0000][PE] mean and std.dev: (1110.16, 1013.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1987, 2847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6429)
[0000][PE] mean and std.dev: (1961.90, 875.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 395.526 CPU sec, 22.163 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518108, 10, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1308, 3323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9251)
[0000][PE] mean and std.dev: (1951.62, 2220.09)
[0000][PE] low and high boundaries for proper pairs: (1, 12215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (598, 2185, 4309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11731)
[0000][PE] mean and std.dev: (2646.90, 2293.55)
[0000][PE] low and high boundaries for proper pairs: (1, 15442)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 395.575 CPU sec, 22.165 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518201, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 358, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2409)
[0000][PE] mean and std.dev: (414.00, 214.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.19, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 395.104 CPU sec, 22.094 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518207, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 453, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3034)
[0000][PE] mean and std.dev: (547.11, 571.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 397.053 CPU sec, 22.267 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518015, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 970, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6263)
[0000][PE] mean and std.dev: (1099.33, 911.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.11, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 397.051 CPU sec, 22.212 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517857, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (690, 927, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3759)
[0000][PE] mean and std.dev: (1184.92, 967.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 398.144 CPU sec, 22.255 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518552, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 764, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (960.70, 886.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 393.250 CPU sec, 22.029 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518405, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 389, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3747)
[0000][PE] mean and std.dev: (702.38, 767.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 398.120 CPU sec, 22.278 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518049, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 802, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5018)
[0000][PE] mean and std.dev: (1040.13, 823.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 397.933 CPU sec, 22.251 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518041, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 1235, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5838)
[0000][PE] mean and std.dev: (1765.21, 1726.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 1462, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3328)
[0000][PE] mean and std.dev: (1256.70, 570.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 394.450 CPU sec, 22.105 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518240, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 699, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4710)
[0000][PE] mean and std.dev: (1096.86, 1143.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.17, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 392.995 CPU sec, 22.023 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517843, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 799, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3481)
[0000][PE] mean and std.dev: (941.93, 796.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.77, 125.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 396.790 CPU sec, 22.232 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518019, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 941, 2739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7381)
[0000][PE] mean and std.dev: (1753.00, 1918.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1744, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5267)
[0000][PE] mean and std.dev: (1559.40, 788.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 395.413 CPU sec, 22.130 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517816, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.83, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 397.052 CPU sec, 22.217 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518134, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 396, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2941)
[0000][PE] mean and std.dev: (694.25, 624.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1541, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5315)
[0000][PE] mean and std.dev: (1736.08, 1053.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 397.613 CPU sec, 22.270 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517920, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 643, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (918.91, 946.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.20, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1403, 2840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6574)
[0000][PE] mean and std.dev: (1598.67, 1110.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 397.091 CPU sec, 22.208 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518005, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.78, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 396.424 CPU sec, 22.200 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517924, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 831, 2572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6934)
[0000][PE] mean and std.dev: (1312.38, 971.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.85, 125.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1978, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5506)
[0000][PE] mean and std.dev: (1653.00, 1038.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 395.684 CPU sec, 22.169 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518573, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 407, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (629.77, 606.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 391.671 CPU sec, 21.907 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517978, 7, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 779, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (541.12, 410.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 396.498 CPU sec, 22.220 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517790, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 375, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2228)
[0000][PE] mean and std.dev: (505.62, 490.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 2158, 2694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6064)
[0000][PE] mean and std.dev: (1860.93, 1078.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 396.160 CPU sec, 22.193 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518288, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 737, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5724)
[0000][PE] mean and std.dev: (1157.56, 1068.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1503, 2580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6188)
[0000][PE] mean and std.dev: (1649.60, 1397.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 397.043 CPU sec, 22.244 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518466, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 606, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2162)
[0000][PE] mean and std.dev: (535.00, 358.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.69, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1369, 2561, 4448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10606)
[0000][PE] mean and std.dev: (2855.58, 1922.61)
[0000][PE] low and high boundaries for proper pairs: (1, 13685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 393.777 CPU sec, 22.083 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518454, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (481, 1206, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5818)
[0000][PE] mean and std.dev: (1254.61, 915.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.44, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 390.045 CPU sec, 21.853 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517619, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 690, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (820.21, 532.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 397.757 CPU sec, 22.226 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517920, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 842, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3812)
[0000][PE] mean and std.dev: (903.00, 688.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.63, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 395.867 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518462, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 1191, 3017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8269)
[0000][PE] mean and std.dev: (1717.73, 1859.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1564, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3652)
[0000][PE] mean and std.dev: (1536.23, 818.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 393.820 CPU sec, 22.061 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518117, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (497, 1019, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2726)
[0000][PE] mean and std.dev: (845.00, 423.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.78, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 399.027 CPU sec, 22.335 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518566, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1451, 1933, 2498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4592)
[0000][PE] mean and std.dev: (2100.00, 945.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 391.882 CPU sec, 21.929 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518021, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 971, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6248)
[0000][PE] mean and std.dev: (1272.33, 978.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1577, 2479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5255)
[0000][PE] mean and std.dev: (1535.77, 1047.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 395.355 CPU sec, 22.153 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518459, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 1771, 3039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8323)
[0000][PE] mean and std.dev: (2110.29, 2135.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1659, 2178, 3248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6426)
[0000][PE] mean and std.dev: (2576.50, 1153.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 396.937 CPU sec, 22.189 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518586, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 571, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3831)
[0000][PE] mean and std.dev: (1036.40, 1069.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.63, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 394.115 CPU sec, 22.061 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518050, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (511, 1945, 2801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7381)
[0000][PE] mean and std.dev: (1425.79, 1217.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.63, 125.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (413, 3913, 6576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18902)
[0000][PE] mean and std.dev: (3225.40, 2788.28)
[0000][PE] low and high boundaries for proper pairs: (1, 25065)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1402, 2513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5421)
[0000][PE] mean and std.dev: (1425.67, 790.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 394.352 CPU sec, 22.090 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517873, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 1062, 2345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6293)
[0000][PE] mean and std.dev: (1233.00, 1077.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.86, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 398.248 CPU sec, 22.333 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518445, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 752, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3553)
[0000][PE] mean and std.dev: (884.89, 653.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 393.745 CPU sec, 22.036 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518613, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 695, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4739)
[0000][PE] mean and std.dev: (899.93, 718.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1750, 1901, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (366, 3826)
[0000][PE] mean and std.dev: (1698.00, 570.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 393.659 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517589, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 860, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5267)
[0000][PE] mean and std.dev: (1091.73, 1022.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 400.632 CPU sec, 22.412 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518110, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 485, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2625)
[0000][PE] mean and std.dev: (658.67, 514.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 395.132 CPU sec, 22.142 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517968, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (600, 1501, 3835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10305)
[0000][PE] mean and std.dev: (2110.92, 2232.91)
[0000][PE] low and high boundaries for proper pairs: (1, 13540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.68, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 399.702 CPU sec, 22.348 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517976, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 421, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4180)
[0000][PE] mean and std.dev: (569.50, 576.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 398.709 CPU sec, 22.404 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518154, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 390, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2504)
[0000][PE] mean and std.dev: (553.20, 548.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1260, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5159)
[0000][PE] mean and std.dev: (1601.85, 1041.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 396.255 CPU sec, 22.170 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 517983, 4, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.23, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1022, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3737)
[0000][PE] mean and std.dev: (1298.79, 827.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4739)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 397.306 CPU sec, 22.242 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517961, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 434, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (481.46, 361.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.46, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 397.942 CPU sec, 22.362 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518272, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 584, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4239)
[0000][PE] mean and std.dev: (863.40, 901.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 396.071 CPU sec, 22.136 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517848, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (455, 1080, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5108)
[0000][PE] mean and std.dev: (1155.79, 1039.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1635, 3343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7923)
[0000][PE] mean and std.dev: (2052.12, 1425.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 396.347 CPU sec, 22.144 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517908, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 673, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4415)
[0000][PE] mean and std.dev: (1013.35, 1063.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 125.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 394.148 CPU sec, 22.085 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517828, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 714, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (923.15, 773.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 398.372 CPU sec, 22.329 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518220, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 498, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5128)
[0000][PE] mean and std.dev: (733.42, 632.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.79, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 398.292 CPU sec, 22.318 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517833, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (550, 1239, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3964)
[0000][PE] mean and std.dev: (1062.23, 576.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.72, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 395.213 CPU sec, 22.117 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518378, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 455, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2991)
[0000][PE] mean and std.dev: (563.75, 445.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 395.884 CPU sec, 22.173 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518122, 8, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1692, 3775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9785)
[0000][PE] mean and std.dev: (1979.58, 1521.34)
[0000][PE] low and high boundaries for proper pairs: (1, 12790)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 395.550 CPU sec, 22.127 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517982, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 836, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (904.71, 640.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 397.391 CPU sec, 22.236 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518039, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 676, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3296)
[0000][PE] mean and std.dev: (774.18, 467.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 397.489 CPU sec, 22.228 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518393, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 760, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4037)
[0000][PE] mean and std.dev: (851.86, 612.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 395.271 CPU sec, 22.129 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517885, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 533, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3975)
[0000][PE] mean and std.dev: (800.62, 661.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1106, 2950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7156)
[0000][PE] mean and std.dev: (1428.00, 1058.62)
[0000][PE] low and high boundaries for proper pairs: (1, 9259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 397.993 CPU sec, 22.329 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518129, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 1273, 3434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9598)
[0000][PE] mean and std.dev: (2055.90, 2229.24)
[0000][PE] low and high boundaries for proper pairs: (1, 12680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1490, 1994, 2734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5222)
[0000][PE] mean and std.dev: (2021.70, 701.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6466)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 395.233 CPU sec, 22.122 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517904, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 352, 2817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8005)
[0000][PE] mean and std.dev: (832.67, 1137.04)
[0000][PE] low and high boundaries for proper pairs: (1, 10599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 398.049 CPU sec, 22.321 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518067, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 430, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6991)
[0000][PE] mean and std.dev: (1645.69, 2094.29)
[0000][PE] low and high boundaries for proper pairs: (1, 10023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1005, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5546)
[0000][PE] mean and std.dev: (1411.36, 754.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 396.398 CPU sec, 22.235 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518008, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 720, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3889)
[0000][PE] mean and std.dev: (957.06, 913.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.71, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 396.190 CPU sec, 22.164 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518451, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 556, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (899.60, 898.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 393.452 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518401, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 626, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5138)
[0000][PE] mean and std.dev: (842.84, 836.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.51, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1530, 2554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5546)
[0000][PE] mean and std.dev: (1433.45, 824.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 398.324 CPU sec, 22.301 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 517975, 8, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 397.634 CPU sec, 22.310 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518449, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 647, 2738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7456)
[0000][PE] mean and std.dev: (1720.69, 2175.18)
[0000][PE] low and high boundaries for proper pairs: (1, 10421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1171, 1421, 3309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7585)
[0000][PE] mean and std.dev: (2290.08, 2122.66)
[0000][PE] low and high boundaries for proper pairs: (1, 10781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 396.257 CPU sec, 22.167 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517866, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 566, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (787.85, 777.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000194 bp)...
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 396.641 CPU sec, 22.226 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518455, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 992, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5130)
[0000][PE] mean and std.dev: (1625.91, 1489.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 389.023 CPU sec, 21.766 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518356, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 473, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2864)
[0000][PE] mean and std.dev: (505.73, 359.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 391.894 CPU sec, 21.972 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518599, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 1085, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5206)
[0000][PE] mean and std.dev: (1181.74, 898.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 391.020 CPU sec, 21.901 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518071, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 535, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4073)
[0000][PE] mean and std.dev: (892.47, 890.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.73, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 390.657 CPU sec, 21.860 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518193, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 714, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5537)
[0000][PE] mean and std.dev: (1186.19, 1101.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 1350, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5200)
[0000][PE] mean and std.dev: (1243.55, 929.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 390.143 CPU sec, 21.847 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517866, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 365, 830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1962)
[0000][PE] mean and std.dev: (531.72, 435.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.42, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (511, 1454, 6572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18694)
[0000][PE] mean and std.dev: (2769.10, 3070.74)
[0000][PE] low and high boundaries for proper pairs: (1, 24755)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (505, 1101, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3955)
[0000][PE] mean and std.dev: (1151.64, 698.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 397.544 CPU sec, 22.316 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518145, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 417, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1557)
[0000][PE] mean and std.dev: (346.14, 166.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.21, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1297, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5566)
[0000][PE] mean and std.dev: (1690.35, 1169.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 390.650 CPU sec, 21.900 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517879, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 591, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5429)
[0000][PE] mean and std.dev: (1238.20, 1330.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.38, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 394.337 CPU sec, 22.082 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518261, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 611, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (946.00, 894.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 396.894 CPU sec, 22.234 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518072, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 363, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2975)
[0000][PE] mean and std.dev: (698.67, 750.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.69, 125.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 393.118 CPU sec, 21.991 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517929, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 1043, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4205)
[0000][PE] mean and std.dev: (1144.27, 977.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.25, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 395.817 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518025, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 502, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2410)
[0000][PE] mean and std.dev: (640.10, 469.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.68, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 391.411 CPU sec, 21.911 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518186, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 240, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3862)
[0000][PE] mean and std.dev: (546.06, 553.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.25, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1481, 1816, 3326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7016)
[0000][PE] mean and std.dev: (2127.91, 1367.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 391.903 CPU sec, 21.896 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518017, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 819, 2688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7440)
[0000][PE] mean and std.dev: (1017.55, 1032.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 2799, 3874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9740)
[0000][PE] mean and std.dev: (2535.00, 1866.26)
[0000][PE] low and high boundaries for proper pairs: (1, 12673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 389.939 CPU sec, 21.859 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517917, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 917, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3797)
[0000][PE] mean and std.dev: (784.70, 496.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1240, 1794, 5916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15268)
[0000][PE] mean and std.dev: (2713.15, 2137.04)
[0000][PE] low and high boundaries for proper pairs: (1, 19944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 394.241 CPU sec, 22.083 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517691, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 1179, 2587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6825)
[0000][PE] mean and std.dev: (1667.00, 1437.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.76, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1679, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3680)
[0000][PE] mean and std.dev: (1403.75, 510.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 393.974 CPU sec, 22.095 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518442, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 636, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4282)
[0000][PE] mean and std.dev: (1091.77, 1006.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.34, 124.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1474, 1875, 3179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6589)
[0000][PE] mean and std.dev: (1913.20, 946.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 391.596 CPU sec, 21.906 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517657, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 941, 2691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7315)
[0000][PE] mean and std.dev: (1467.45, 1450.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.84, 125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (391, 1132, 2289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6085)
[0000][PE] mean and std.dev: (1449.38, 1356.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 392.784 CPU sec, 21.978 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518352, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 420, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2605)
[0000][PE] mean and std.dev: (459.36, 283.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.66, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1405, 2053, 4683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11239)
[0000][PE] mean and std.dev: (2712.69, 2400.11)
[0000][PE] low and high boundaries for proper pairs: (1, 14517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 389.833 CPU sec, 21.807 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517830, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 397, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5031)
[0000][PE] mean and std.dev: (960.53, 1004.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.39, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 390.301 CPU sec, 21.834 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518381, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 415, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1018)
[0000][PE] mean and std.dev: (353.64, 148.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.91, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1304, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4000)
[0000][PE] mean and std.dev: (1314.58, 648.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 392.260 CPU sec, 21.941 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517635, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 488, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4370)
[0000][PE] mean and std.dev: (841.52, 725.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.66, 125.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 395.843 CPU sec, 22.167 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518111, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 586, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (822.00, 795.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.71, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1262, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5058)
[0000][PE] mean and std.dev: (1486.75, 915.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 392.549 CPU sec, 21.976 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518107, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 364, 821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1783)
[0000][PE] mean and std.dev: (497.20, 353.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 395.313 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518026, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 628, 829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1911)
[0000][PE] mean and std.dev: (571.92, 443.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 397.000 CPU sec, 22.212 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518055, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 457, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (799.41, 837.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1312, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (24, 2804)
[0000][PE] mean and std.dev: (1191.20, 401.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 395.345 CPU sec, 22.123 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517949, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 411, 727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1603)
[0000][PE] mean and std.dev: (390.50, 155.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 397.321 CPU sec, 22.264 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518171, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 590, 2956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8056)
[0000][PE] mean and std.dev: (1182.75, 1187.12)
[0000][PE] low and high boundaries for proper pairs: (1, 10606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (629, 1420, 3321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8705)
[0000][PE] mean and std.dev: (2173.10, 2083.27)
[0000][PE] low and high boundaries for proper pairs: (1, 11397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 393.611 CPU sec, 22.008 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517684, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (471, 1151, 3315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9003)
[0000][PE] mean and std.dev: (1693.35, 1486.39)
[0000][PE] low and high boundaries for proper pairs: (1, 11847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 392.238 CPU sec, 21.976 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518245, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 523, 2165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5869)
[0000][PE] mean and std.dev: (1044.67, 1055.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 391.448 CPU sec, 21.935 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518264, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 1011, 2579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6985)
[0000][PE] mean and std.dev: (1627.31, 1620.00)
[0000][PE] low and high boundaries for proper pairs: (1, 9188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1208, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (1211.86, 546.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 395.020 CPU sec, 22.130 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518236, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 993, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7009)
[0000][PE] mean and std.dev: (1427.91, 1333.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 395.845 CPU sec, 22.201 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518332, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 397, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3267)
[0000][PE] mean and std.dev: (503.58, 388.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 395.611 CPU sec, 22.155 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518421, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 321, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3150)
[0000][PE] mean and std.dev: (573.90, 538.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 392.221 CPU sec, 21.935 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517634, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 338, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2336)
[0000][PE] mean and std.dev: (537.87, 610.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 395.636 CPU sec, 22.121 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517561, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 640, 2399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6471)
[0000][PE] mean and std.dev: (970.44, 836.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.97, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1566, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3994)
[0000][PE] mean and std.dev: (1505.77, 746.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 393.316 CPU sec, 22.006 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517915, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (602, 1123, 2627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6677)
[0000][PE] mean and std.dev: (1365.54, 1005.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.77, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1287, 1668, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (1523.62, 602.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 393.870 CPU sec, 22.023 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518106, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 460, 645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1419)
[0000][PE] mean and std.dev: (432.50, 267.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 393.712 CPU sec, 22.029 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518271, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 756, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5106)
[0000][PE] mean and std.dev: (1093.60, 949.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1381, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4243)
[0000][PE] mean and std.dev: (1514.45, 732.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 390.986 CPU sec, 21.846 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517917, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 589, 3682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10356)
[0000][PE] mean and std.dev: (1951.88, 2767.33)
[0000][PE] low and high boundaries for proper pairs: (1, 13693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.53, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 394.843 CPU sec, 22.081 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517810, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 519, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3826)
[0000][PE] mean and std.dev: (839.81, 838.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 393.708 CPU sec, 22.048 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518361, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 1284, 2159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5873)
[0000][PE] mean and std.dev: (1275.14, 935.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.77, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 391.223 CPU sec, 21.925 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 518540, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1652, 3132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7162)
[0000][PE] mean and std.dev: (1960.77, 1221.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9177)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 393.999 CPU sec, 22.036 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518012, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 385, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 700)
[0000][PE] mean and std.dev: (320.18, 142.97)
[0000][PE] low and high boundaries for proper pairs: (1, 892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.54, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 396.047 CPU sec, 22.144 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518069, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 647, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3113)
[0000][PE] mean and std.dev: (763.00, 722.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1162, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3430)
[0000][PE] mean and std.dev: (1236.20, 809.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 392.100 CPU sec, 21.913 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518053, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 460, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3915)
[0000][PE] mean and std.dev: (799.20, 739.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1548, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5380)
[0000][PE] mean and std.dev: (1408.77, 756.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 395.701 CPU sec, 22.124 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517877, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 1301, 2537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6811)
[0000][PE] mean and std.dev: (1512.00, 1319.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 394.265 CPU sec, 22.071 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518339, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 483, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (741.94, 632.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (207, 1070, 4232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12282)
[0000][PE] mean and std.dev: (2072.90, 2548.08)
[0000][PE] low and high boundaries for proper pairs: (1, 16307)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1385, 3868, 5012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12266)
[0000][PE] mean and std.dev: (3513.17, 2202.36)
[0000][PE] low and high boundaries for proper pairs: (1, 15893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 392.721 CPU sec, 21.988 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517967, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 769, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3723)
[0000][PE] mean and std.dev: (839.47, 803.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 393.736 CPU sec, 22.006 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517702, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 396, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4615)
[0000][PE] mean and std.dev: (1018.54, 1232.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.26, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 2401, 3678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8658)
[0000][PE] mean and std.dev: (2306.83, 1287.41)
[0000][PE] low and high boundaries for proper pairs: (1, 11148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 395.676 CPU sec, 22.119 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517966, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1385, 1816, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (1837.50, 960.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5679)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 396.362 CPU sec, 22.158 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517599, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 468, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4119)
[0000][PE] mean and std.dev: (883.62, 947.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 397.076 CPU sec, 22.226 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518364, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 1290, 4469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12603)
[0000][PE] mean and std.dev: (2255.10, 2445.53)
[0000][PE] low and high boundaries for proper pairs: (1, 16670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1197, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3911)
[0000][PE] mean and std.dev: (1391.69, 791.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 393.299 CPU sec, 21.981 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517588, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (894, 1326, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (1058.27, 530.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 393.236 CPU sec, 22.038 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518496, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 516, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5349)
[0000][PE] mean and std.dev: (901.25, 818.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.45, 124.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 394.276 CPU sec, 22.066 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518100, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 714, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2551)
[0000][PE] mean and std.dev: (681.52, 437.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.90, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 1631, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5087)
[0000][PE] mean and std.dev: (1622.00, 597.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 394.319 CPU sec, 22.057 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517584, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 364, 697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1471)
[0000][PE] mean and std.dev: (482.60, 295.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 396.110 CPU sec, 22.138 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517887, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 453, 2942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8116)
[0000][PE] mean and std.dev: (1562.41, 1839.37)
[0000][PE] low and high boundaries for proper pairs: (1, 10703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.79, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1359, 2872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6552)
[0000][PE] mean and std.dev: (1839.20, 1066.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 392.982 CPU sec, 21.974 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518263, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 628, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4827)
[0000][PE] mean and std.dev: (1096.13, 1154.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1461, 1840, 3232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6774)
[0000][PE] mean and std.dev: (1562.91, 908.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 392.410 CPU sec, 21.963 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517945, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 572, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4336)
[0000][PE] mean and std.dev: (945.33, 930.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 392.942 CPU sec, 21.989 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518162, 8, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 805, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (1030.40, 859.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 395.136 CPU sec, 22.135 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518030, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 2136, 3098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8368)
[0000][PE] mean and std.dev: (1904.75, 1574.49)
[0000][PE] low and high boundaries for proper pairs: (1, 11003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1060, 1718, 3880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9520)
[0000][PE] mean and std.dev: (2237.64, 1759.48)
[0000][PE] low and high boundaries for proper pairs: (1, 12340)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 396.498 CPU sec, 22.198 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517910, 11, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 388, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4199)
[0000][PE] mean and std.dev: (680.89, 686.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (266, 2367, 4128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11852)
[0000][PE] mean and std.dev: (2648.73, 2696.43)
[0000][PE] low and high boundaries for proper pairs: (1, 15714)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1843, 2841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6195)
[0000][PE] mean and std.dev: (1883.38, 1209.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 394.295 CPU sec, 22.078 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517832, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 528, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5295)
[0000][PE] mean and std.dev: (898.73, 875.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 397.222 CPU sec, 22.197 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518532, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 312, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (601.79, 720.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.15, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 391.332 CPU sec, 21.903 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518365, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 834, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4320)
[0000][PE] mean and std.dev: (928.67, 685.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 392.663 CPU sec, 21.956 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517768, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 557, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (764.00, 598.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 391.322 CPU sec, 21.864 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518163, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (516, 942, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (1122.25, 942.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 395.412 CPU sec, 22.099 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517975, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 888, 3243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9035)
[0000][PE] mean and std.dev: (1612.69, 1628.06)
[0000][PE] low and high boundaries for proper pairs: (1, 11931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 1285, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2920)
[0000][PE] mean and std.dev: (1242.80, 649.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 392.309 CPU sec, 21.939 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518017, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 395, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6326)
[0000][PE] mean and std.dev: (1023.00, 950.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.69, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 1326, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3798)
[0000][PE] mean and std.dev: (1250.92, 636.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 397.314 CPU sec, 22.232 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518097, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1028, 2863, 4267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10745)
[0000][PE] mean and std.dev: (2725.92, 2343.49)
[0000][PE] low and high boundaries for proper pairs: (1, 13984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1703, 5141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13545)
[0000][PE] mean and std.dev: (2868.33, 2794.89)
[0000][PE] low and high boundaries for proper pairs: (1, 17747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 391.874 CPU sec, 21.936 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518185, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 1258, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3390)
[0000][PE] mean and std.dev: (971.62, 630.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 125.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1453, 2834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6150)
[0000][PE] mean and std.dev: (1775.82, 1078.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 394.384 CPU sec, 22.062 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518071, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 857, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (898.27, 733.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.83, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1740, 3156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7878)
[0000][PE] mean and std.dev: (1883.25, 1270.78)
[0000][PE] low and high boundaries for proper pairs: (1, 10239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 390.474 CPU sec, 21.881 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517849, 11, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 443, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5368)
[0000][PE] mean and std.dev: (991.33, 1160.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (825, 1018, 2629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6237)
[0000][PE] mean and std.dev: (1104.00, 803.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8041)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1424, 1687, 3743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8381)
[0000][PE] mean and std.dev: (2646.33, 2298.69)
[0000][PE] low and high boundaries for proper pairs: (1, 11841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 396.856 CPU sec, 22.204 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518100, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 416, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1018)
[0000][PE] mean and std.dev: (393.44, 139.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.69, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1125, 3682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9148)
[0000][PE] mean and std.dev: (2293.46, 2527.13)
[0000][PE] low and high boundaries for proper pairs: (1, 12402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 391.830 CPU sec, 21.908 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518401, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (460, 980, 2505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6595)
[0000][PE] mean and std.dev: (1369.67, 1306.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1451, 1496, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (669, 2624)
[0000][PE] mean and std.dev: (1531.33, 248.07)
[0000][PE] low and high boundaries for proper pairs: (278, 3015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 390.499 CPU sec, 21.834 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518230, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 659, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2842)
[0000][PE] mean and std.dev: (725.42, 650.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.72, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 3436, 5199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13583)
[0000][PE] mean and std.dev: (3190.27, 2420.55)
[0000][PE] low and high boundaries for proper pairs: (1, 17775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 393.179 CPU sec, 22.022 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518107, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (663, 1144, 2448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6018)
[0000][PE] mean and std.dev: (1313.73, 973.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (661, 1160, 3036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7786)
[0000][PE] mean and std.dev: (1571.08, 1251.61)
[0000][PE] low and high boundaries for proper pairs: (1, 10161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 391.994 CPU sec, 21.909 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517710, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 479, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3711)
[0000][PE] mean and std.dev: (714.90, 744.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.86, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1335, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3655)
[0000][PE] mean and std.dev: (1497.06, 786.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 392.919 CPU sec, 21.990 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518023, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 440, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2739)
[0000][PE] mean and std.dev: (441.11, 284.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.44, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 3141, 3744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9736)
[0000][PE] mean and std.dev: (2593.86, 1815.67)
[0000][PE] low and high boundaries for proper pairs: (1, 12732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 396.293 CPU sec, 22.161 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518021, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 803, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3064)
[0000][PE] mean and std.dev: (840.11, 533.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1533, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4272)
[0000][PE] mean and std.dev: (1531.79, 765.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 395.919 CPU sec, 22.140 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518300, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 387, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (849.56, 853.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 393.571 CPU sec, 22.018 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518597, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 422, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2065)
[0000][PE] mean and std.dev: (554.00, 502.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.62, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1423, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (1270.25, 582.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5024)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 390.680 CPU sec, 21.816 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518029, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 797, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (941.08, 726.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 389.307 CPU sec, 21.765 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518276, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 408, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3684)
[0000][PE] mean and std.dev: (697.29, 619.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.80, 125.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 391.918 CPU sec, 21.982 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518333, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 622, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5372)
[0000][PE] mean and std.dev: (1160.29, 1137.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 393.574 CPU sec, 22.023 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517952, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 491, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (636.58, 443.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (38, 4114, 5830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17414)
[0000][PE] mean and std.dev: (3321.10, 3623.57)
[0000][PE] low and high boundaries for proper pairs: (1, 23206)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1283, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2608)
[0000][PE] mean and std.dev: (1047.25, 327.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 392.712 CPU sec, 21.970 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518053, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 520, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3434)
[0000][PE] mean and std.dev: (793.23, 899.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1530, 2031, 2705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5055)
[0000][PE] mean and std.dev: (1793.64, 873.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 394.877 CPU sec, 22.063 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517903, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 1425, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (1115.27, 835.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (614, 1177, 2073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4991)
[0000][PE] mean and std.dev: (1240.88, 769.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6450)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 396.050 CPU sec, 22.145 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518227, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 376, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5039)
[0000][PE] mean and std.dev: (897.91, 1002.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.69, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 394.755 CPU sec, 22.093 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517919, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 450, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2489)
[0000][PE] mean and std.dev: (514.83, 318.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1298, 2842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6488)
[0000][PE] mean and std.dev: (1754.50, 1253.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 394.366 CPU sec, 22.049 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518075, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 375, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2310)
[0000][PE] mean and std.dev: (581.08, 481.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 572, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2049)
[0000][PE] mean and std.dev: (625.30, 410.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 393.695 CPU sec, 21.983 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518491, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 712, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4285)
[0000][PE] mean and std.dev: (1053.06, 870.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 392.334 CPU sec, 21.959 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518105, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 347, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2268)
[0000][PE] mean and std.dev: (517.60, 420.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.03, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 393.654 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518309, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 421, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (568.30, 445.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.26, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1352, 1872, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (1774.00, 864.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 394.643 CPU sec, 22.048 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517999, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 345, 741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1805)
[0000][PE] mean and std.dev: (401.83, 335.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1363, 1596, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (145, 3190)
[0000][PE] mean and std.dev: (1556.30, 827.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 392.371 CPU sec, 21.926 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518117, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 473, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3933)
[0000][PE] mean and std.dev: (1010.61, 1021.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1095, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5450)
[0000][PE] mean and std.dev: (1291.82, 990.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 398.135 CPU sec, 22.263 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518153, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 449, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2583)
[0000][PE] mean and std.dev: (695.31, 466.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 394.678 CPU sec, 22.075 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518457, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 877, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4549)
[0000][PE] mean and std.dev: (885.08, 815.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 391.075 CPU sec, 21.877 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517911, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 851, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5979)
[0000][PE] mean and std.dev: (1183.35, 1205.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 393.558 CPU sec, 22.005 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517995, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 951, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (695.92, 452.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 394.285 CPU sec, 22.030 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518290, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 396, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5961)
[0000][PE] mean and std.dev: (796.67, 874.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.83, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 391.409 CPU sec, 21.901 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518013, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 359, 701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1665)
[0000][PE] mean and std.dev: (486.94, 445.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.88, 125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 395.529 CPU sec, 22.167 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518243, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 954, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4154)
[0000][PE] mean and std.dev: (1214.71, 1099.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 394.354 CPU sec, 22.100 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517898, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 379, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (673.58, 641.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.63, 125.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1463, 2989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7007)
[0000][PE] mean and std.dev: (1837.09, 1285.43)
[0000][PE] low and high boundaries for proper pairs: (1, 9016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 397.056 CPU sec, 22.210 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518212, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 541, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3842)
[0000][PE] mean and std.dev: (927.67, 803.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 392.727 CPU sec, 21.955 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518380, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 585, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4018)
[0000][PE] mean and std.dev: (815.31, 682.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.73, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (2180, 2387, 6392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14816)
[0000][PE] mean and std.dev: (3390.82, 2322.26)
[0000][PE] low and high boundaries for proper pairs: (1, 19028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 395.635 CPU sec, 22.117 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518428, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 437, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4453)
[0000][PE] mean and std.dev: (751.50, 643.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.48, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (721, 1436, 2748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6802)
[0000][PE] mean and std.dev: (1480.15, 967.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 393.964 CPU sec, 22.028 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517928, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 647, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (817.95, 687.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.82, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 395.881 CPU sec, 22.142 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517887, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 907, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (689.08, 472.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.93, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 2222, 2513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5171)
[0000][PE] mean and std.dev: (1986.54, 926.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 396.152 CPU sec, 22.182 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518709, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 370, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3062)
[0000][PE] mean and std.dev: (569.50, 442.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1397, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4535)
[0000][PE] mean and std.dev: (1381.20, 613.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 391.516 CPU sec, 21.880 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518116, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 353, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2303)
[0000][PE] mean and std.dev: (548.35, 465.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1203, 2870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6412)
[0000][PE] mean and std.dev: (1528.92, 987.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 395.863 CPU sec, 22.185 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518158, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 885, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (1171.71, 1162.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.86, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 2039, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4356)
[0000][PE] mean and std.dev: (1873.80, 1036.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 394.399 CPU sec, 22.075 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517637, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 612, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2257)
[0000][PE] mean and std.dev: (518.00, 352.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.64, 125.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1299, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5096)
[0000][PE] mean and std.dev: (1526.33, 934.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 396.036 CPU sec, 22.165 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517939, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 299, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2660)
[0000][PE] mean and std.dev: (420.67, 483.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.23, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 396.887 CPU sec, 22.187 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518223, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1054, 1229, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 2470)
[0000][PE] mean and std.dev: (1110.64, 477.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (629, 1050, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4844)
[0000][PE] mean and std.dev: (1247.81, 1037.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 391.772 CPU sec, 21.942 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518164, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1518, 2687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5935)
[0000][PE] mean and std.dev: (1799.85, 1004.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7559)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 394.626 CPU sec, 22.136 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518212, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 473, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2223)
[0000][PE] mean and std.dev: (554.95, 321.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.35, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 394.270 CPU sec, 22.072 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518656, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 430, 2571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7125)
[0000][PE] mean and std.dev: (918.21, 1325.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.76, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 391.073 CPU sec, 21.861 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517949, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 348, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2849)
[0000][PE] mean and std.dev: (506.40, 640.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 125.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1376, 3887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9877)
[0000][PE] mean and std.dev: (2055.85, 1684.07)
[0000][PE] low and high boundaries for proper pairs: (1, 12872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 397.185 CPU sec, 22.185 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518460, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 665, 2625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7465)
[0000][PE] mean and std.dev: (1330.07, 1395.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 2840, 4008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9598)
[0000][PE] mean and std.dev: (2757.57, 1897.74)
[0000][PE] low and high boundaries for proper pairs: (1, 12393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 391.828 CPU sec, 21.904 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517694, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (506, 1064, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3929)
[0000][PE] mean and std.dev: (1123.56, 865.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.26, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1626, 2137, 3073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5967)
[0000][PE] mean and std.dev: (1999.58, 1065.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 395.145 CPU sec, 22.070 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518188, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 1717, 2417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6531)
[0000][PE] mean and std.dev: (1309.00, 1196.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.69, 124.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 395.245 CPU sec, 22.116 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518004, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 424, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3896)
[0000][PE] mean and std.dev: (726.89, 693.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.23, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1576, 4311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10733)
[0000][PE] mean and std.dev: (2447.00, 1922.67)
[0000][PE] low and high boundaries for proper pairs: (1, 13944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 395.468 CPU sec, 22.113 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518132, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 488, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (1038.85, 1062.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.79, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 391.560 CPU sec, 21.908 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518414, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 601, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3254)
[0000][PE] mean and std.dev: (749.33, 647.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.97, 125.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 395.198 CPU sec, 22.163 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517995, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1398, 2687, 3851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8757)
[0000][PE] mean and std.dev: (2403.30, 1411.98)
[0000][PE] low and high boundaries for proper pairs: (1, 11210)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 395.851 CPU sec, 22.158 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518277, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 425, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2703)
[0000][PE] mean and std.dev: (579.53, 490.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 2213, 3264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7744)
[0000][PE] mean and std.dev: (1913.50, 1428.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 394.284 CPU sec, 22.078 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518151, 1, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 413, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6150)
[0000][PE] mean and std.dev: (1341.12, 1565.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.39, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 395.086 CPU sec, 22.078 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517910, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 457, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3071)
[0000][PE] mean and std.dev: (652.29, 734.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 2681, 5026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13238)
[0000][PE] mean and std.dev: (3186.60, 2588.10)
[0000][PE] low and high boundaries for proper pairs: (1, 17344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 396.919 CPU sec, 22.280 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518534, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 341, 4045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11609)
[0000][PE] mean and std.dev: (1802.80, 2484.17)
[0000][PE] low and high boundaries for proper pairs: (1, 15391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1502, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6460)
[0000][PE] mean and std.dev: (1884.07, 1569.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 392.549 CPU sec, 21.973 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517937, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 909, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6627)
[0000][PE] mean and std.dev: (955.23, 908.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.72, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 395.461 CPU sec, 22.112 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517908, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 405, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2989)
[0000][PE] mean and std.dev: (692.22, 568.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1341, 1774, 2452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4674)
[0000][PE] mean and std.dev: (1623.00, 683.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 394.120 CPU sec, 22.039 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517827, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 428, 881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1991)
[0000][PE] mean and std.dev: (612.79, 517.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 394.129 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517585, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1014, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2865)
[0000][PE] mean and std.dev: (860.00, 619.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.41, 124.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1500, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5426)
[0000][PE] mean and std.dev: (1554.33, 1150.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 394.838 CPU sec, 22.066 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518119, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 474, 776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1800)
[0000][PE] mean and std.dev: (468.29, 297.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 1676, 3401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7673)
[0000][PE] mean and std.dev: (2474.09, 2070.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 396.042 CPU sec, 22.149 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518531, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 394.666 CPU sec, 22.082 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518469, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 532, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2264)
[0000][PE] mean and std.dev: (627.89, 569.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.76, 125.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 392.954 CPU sec, 21.988 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518339, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 341, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (586.76, 633.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1530, 3045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7249)
[0000][PE] mean and std.dev: (2076.18, 1575.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 396.856 CPU sec, 22.152 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518221, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 374, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6257)
[0000][PE] mean and std.dev: (1268.00, 1482.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 395.491 CPU sec, 22.119 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518068, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 480, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4025)
[0000][PE] mean and std.dev: (729.72, 605.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.72, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 397.549 CPU sec, 22.195 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518488, 0, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 317, 724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1644)
[0000][PE] mean and std.dev: (516.93, 427.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 396.056 CPU sec, 22.136 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517751, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 660, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3160)
[0000][PE] mean and std.dev: (624.18, 424.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1233, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4236)
[0000][PE] mean and std.dev: (1467.40, 839.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 395.361 CPU sec, 22.076 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 517951, 6, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.45, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 1934, 3240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7306)
[0000][PE] mean and std.dev: (2322.43, 1390.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9339)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 397.980 CPU sec, 22.272 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518099, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 601, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5269)
[0000][PE] mean and std.dev: (1085.93, 1198.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1251, 2311, 3789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8865)
[0000][PE] mean and std.dev: (2123.67, 1437.96)
[0000][PE] low and high boundaries for proper pairs: (1, 11403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 395.493 CPU sec, 22.140 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518061, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 794, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3501)
[0000][PE] mean and std.dev: (842.79, 795.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1181, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1973)
[0000][PE] mean and std.dev: (893.62, 363.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 394.073 CPU sec, 22.058 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518238, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 499, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (780.48, 761.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 393.431 CPU sec, 22.009 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517900, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 1176, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4749)
[0000][PE] mean and std.dev: (1295.35, 1108.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1705, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4267)
[0000][PE] mean and std.dev: (1270.92, 723.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 396.602 CPU sec, 22.174 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517663, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 619, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (1107.25, 1260.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1355, 2937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6985)
[0000][PE] mean and std.dev: (2016.53, 1607.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 394.339 CPU sec, 22.088 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517892, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 444, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3433)
[0000][PE] mean and std.dev: (704.00, 717.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 395.322 CPU sec, 22.185 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518527, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 544, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4097)
[0000][PE] mean and std.dev: (880.93, 879.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1196, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3157)
[0000][PE] mean and std.dev: (1368.00, 777.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 395.214 CPU sec, 22.131 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518202, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 911, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3149)
[0000][PE] mean and std.dev: (929.23, 819.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 391.870 CPU sec, 21.941 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518100, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 405, 502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 890)
[0000][PE] mean and std.dev: (418.77, 166.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 392.315 CPU sec, 21.936 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517805, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 837, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4615)
[0000][PE] mean and std.dev: (963.93, 694.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1834, 2103, 3426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6610)
[0000][PE] mean and std.dev: (2459.27, 1328.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8202)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 393.878 CPU sec, 22.069 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518409, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 508, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4605)
[0000][PE] mean and std.dev: (1029.73, 1001.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.88, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 393.652 CPU sec, 22.021 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518237, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 701, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3164)
[0000][PE] mean and std.dev: (673.14, 464.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 2311, 4477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11471)
[0000][PE] mean and std.dev: (2488.55, 1631.32)
[0000][PE] low and high boundaries for proper pairs: (1, 14968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 391.617 CPU sec, 21.890 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518601, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 1044, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (832.83, 602.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.64, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 392.344 CPU sec, 21.937 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518259, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 461, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2850)
[0000][PE] mean and std.dev: (544.20, 388.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.71, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 395.628 CPU sec, 22.161 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517815, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 431, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4226)
[0000][PE] mean and std.dev: (946.54, 1043.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.38, 124.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1083, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (1177.64, 582.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 395.523 CPU sec, 22.142 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518133, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 519, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2442)
[0000][PE] mean and std.dev: (644.45, 497.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 394.468 CPU sec, 22.064 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518049, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 452, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (921.29, 998.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.81, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (612, 1447, 2967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7677)
[0000][PE] mean and std.dev: (1766.12, 1211.10)
[0000][PE] low and high boundaries for proper pairs: (1, 10032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 395.030 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518517, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 1765, 3262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8956)
[0000][PE] mean and std.dev: (2312.94, 2285.79)
[0000][PE] low and high boundaries for proper pairs: (1, 11803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1473, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4443)
[0000][PE] mean and std.dev: (1392.36, 746.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 394.437 CPU sec, 22.030 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518008, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 1384, 3850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10912)
[0000][PE] mean and std.dev: (1899.31, 1961.52)
[0000][PE] low and high boundaries for proper pairs: (1, 14443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 393.654 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518004, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 555, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (916.37, 866.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (549, 1410, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6249)
[0000][PE] mean and std.dev: (1293.67, 907.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 393.932 CPU sec, 22.055 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517644, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 1279, 2424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6618)
[0000][PE] mean and std.dev: (1237.40, 1155.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.51, 124.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 2283, 4280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12204)
[0000][PE] mean and std.dev: (2313.60, 2151.34)
[0000][PE] low and high boundaries for proper pairs: (1, 16166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 395.454 CPU sec, 22.153 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518033, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 1060, 3356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9372)
[0000][PE] mean and std.dev: (1933.76, 1983.56)
[0000][PE] low and high boundaries for proper pairs: (1, 12380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (678, 1375, 3531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9237)
[0000][PE] mean and std.dev: (2096.75, 2246.45)
[0000][PE] low and high boundaries for proper pairs: (1, 12090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 394.536 CPU sec, 22.079 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517777, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (436, 560, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2965)
[0000][PE] mean and std.dev: (663.77, 420.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.79, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (126, 909, 4982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14694)
[0000][PE] mean and std.dev: (2003.09, 2402.12)
[0000][PE] low and high boundaries for proper pairs: (1, 19550)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 394.897 CPU sec, 22.069 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518211, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 480, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (637.44, 511.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1332, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 2528)
[0000][PE] mean and std.dev: (1216.00, 445.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 388.581 CPU sec, 21.742 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518312, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (502, 674, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2758)
[0000][PE] mean and std.dev: (650.92, 316.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 1416, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (1467.22, 443.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 394.954 CPU sec, 22.073 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517865, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 701, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2868)
[0000][PE] mean and std.dev: (641.26, 467.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1601, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5005)
[0000][PE] mean and std.dev: (1468.67, 640.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6365)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 395.382 CPU sec, 22.168 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518291, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 530, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (801.07, 872.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1423, 3583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8811)
[0000][PE] mean and std.dev: (2304.27, 2147.94)
[0000][PE] low and high boundaries for proper pairs: (1, 11425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 393.289 CPU sec, 22.000 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517727, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 421, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3057)
[0000][PE] mean and std.dev: (663.80, 536.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.88, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (478, 1250, 4240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11764)
[0000][PE] mean and std.dev: (1765.08, 1665.13)
[0000][PE] low and high boundaries for proper pairs: (1, 15526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 396.736 CPU sec, 22.208 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517623, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 427, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1542)
[0000][PE] mean and std.dev: (382.08, 232.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 397.317 CPU sec, 22.290 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 517952, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.75, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1411, 1838, 4419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10435)
[0000][PE] mean and std.dev: (2748.25, 2475.86)
[0000][PE] low and high boundaries for proper pairs: (1, 13443)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 393.793 CPU sec, 22.027 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518154, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 682, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5149)
[0000][PE] mean and std.dev: (886.40, 770.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1205, 1965, 2572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5306)
[0000][PE] mean and std.dev: (2142.90, 1414.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 395.863 CPU sec, 22.142 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517762, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 631, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5316)
[0000][PE] mean and std.dev: (1156.33, 1546.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (206, 677, 3901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11291)
[0000][PE] mean and std.dev: (2216.82, 2541.05)
[0000][PE] low and high boundaries for proper pairs: (1, 14986)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1440, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4421)
[0000][PE] mean and std.dev: (1645.10, 867.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 393.799 CPU sec, 22.027 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518135, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 790, 3222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9046)
[0000][PE] mean and std.dev: (1988.88, 2454.21)
[0000][PE] low and high boundaries for proper pairs: (1, 11958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 394.262 CPU sec, 22.097 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518114, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 820, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2821)
[0000][PE] mean and std.dev: (819.32, 618.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 391.877 CPU sec, 21.916 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518001, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 440, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2603)
[0000][PE] mean and std.dev: (710.50, 617.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1607, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5081)
[0000][PE] mean and std.dev: (1486.46, 800.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 395.596 CPU sec, 22.114 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518201, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 1101, 2464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6498)
[0000][PE] mean and std.dev: (1371.39, 1143.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1409, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5114)
[0000][PE] mean and std.dev: (1444.71, 850.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 392.625 CPU sec, 21.975 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518126, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 755, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6040)
[0000][PE] mean and std.dev: (1377.90, 1517.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.25, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1253, 2656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5956)
[0000][PE] mean and std.dev: (1716.60, 1304.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7606)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 392.000 CPU sec, 21.879 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517900, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 320, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 865)
[0000][PE] mean and std.dev: (308.83, 164.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.47, 124.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 397.305 CPU sec, 22.204 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517670, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 1073, 3588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9972)
[0000][PE] mean and std.dev: (2175.70, 2554.47)
[0000][PE] low and high boundaries for proper pairs: (1, 13164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.27, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (394, 1237, 3255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8977)
[0000][PE] mean and std.dev: (2197.86, 2142.61)
[0000][PE] low and high boundaries for proper pairs: (1, 11838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 395.508 CPU sec, 22.104 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518110, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 553, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3702)
[0000][PE] mean and std.dev: (764.33, 773.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (569, 1480, 2726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7040)
[0000][PE] mean and std.dev: (1837.42, 1784.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 396.232 CPU sec, 22.142 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518185, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 374, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (654.60, 723.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1620, 2802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6702)
[0000][PE] mean and std.dev: (1702.55, 1155.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 396.689 CPU sec, 22.174 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518072, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 518, 2840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7758)
[0000][PE] mean and std.dev: (1464.76, 1714.18)
[0000][PE] low and high boundaries for proper pairs: (1, 10217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1808, 4743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11833)
[0000][PE] mean and std.dev: (3064.92, 2714.67)
[0000][PE] low and high boundaries for proper pairs: (1, 15378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 392.558 CPU sec, 21.988 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518397, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 725, 2809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7539)
[0000][PE] mean and std.dev: (1352.10, 1297.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1473, 2822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6314)
[0000][PE] mean and std.dev: (2048.85, 1696.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8834)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 394.946 CPU sec, 22.118 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518100, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 492, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (837.10, 673.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.79, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 395.976 CPU sec, 22.145 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518362, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 409, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3527)
[0000][PE] mean and std.dev: (657.55, 578.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.46, 124.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 395.090 CPU sec, 22.107 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518004, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 381, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3811)
[0000][PE] mean and std.dev: (620.42, 567.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.09, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 394.434 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518156, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 460, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4380)
[0000][PE] mean and std.dev: (948.56, 1016.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 396.172 CPU sec, 22.165 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518302, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 863, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4271)
[0000][PE] mean and std.dev: (959.27, 1015.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 395.808 CPU sec, 22.174 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518063, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 412, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1987)
[0000][PE] mean and std.dev: (566.53, 447.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.38, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 397.204 CPU sec, 22.234 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518057, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 541, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5220)
[0000][PE] mean and std.dev: (853.06, 714.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1207, 3644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9362)
[0000][PE] mean and std.dev: (2140.23, 1885.02)
[0000][PE] low and high boundaries for proper pairs: (1, 12221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 393.943 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517769, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 936, 2389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6477)
[0000][PE] mean and std.dev: (1223.00, 981.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 1419, 2854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8090)
[0000][PE] mean and std.dev: (1581.83, 1603.54)
[0000][PE] low and high boundaries for proper pairs: (1, 10708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 397.314 CPU sec, 22.243 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518273, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 512, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (872.90, 866.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.74, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 394.295 CPU sec, 22.114 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518137, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 446, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4251)
[0000][PE] mean and std.dev: (907.71, 919.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.71, 125.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 393.104 CPU sec, 21.975 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518261, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 749, 1892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4984)
[0000][PE] mean and std.dev: (1073.58, 966.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1773, 3653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9091)
[0000][PE] mean and std.dev: (1955.25, 1331.41)
[0000][PE] low and high boundaries for proper pairs: (1, 11810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 391.937 CPU sec, 21.955 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518150, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 412, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (678.10, 547.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 396.288 CPU sec, 22.144 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518017, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 766, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5726)
[0000][PE] mean and std.dev: (1129.29, 1040.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 398.340 CPU sec, 22.316 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518247, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 856, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (812.47, 677.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 394.301 CPU sec, 22.031 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517699, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1357, 4019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11307)
[0000][PE] mean and std.dev: (2118.13, 2244.69)
[0000][PE] low and high boundaries for proper pairs: (1, 14951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 397.278 CPU sec, 22.231 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518212, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 614, 832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1902)
[0000][PE] mean and std.dev: (525.83, 299.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 394.989 CPU sec, 22.152 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518314, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 849, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3812)
[0000][PE] mean and std.dev: (953.40, 902.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1152, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2877)
[0000][PE] mean and std.dev: (1085.50, 331.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 395.456 CPU sec, 22.112 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517992, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 822, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4626)
[0000][PE] mean and std.dev: (1152.50, 1156.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1225, 1506, 4977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12481)
[0000][PE] mean and std.dev: (2483.73, 1859.76)
[0000][PE] low and high boundaries for proper pairs: (1, 16233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 393.538 CPU sec, 21.996 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518657, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 340, 767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1781)
[0000][PE] mean and std.dev: (379.64, 275.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 2506, 2918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6562)
[0000][PE] mean and std.dev: (1961.20, 1119.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 393.248 CPU sec, 21.977 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518375, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 332, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4387)
[0000][PE] mean and std.dev: (690.13, 624.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.78, 125.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1718, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (1558.00, 695.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 390.608 CPU sec, 21.876 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517653, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 1261, 2938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8220)
[0000][PE] mean and std.dev: (1500.20, 1422.96)
[0000][PE] low and high boundaries for proper pairs: (1, 10861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1126, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3067)
[0000][PE] mean and std.dev: (1098.10, 579.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 396.654 CPU sec, 22.188 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518192, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 652, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (977.00, 874.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.70, 125.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1506, 2306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4934)
[0000][PE] mean and std.dev: (1463.86, 1180.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 398.249 CPU sec, 22.311 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518171, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 1148, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4955)
[0000][PE] mean and std.dev: (1221.47, 1160.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (2037, 2845, 3583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6675)
[0000][PE] mean and std.dev: (2972.00, 1150.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 391.819 CPU sec, 21.915 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518157, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 463, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4332)
[0000][PE] mean and std.dev: (900.87, 851.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.03, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 395.260 CPU sec, 22.134 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518228, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 509, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3670)
[0000][PE] mean and std.dev: (800.37, 811.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1477, 1836, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5191)
[0000][PE] mean and std.dev: (2023.00, 959.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 395.701 CPU sec, 22.129 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518201, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 737, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5179)
[0000][PE] mean and std.dev: (1190.08, 1239.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 392.455 CPU sec, 21.939 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000062 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517840, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 1005, 3034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8228)
[0000][PE] mean and std.dev: (1952.12, 2170.01)
[0000][PE] low and high boundaries for proper pairs: (1, 10825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1544, 1892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3658)
[0000][PE] mean and std.dev: (1288.00, 609.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 398.153 CPU sec, 22.322 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518056, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 629, 697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1507)
[0000][PE] mean and std.dev: (436.82, 175.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.87, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1502, 2854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6914)
[0000][PE] mean and std.dev: (1870.60, 1262.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 392.848 CPU sec, 21.978 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517699, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 643, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2915)
[0000][PE] mean and std.dev: (784.08, 665.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 392.431 CPU sec, 21.954 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517831, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 707, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5094)
[0000][PE] mean and std.dev: (1288.62, 1438.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.70, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 392.192 CPU sec, 21.927 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517952, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 405, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5524)
[0000][PE] mean and std.dev: (1187.05, 1397.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1812, 3408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8130)
[0000][PE] mean and std.dev: (1846.64, 1181.49)
[0000][PE] low and high boundaries for proper pairs: (1, 10491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 393.420 CPU sec, 21.984 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518003, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 1489, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6388)
[0000][PE] mean and std.dev: (1493.94, 1507.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1348, 1823, 2760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5584)
[0000][PE] mean and std.dev: (1733.27, 684.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 391.618 CPU sec, 21.920 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517826, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 463, 2507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6757)
[0000][PE] mean and std.dev: (1185.07, 1251.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.79, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 392.292 CPU sec, 21.999 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517909, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 543, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4440)
[0000][PE] mean and std.dev: (783.55, 678.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.35, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 391.896 CPU sec, 21.898 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517797, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 1051, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4552)
[0000][PE] mean and std.dev: (970.74, 772.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.86, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 393.247 CPU sec, 22.028 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517972, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 1303, 4237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12043)
[0000][PE] mean and std.dev: (2227.25, 2344.59)
[0000][PE] low and high boundaries for proper pairs: (1, 15946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 889, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2829)
[0000][PE] mean and std.dev: (978.30, 592.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 391.505 CPU sec, 21.919 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517990, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 468, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4831)
[0000][PE] mean and std.dev: (906.13, 789.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 393.878 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518461, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 442, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (726.00, 728.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 388.463 CPU sec, 21.742 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518298, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 540, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3731)
[0000][PE] mean and std.dev: (1066.57, 1022.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.42, 124.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 393.242 CPU sec, 21.978 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518533, 6, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.66, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 391.503 CPU sec, 21.886 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518117, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 453, 872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2002)
[0000][PE] mean and std.dev: (519.72, 428.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 394.381 CPU sec, 22.068 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517726, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 300, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4391)
[0000][PE] mean and std.dev: (655.27, 768.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1637, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5699)
[0000][PE] mean and std.dev: (1866.92, 1471.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 393.228 CPU sec, 22.018 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517930, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 495, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3078)
[0000][PE] mean and std.dev: (678.73, 688.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.58, 125.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (669, 1418, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3930)
[0000][PE] mean and std.dev: (1325.50, 644.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5017)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 394.528 CPU sec, 22.090 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518920, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 374, 730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1770)
[0000][PE] mean and std.dev: (443.86, 331.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (688, 1617, 2648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6568)
[0000][PE] mean and std.dev: (2010.31, 1612.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 392.107 CPU sec, 21.931 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518403, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (112, 358, 886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2434)
[0000][PE] mean and std.dev: (437.31, 416.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 388.700 CPU sec, 21.719 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518102, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 1296, 2882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7834)
[0000][PE] mean and std.dev: (1798.21, 1897.84)
[0000][PE] low and high boundaries for proper pairs: (1, 10310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.20, 125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 386.750 CPU sec, 21.588 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517816, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 400, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1952)
[0000][PE] mean and std.dev: (458.62, 272.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.42, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 397.928 CPU sec, 22.296 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518464, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 432, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2604)
[0000][PE] mean and std.dev: (479.70, 313.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 390.851 CPU sec, 21.903 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518224, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 699, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (810.21, 539.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 392.080 CPU sec, 21.920 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518307, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 1043, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6430)
[0000][PE] mean and std.dev: (1132.85, 939.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1155, 1411, 2532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5286)
[0000][PE] mean and std.dev: (1836.09, 945.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 394.542 CPU sec, 22.076 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518364, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 738, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3797)
[0000][PE] mean and std.dev: (923.76, 865.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.83, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1324, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4486)
[0000][PE] mean and std.dev: (1188.60, 644.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 391.997 CPU sec, 21.921 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517404, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 351, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2945)
[0000][PE] mean and std.dev: (671.29, 569.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.45, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1623, 3017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6695)
[0000][PE] mean and std.dev: (1843.91, 993.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 393.425 CPU sec, 21.996 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518024, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 357, 739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1537)
[0000][PE] mean and std.dev: (375.50, 169.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.62, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 392.013 CPU sec, 21.911 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518342, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 960, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5133)
[0000][PE] mean and std.dev: (1055.06, 955.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 2106, 2811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6109)
[0000][PE] mean and std.dev: (1932.54, 968.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 390.214 CPU sec, 21.792 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518340, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 470, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4675)
[0000][PE] mean and std.dev: (784.53, 815.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.40, 124.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1775, 4600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11852)
[0000][PE] mean and std.dev: (2559.85, 2314.86)
[0000][PE] low and high boundaries for proper pairs: (1, 15478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 392.797 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517935, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 718, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3357)
[0000][PE] mean and std.dev: (980.52, 838.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 393.293 CPU sec, 21.987 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518083, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 667, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4951)
[0000][PE] mean and std.dev: (1018.71, 1127.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.69, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1341, 2308, 5529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13905)
[0000][PE] mean and std.dev: (3085.54, 2307.04)
[0000][PE] low and high boundaries for proper pairs: (1, 18093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 393.267 CPU sec, 21.981 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518197, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 389, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5376)
[0000][PE] mean and std.dev: (951.10, 927.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1504, 1862, 2941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5815)
[0000][PE] mean and std.dev: (2398.27, 1550.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 396.554 CPU sec, 22.157 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517853, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 541, 2407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6471)
[0000][PE] mean and std.dev: (1127.53, 1045.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1927, 2357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5417)
[0000][PE] mean and std.dev: (1611.82, 816.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 393.688 CPU sec, 21.986 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518179, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 568, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4073)
[0000][PE] mean and std.dev: (943.10, 834.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 393.296 CPU sec, 21.989 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518082, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 414, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2964)
[0000][PE] mean and std.dev: (497.29, 371.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1892, 3929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10047)
[0000][PE] mean and std.dev: (2223.08, 1680.95)
[0000][PE] low and high boundaries for proper pairs: (1, 13106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 389.820 CPU sec, 21.791 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518291, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 437, 3687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10559)
[0000][PE] mean and std.dev: (1593.53, 2489.33)
[0000][PE] low and high boundaries for proper pairs: (1, 13995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 393.147 CPU sec, 22.008 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517880, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 448, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2827)
[0000][PE] mean and std.dev: (664.71, 564.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.37, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 395.050 CPU sec, 22.127 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517929, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 1896, 3012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8534)
[0000][PE] mean and std.dev: (2143.15, 2124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 11295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 3208, 3893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9667)
[0000][PE] mean and std.dev: (3142.50, 2423.48)
[0000][PE] low and high boundaries for proper pairs: (1, 12836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 392.061 CPU sec, 21.901 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517727, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 539, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4412)
[0000][PE] mean and std.dev: (853.26, 806.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1801, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4559)
[0000][PE] mean and std.dev: (1607.67, 764.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 395.919 CPU sec, 22.135 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517497, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 497, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2776)
[0000][PE] mean and std.dev: (737.50, 652.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 395.931 CPU sec, 22.115 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517860, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 584, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5224)
[0000][PE] mean and std.dev: (965.40, 940.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.72, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1639, 2850, 6044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14854)
[0000][PE] mean and std.dev: (3480.45, 2791.72)
[0000][PE] low and high boundaries for proper pairs: (1, 19259)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 391.925 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518010, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (423, 970, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (974.36, 587.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4911)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 393.208 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517971, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 423, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3856)
[0000][PE] mean and std.dev: (715.15, 671.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.26, 124.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 392.605 CPU sec, 21.987 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518213, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (527, 1174, 2901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7649)
[0000][PE] mean and std.dev: (1508.37, 1598.76)
[0000][PE] low and high boundaries for proper pairs: (1, 10023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 395.225 CPU sec, 22.127 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518088, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 711, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2939)
[0000][PE] mean and std.dev: (737.70, 609.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 396.472 CPU sec, 22.197 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518313, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 693, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4393)
[0000][PE] mean and std.dev: (919.53, 957.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 395.813 CPU sec, 22.166 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517712, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 306, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1491)
[0000][PE] mean and std.dev: (346.31, 232.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 395.835 CPU sec, 22.140 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518122, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 531, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5472)
[0000][PE] mean and std.dev: (1058.38, 1162.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 394.517 CPU sec, 22.074 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518353, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 699, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3133)
[0000][PE] mean and std.dev: (767.36, 567.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1265, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4517)
[0000][PE] mean and std.dev: (1346.15, 722.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 394.285 CPU sec, 22.056 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518120, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 408, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3782)
[0000][PE] mean and std.dev: (395.18, 356.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 395.520 CPU sec, 22.164 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518296, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 462, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2192)
[0000][PE] mean and std.dev: (579.46, 385.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 392.208 CPU sec, 22.021 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517884, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 436, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (643.90, 511.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.42, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 393.051 CPU sec, 22.025 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518069, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 527, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6050)
[0000][PE] mean and std.dev: (974.83, 942.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (464, 1242, 4684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13124)
[0000][PE] mean and std.dev: (2419.80, 2586.88)
[0000][PE] low and high boundaries for proper pairs: (1, 17344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 391.718 CPU sec, 21.910 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518064, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 580, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5967)
[0000][PE] mean and std.dev: (945.62, 763.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.73, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1295, 1731, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (1747.89, 540.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 395.361 CPU sec, 22.145 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517908, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 976, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5276)
[0000][PE] mean and std.dev: (1158.69, 1059.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.18, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 394.949 CPU sec, 22.110 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517880, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 903, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4484)
[0000][PE] mean and std.dev: (967.13, 756.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.75, 125.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1129, 2689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6001)
[0000][PE] mean and std.dev: (1733.18, 1431.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 395.131 CPU sec, 22.085 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517989, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 630, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (959.61, 933.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 391.725 CPU sec, 21.961 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517928, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 827, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5657)
[0000][PE] mean and std.dev: (991.53, 802.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.73, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1507, 2114, 3949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8833)
[0000][PE] mean and std.dev: (2533.07, 1716.15)
[0000][PE] low and high boundaries for proper pairs: (1, 11275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 395.978 CPU sec, 22.151 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518069, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 565, 1791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5045)
[0000][PE] mean and std.dev: (864.00, 852.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 391.762 CPU sec, 21.897 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518067, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 816, 2374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6406)
[0000][PE] mean and std.dev: (873.25, 784.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 396.010 CPU sec, 22.117 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517913, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 1072, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5531)
[0000][PE] mean and std.dev: (1100.78, 893.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.66, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1748, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5110)
[0000][PE] mean and std.dev: (1415.47, 795.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 394.977 CPU sec, 22.133 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518127, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 375, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4056)
[0000][PE] mean and std.dev: (764.24, 800.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.09, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 394.482 CPU sec, 22.123 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518440, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 762, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5123)
[0000][PE] mean and std.dev: (1125.50, 1235.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 393.821 CPU sec, 22.027 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517993, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 494, 2666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7196)
[0000][PE] mean and std.dev: (1316.45, 1386.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.77, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 394.898 CPU sec, 22.080 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518525, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 556, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4587)
[0000][PE] mean and std.dev: (989.81, 974.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (662, 1118, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6044)
[0000][PE] mean and std.dev: (1669.57, 1406.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 391.972 CPU sec, 21.962 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518066, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 395, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4932)
[0000][PE] mean and std.dev: (942.19, 1048.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1382, 1701, 2493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4715)
[0000][PE] mean and std.dev: (1756.83, 938.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 391.680 CPU sec, 21.921 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517801, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 842, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4844)
[0000][PE] mean and std.dev: (1148.39, 1042.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.28, 124.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1663, 2836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6144)
[0000][PE] mean and std.dev: (1337.00, 863.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 396.366 CPU sec, 22.164 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517959, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 676, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6191)
[0000][PE] mean and std.dev: (901.94, 876.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 390.541 CPU sec, 21.833 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517820, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 356, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1471)
[0000][PE] mean and std.dev: (362.87, 184.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 393.427 CPU sec, 22.004 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518040, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 1011, 2985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8449)
[0000][PE] mean and std.dev: (1691.93, 1973.36)
[0000][PE] low and high boundaries for proper pairs: (1, 11181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 395.656 CPU sec, 22.131 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517863, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1031, 1453, 2996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6926)
[0000][PE] mean and std.dev: (1410.67, 846.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1978, 2636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6144)
[0000][PE] mean and std.dev: (1790.10, 1022.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 394.371 CPU sec, 22.017 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518304, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 785, 2346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6476)
[0000][PE] mean and std.dev: (998.58, 1022.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1251, 1702, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (45, 3060)
[0000][PE] mean and std.dev: (1413.20, 370.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 395.817 CPU sec, 22.094 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518387, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 364, 771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1653)
[0000][PE] mean and std.dev: (446.40, 341.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.63, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 391.118 CPU sec, 21.870 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517660, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 463, 915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2079)
[0000][PE] mean and std.dev: (480.85, 303.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1285, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4154)
[0000][PE] mean and std.dev: (1311.92, 755.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 397.495 CPU sec, 22.231 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517881, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 391, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3072)
[0000][PE] mean and std.dev: (665.62, 696.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.76, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1486, 2245, 3712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8164)
[0000][PE] mean and std.dev: (2156.09, 986.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 394.050 CPU sec, 22.063 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518332, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 1264, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4325)
[0000][PE] mean and std.dev: (1182.24, 1050.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1646, 2111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4497)
[0000][PE] mean and std.dev: (1555.36, 824.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 396.447 CPU sec, 22.181 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518235, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 432, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (512.40, 329.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 394.923 CPU sec, 22.099 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518286, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 1229, 3267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8969)
[0000][PE] mean and std.dev: (2090.82, 2541.35)
[0000][PE] low and high boundaries for proper pairs: (1, 12256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.70, 125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 393.111 CPU sec, 21.980 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518435, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 1150, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5776)
[0000][PE] mean and std.dev: (1295.69, 1187.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.24, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 395.529 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518490, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 793, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5750)
[0000][PE] mean and std.dev: (1179.77, 1350.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 395.310 CPU sec, 22.102 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518088, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 617, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (751.35, 719.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.19, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1406, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (1054.50, 591.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 393.335 CPU sec, 21.971 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517954, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 513, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (723.08, 635.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.14, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 396.756 CPU sec, 22.187 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517810, 12, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 829, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6758)
[0000][PE] mean and std.dev: (1389.53, 1185.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (153, 555, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2877)
[0000][PE] mean and std.dev: (443.73, 415.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3785)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 393.999 CPU sec, 22.060 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518120, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 594, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (893.80, 629.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 393.208 CPU sec, 21.955 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518463, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 448, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2843)
[0000][PE] mean and std.dev: (530.56, 360.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1567, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4636)
[0000][PE] mean and std.dev: (1428.07, 721.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 394.775 CPU sec, 22.063 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518617, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 798, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (941.67, 850.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 395.411 CPU sec, 22.102 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 517909, 1, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1406, 3680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8694)
[0000][PE] mean and std.dev: (2219.24, 1398.18)
[0000][PE] low and high boundaries for proper pairs: (1, 11201)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 396.397 CPU sec, 22.224 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517580, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 1044, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5720)
[0000][PE] mean and std.dev: (1363.05, 1255.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 396.745 CPU sec, 22.208 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518269, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 653, 2616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7068)
[0000][PE] mean and std.dev: (1152.85, 1044.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.79, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 393.797 CPU sec, 21.995 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518123, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1349, 2909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8009)
[0000][PE] mean and std.dev: (1462.90, 1267.97)
[0000][PE] low and high boundaries for proper pairs: (1, 10559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 2067, 3775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9965)
[0000][PE] mean and std.dev: (2380.44, 1921.09)
[0000][PE] low and high boundaries for proper pairs: (1, 13060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 395.732 CPU sec, 22.112 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518074, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 850, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6728)
[0000][PE] mean and std.dev: (1284.52, 1144.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 394.514 CPU sec, 22.068 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517931, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 456, 3096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8748)
[0000][PE] mean and std.dev: (1192.05, 1351.54)
[0000][PE] low and high boundaries for proper pairs: (1, 11574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 395.565 CPU sec, 22.128 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518248, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 1084, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4765)
[0000][PE] mean and std.dev: (864.18, 649.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.35, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1252, 1731, 2871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6109)
[0000][PE] mean and std.dev: (1826.08, 904.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 393.211 CPU sec, 22.005 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518281, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 532, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4014)
[0000][PE] mean and std.dev: (724.20, 689.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 396.243 CPU sec, 22.174 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518371, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 888, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4700)
[0000][PE] mean and std.dev: (841.85, 646.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.71, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 1217, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4658)
[0000][PE] mean and std.dev: (1200.35, 817.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 392.923 CPU sec, 21.977 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518397, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 302, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3422)
[0000][PE] mean and std.dev: (675.58, 835.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1308, 1665, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3873)
[0000][PE] mean and std.dev: (1675.27, 689.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 392.800 CPU sec, 21.977 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517895, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 456, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (836.57, 669.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 394.725 CPU sec, 22.063 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517897, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 320, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6005)
[0000][PE] mean and std.dev: (1089.53, 1550.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 396.078 CPU sec, 22.174 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518123, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 360, 702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1650)
[0000][PE] mean and std.dev: (447.78, 344.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.75, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 393.721 CPU sec, 22.000 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518247, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 648, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4705)
[0000][PE] mean and std.dev: (957.53, 962.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.66, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 395.779 CPU sec, 22.144 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517799, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 391, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4703)
[0000][PE] mean and std.dev: (710.45, 668.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.71, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 394.559 CPU sec, 22.119 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518030, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 405, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5782)
[0000][PE] mean and std.dev: (1352.91, 1604.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.74, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 394.894 CPU sec, 22.128 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517766, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 365, 1009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2653)
[0000][PE] mean and std.dev: (319.45, 247.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (450, 1803, 3218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8754)
[0000][PE] mean and std.dev: (2018.36, 1531.01)
[0000][PE] low and high boundaries for proper pairs: (1, 11522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 397.768 CPU sec, 22.277 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518578, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 720, 2390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6450)
[0000][PE] mean and std.dev: (1276.29, 1435.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 395.344 CPU sec, 22.129 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517997, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 380, 816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2022)
[0000][PE] mean and std.dev: (433.75, 370.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1545, 3225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7687)
[0000][PE] mean and std.dev: (1958.73, 1413.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 391.743 CPU sec, 21.883 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518238, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 385, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4953)
[0000][PE] mean and std.dev: (870.24, 1072.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 393.823 CPU sec, 22.050 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 518173, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1739, 3024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6844)
[0000][PE] mean and std.dev: (1876.62, 1121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8754)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 394.235 CPU sec, 22.071 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518325, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 412, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5297)
[0000][PE] mean and std.dev: (861.75, 914.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.63, 124.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 397.714 CPU sec, 22.253 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517692, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 513, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4113)
[0000][PE] mean and std.dev: (1024.50, 1132.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 397.453 CPU sec, 22.282 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518250, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 463, 2748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7562)
[0000][PE] mean and std.dev: (1327.00, 1529.38)
[0000][PE] low and high boundaries for proper pairs: (1, 9969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1818, 3016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6742)
[0000][PE] mean and std.dev: (2190.54, 1693.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 392.528 CPU sec, 21.927 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518259, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 837, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5477)
[0000][PE] mean and std.dev: (1172.76, 1016.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.53, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (597, 1116, 3162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8292)
[0000][PE] mean and std.dev: (1825.23, 1678.85)
[0000][PE] low and high boundaries for proper pairs: (1, 10857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 396.396 CPU sec, 22.214 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518033, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (471, 1055, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (945.64, 627.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.72, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1304, 2888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6688)
[0000][PE] mean and std.dev: (1730.00, 1156.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 397.288 CPU sec, 22.215 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518510, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 337, 720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1612)
[0000][PE] mean and std.dev: (454.22, 319.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 395.297 CPU sec, 22.100 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518189, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 327, 487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 915)
[0000][PE] mean and std.dev: (288.18, 93.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1370, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4665)
[0000][PE] mean and std.dev: (1602.36, 991.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 395.580 CPU sec, 22.108 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518097, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 549, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2043)
[0000][PE] mean and std.dev: (540.77, 234.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1184, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4932)
[0000][PE] mean and std.dev: (1264.00, 673.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 397.411 CPU sec, 22.219 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518336, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 669, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4704)
[0000][PE] mean and std.dev: (1053.50, 969.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1588, 2944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6718)
[0000][PE] mean and std.dev: (1801.64, 1063.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 393.910 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518249, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 436, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5340)
[0000][PE] mean and std.dev: (1146.25, 1416.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.65, 125.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1449, 1745, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (1923.90, 835.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 392.165 CPU sec, 21.971 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518071, 4, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 394.023 CPU sec, 22.030 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517619, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 498, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2467)
[0000][PE] mean and std.dev: (720.29, 529.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 2010, 3462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8054)
[0000][PE] mean and std.dev: (2354.93, 1557.98)
[0000][PE] low and high boundaries for proper pairs: (1, 10350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 399.379 CPU sec, 22.371 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518079, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 378, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2059)
[0000][PE] mean and std.dev: (588.82, 538.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 1970, 5881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15339)
[0000][PE] mean and std.dev: (3245.60, 2971.43)
[0000][PE] low and high boundaries for proper pairs: (1, 20068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 394.691 CPU sec, 22.043 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518039, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.71, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 394.530 CPU sec, 22.086 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518324, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 533, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (773.29, 668.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.71, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1753, 2109, 5199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12091)
[0000][PE] mean and std.dev: (2873.62, 1910.61)
[0000][PE] low and high boundaries for proper pairs: (1, 15537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 394.235 CPU sec, 22.032 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518071, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 494, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2743)
[0000][PE] mean and std.dev: (738.37, 643.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 394.376 CPU sec, 22.098 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518175, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 637, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6208)
[0000][PE] mean and std.dev: (1131.93, 1273.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 394.102 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518297, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 894, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4752)
[0000][PE] mean and std.dev: (1071.62, 1069.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.22, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1169, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (1051.25, 378.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 392.150 CPU sec, 21.928 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518158, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 460, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3024)
[0000][PE] mean and std.dev: (727.92, 626.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1112, 6016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16386)
[0000][PE] mean and std.dev: (2270.85, 2404.26)
[0000][PE] low and high boundaries for proper pairs: (1, 21571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 394.509 CPU sec, 22.041 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517895, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 568, 5707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16479)
[0000][PE] mean and std.dev: (2205.42, 3025.78)
[0000][PE] low and high boundaries for proper pairs: (1, 21865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.25, 124.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1537, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (1308.31, 775.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 392.764 CPU sec, 21.966 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 518449, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.70, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 391.750 CPU sec, 21.885 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518396, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 399, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3399)
[0000][PE] mean and std.dev: (713.33, 810.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.63, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (502, 1677, 3562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9682)
[0000][PE] mean and std.dev: (2114.80, 1679.73)
[0000][PE] low and high boundaries for proper pairs: (1, 12742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 396.730 CPU sec, 22.199 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518225, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 664, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2216)
[0000][PE] mean and std.dev: (605.53, 393.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 393.886 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518215, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 1239, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (910.42, 657.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 396.828 CPU sec, 22.186 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517734, 6, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.79, 125.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 397.563 CPU sec, 22.249 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517976, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 594, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2572)
[0000][PE] mean and std.dev: (616.45, 455.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1532, 1774, 3241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6659)
[0000][PE] mean and std.dev: (2266.50, 1439.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 395.589 CPU sec, 22.145 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517848, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 331, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (873.55, 775.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.88, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1715, 3007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6669)
[0000][PE] mean and std.dev: (1676.11, 1011.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 395.023 CPU sec, 22.076 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518011, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 420, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (635.00, 526.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.32, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 395.606 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518037, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 686, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3472)
[0000][PE] mean and std.dev: (883.13, 820.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1173, 3296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7978)
[0000][PE] mean and std.dev: (1894.46, 1260.64)
[0000][PE] low and high boundaries for proper pairs: (1, 10319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 392.380 CPU sec, 21.960 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518092, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 532, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (682.69, 619.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 125.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1634, 4124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10176)
[0000][PE] mean and std.dev: (2336.62, 1770.81)
[0000][PE] low and high boundaries for proper pairs: (1, 13202)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 392.350 CPU sec, 21.951 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517964, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 614, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (844.31, 742.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1319, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (1395.10, 682.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 393.340 CPU sec, 22.013 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517858, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 530, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2547)
[0000][PE] mean and std.dev: (393.64, 261.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 393.783 CPU sec, 22.044 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518154, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 444, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5947)
[0000][PE] mean and std.dev: (964.93, 1071.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 393.379 CPU sec, 21.987 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518176, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 390, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1968)
[0000][PE] mean and std.dev: (429.70, 314.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.00, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 395.971 CPU sec, 22.166 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517858, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 437, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2189)
[0000][PE] mean and std.dev: (594.18, 406.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 396.001 CPU sec, 22.185 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518359, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 409, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (647.57, 478.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.78, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 395.699 CPU sec, 22.130 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518060, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 265, 1000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (309.20, 271.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 392.989 CPU sec, 21.967 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 518253, 6, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 395.211 CPU sec, 22.112 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517969, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 490, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4549)
[0000][PE] mean and std.dev: (745.50, 678.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.70, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1234, 1734, 2839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6049)
[0000][PE] mean and std.dev: (2204.67, 1524.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 395.089 CPU sec, 22.146 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 518008, 6, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.63, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 396.269 CPU sec, 22.140 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518343, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (526, 1700, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5716)
[0000][PE] mean and std.dev: (1646.92, 1311.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.25, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 2690, 4133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10239)
[0000][PE] mean and std.dev: (2845.00, 2283.23)
[0000][PE] low and high boundaries for proper pairs: (1, 13292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 393.155 CPU sec, 22.056 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518146, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 463, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3724)
[0000][PE] mean and std.dev: (652.67, 471.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.01, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 990, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (1040.30, 439.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 396.620 CPU sec, 22.191 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517758, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 864, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (851.08, 625.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1896, 2714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6260)
[0000][PE] mean and std.dev: (2155.50, 1362.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 394.033 CPU sec, 22.021 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518257, 11, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 703, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5142)
[0000][PE] mean and std.dev: (1130.94, 1019.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.73, 125.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1193, 2420, 5626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14492)
[0000][PE] mean and std.dev: (3351.55, 2971.59)
[0000][PE] low and high boundaries for proper pairs: (1, 18925)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 2128, 3008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6770)
[0000][PE] mean and std.dev: (2176.80, 1371.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 393.357 CPU sec, 22.054 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517934, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 807, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3308)
[0000][PE] mean and std.dev: (901.48, 664.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.24, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 395.607 CPU sec, 22.150 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 518755, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 395.452 CPU sec, 22.140 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518087, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 963, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4914)
[0000][PE] mean and std.dev: (1076.50, 1019.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 2043, 2802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6882)
[0000][PE] mean and std.dev: (1872.20, 1116.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 396.339 CPU sec, 22.150 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518041, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 550, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (859.07, 784.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 2211, 3054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7160)
[0000][PE] mean and std.dev: (1698.38, 895.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 394.001 CPU sec, 22.056 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517911, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 452, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3320)
[0000][PE] mean and std.dev: (743.25, 773.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 394.808 CPU sec, 22.068 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517241, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 593, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (723.50, 615.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (870, 1671, 2741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6483)
[0000][PE] mean and std.dev: (2011.60, 1366.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8354)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1856, 6732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18018)
[0000][PE] mean and std.dev: (3226.55, 2765.98)
[0000][PE] low and high boundaries for proper pairs: (1, 23661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 398.083 CPU sec, 22.333 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518221, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 382, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4108)
[0000][PE] mean and std.dev: (653.29, 636.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.71, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 395.921 CPU sec, 22.168 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518394, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 925, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4951)
[0000][PE] mean and std.dev: (1240.38, 1011.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 2083, 3734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9254)
[0000][PE] mean and std.dev: (2121.00, 1383.38)
[0000][PE] low and high boundaries for proper pairs: (1, 12014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 394.567 CPU sec, 22.072 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517881, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 793, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4656)
[0000][PE] mean and std.dev: (1118.20, 966.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 397.288 CPU sec, 22.221 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517729, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 565, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (745.81, 663.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 397.310 CPU sec, 22.242 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517705, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 365, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3398)
[0000][PE] mean and std.dev: (617.62, 578.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 396.624 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517890, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 430, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2938)
[0000][PE] mean and std.dev: (733.47, 658.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 392.990 CPU sec, 22.000 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517746, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 373, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2654)
[0000][PE] mean and std.dev: (737.27, 724.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 394.526 CPU sec, 22.069 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517732, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 682, 2423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6627)
[0000][PE] mean and std.dev: (1202.08, 1172.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 394.890 CPU sec, 22.069 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517577, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 2142, 3538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10008)
[0000][PE] mean and std.dev: (2285.10, 2247.93)
[0000][PE] low and high boundaries for proper pairs: (1, 13243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1464, 2262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4718)
[0000][PE] mean and std.dev: (1730.54, 1023.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 395.524 CPU sec, 22.088 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000058 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518263, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 499, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6011)
[0000][PE] mean and std.dev: (1094.15, 1342.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 393.716 CPU sec, 22.051 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517936, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 520, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3364)
[0000][PE] mean and std.dev: (756.38, 579.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.90, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 395.277 CPU sec, 22.150 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518070, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 440, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4891)
[0000][PE] mean and std.dev: (790.07, 738.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1373, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4471)
[0000][PE] mean and std.dev: (1421.94, 912.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 395.417 CPU sec, 22.116 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518613, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 339, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3991)
[0000][PE] mean and std.dev: (855.80, 924.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1262, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (1151.67, 553.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 391.456 CPU sec, 21.883 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518108, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 1013, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (915.23, 681.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1512, 2478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5590)
[0000][PE] mean and std.dev: (1559.90, 769.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 392.162 CPU sec, 21.957 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517734, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 387, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2851)
[0000][PE] mean and std.dev: (657.06, 507.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 938, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3777)
[0000][PE] mean and std.dev: (1049.17, 544.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 393.919 CPU sec, 22.008 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518124, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 572, 2569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6987)
[0000][PE] mean and std.dev: (1462.79, 1554.14)
[0000][PE] low and high boundaries for proper pairs: (1, 9196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1413, 2863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6665)
[0000][PE] mean and std.dev: (1962.08, 1574.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 395.281 CPU sec, 22.105 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518560, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (533, 699, 2628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6818)
[0000][PE] mean and std.dev: (1793.09, 1873.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.86, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 393.408 CPU sec, 22.002 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518299, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 501, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6426)
[0000][PE] mean and std.dev: (1299.30, 1553.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 393.665 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 518681, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.74, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (550, 1139, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3412)
[0000][PE] mean and std.dev: (1144.50, 600.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4366)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 392.576 CPU sec, 21.941 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518272, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 387, 877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2127)
[0000][PE] mean and std.dev: (548.81, 403.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 392.833 CPU sec, 21.989 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518502, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 518, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4257)
[0000][PE] mean and std.dev: (804.00, 745.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1329, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4552)
[0000][PE] mean and std.dev: (1202.93, 623.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 392.312 CPU sec, 22.003 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517638, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 318, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1561)
[0000][PE] mean and std.dev: (447.67, 414.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1281, 1520, 4601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11241)
[0000][PE] mean and std.dev: (2399.18, 1908.79)
[0000][PE] low and high boundaries for proper pairs: (1, 14561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 395.730 CPU sec, 22.133 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000250 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518161, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 589, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5221)
[0000][PE] mean and std.dev: (1149.54, 1208.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.81, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 395.568 CPU sec, 22.130 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518239, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1154, 1741, 2439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5009)
[0000][PE] mean and std.dev: (1613.75, 994.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1310, 2689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5961)
[0000][PE] mean and std.dev: (1719.73, 1435.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 392.613 CPU sec, 22.012 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518326, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 1152, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5863)
[0000][PE] mean and std.dev: (1431.21, 1411.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1343, 1932, 2928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6098)
[0000][PE] mean and std.dev: (1848.80, 1089.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 395.178 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518181, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 396, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4297)
[0000][PE] mean and std.dev: (824.17, 803.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.77, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1396, 2483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6043)
[0000][PE] mean and std.dev: (1745.00, 1311.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 395.250 CPU sec, 22.130 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518055, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 777, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (796.05, 674.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (494, 520, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5432)
[0000][PE] mean and std.dev: (675.56, 557.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7078)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1669, 3683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9083)
[0000][PE] mean and std.dev: (1895.62, 1197.16)
[0000][PE] low and high boundaries for proper pairs: (1, 11783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 390.914 CPU sec, 21.890 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518070, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 444, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5744)
[0000][PE] mean and std.dev: (1076.59, 1234.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.17, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (693, 1162, 3697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9705)
[0000][PE] mean and std.dev: (2142.10, 2026.09)
[0000][PE] low and high boundaries for proper pairs: (1, 12709)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 2018, 4502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11710)
[0000][PE] mean and std.dev: (2851.00, 2590.72)
[0000][PE] low and high boundaries for proper pairs: (1, 15314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 393.035 CPU sec, 21.975 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517951, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 418, 741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1543)
[0000][PE] mean and std.dev: (488.69, 233.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.75, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 395.179 CPU sec, 22.101 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517902, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 310, 459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 787)
[0000][PE] mean and std.dev: (321.92, 115.46)
[0000][PE] low and high boundaries for proper pairs: (1, 951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.78, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 395.032 CPU sec, 22.088 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518232, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 399, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (747.78, 728.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 388.607 CPU sec, 21.773 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518654, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 727, 2357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6293)
[0000][PE] mean and std.dev: (1193.23, 1074.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.72, 125.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1315, 2256, 3327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7351)
[0000][PE] mean and std.dev: (1981.11, 953.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 390.672 CPU sec, 21.835 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517782, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 439, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2722)
[0000][PE] mean and std.dev: (764.28, 735.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.73, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (497, 947, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3440)
[0000][PE] mean and std.dev: (1193.30, 863.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 392.837 CPU sec, 21.969 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517893, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 1097, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6090)
[0000][PE] mean and std.dev: (1331.11, 1240.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.45, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1820, 3197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7371)
[0000][PE] mean and std.dev: (1764.50, 1184.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 394.144 CPU sec, 22.108 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518404, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 621, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2964)
[0000][PE] mean and std.dev: (760.85, 663.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1521, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (1380.11, 842.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 391.547 CPU sec, 21.906 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518106, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 361, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3177)
[0000][PE] mean and std.dev: (571.32, 570.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1274, 1897, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4733)
[0000][PE] mean and std.dev: (1918.07, 999.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 392.351 CPU sec, 22.014 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518191, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 465, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2717)
[0000][PE] mean and std.dev: (463.50, 286.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1267, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5543)
[0000][PE] mean and std.dev: (1432.14, 900.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 396.033 CPU sec, 22.148 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517944, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 551, 3202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8946)
[0000][PE] mean and std.dev: (1806.71, 1933.14)
[0000][PE] low and high boundaries for proper pairs: (1, 11818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1264, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5082)
[0000][PE] mean and std.dev: (1638.64, 1300.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 391.750 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517692, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 471, 2782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7696)
[0000][PE] mean and std.dev: (1368.17, 1821.90)
[0000][PE] low and high boundaries for proper pairs: (1, 10153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1502, 2512, 4083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9245)
[0000][PE] mean and std.dev: (2540.90, 1553.93)
[0000][PE] low and high boundaries for proper pairs: (1, 11826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 395.246 CPU sec, 22.122 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518128, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 701, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2428)
[0000][PE] mean and std.dev: (707.33, 513.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1492, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (1368.77, 455.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 391.712 CPU sec, 21.968 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 518044, 8, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 392.365 CPU sec, 21.951 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518134, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 325, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (26, 636)
[0000][PE] mean and std.dev: (292.94, 119.34)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 392.429 CPU sec, 21.965 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517953, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 722, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3023)
[0000][PE] mean and std.dev: (726.40, 452.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.67, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1338, 1781, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4329)
[0000][PE] mean and std.dev: (1752.31, 867.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 394.033 CPU sec, 22.056 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518015, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 437, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2790)
[0000][PE] mean and std.dev: (587.56, 587.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 392.781 CPU sec, 22.080 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518402, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 416, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2414)
[0000][PE] mean and std.dev: (661.08, 587.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.26, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 391.161 CPU sec, 21.900 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517826, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 470, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3013)
[0000][PE] mean and std.dev: (635.68, 586.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1679, 3140, 3933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8441)
[0000][PE] mean and std.dev: (2764.75, 1341.55)
[0000][PE] low and high boundaries for proper pairs: (1, 10695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 393.242 CPU sec, 21.982 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518080, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (596, 1060, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2804)
[0000][PE] mean and std.dev: (1050.64, 710.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1843, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4517)
[0000][PE] mean and std.dev: (1620.62, 727.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 388.675 CPU sec, 21.763 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518291, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 321, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1892)
[0000][PE] mean and std.dev: (460.26, 434.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.65, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 393.407 CPU sec, 22.021 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518418, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 380, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3055)
[0000][PE] mean and std.dev: (694.12, 587.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1554, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4417)
[0000][PE] mean and std.dev: (1340.25, 423.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 392.529 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518335, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 876, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4697)
[0000][PE] mean and std.dev: (1252.65, 1126.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.80, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1328, 2361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5245)
[0000][PE] mean and std.dev: (1586.94, 1000.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 393.589 CPU sec, 22.024 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518421, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 338, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1895)
[0000][PE] mean and std.dev: (401.31, 326.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.83, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 391.292 CPU sec, 21.874 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517760, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 553, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2956)
[0000][PE] mean and std.dev: (768.00, 639.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1355, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (1125.80, 522.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 393.580 CPU sec, 22.041 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518051, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 895, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5429)
[0000][PE] mean and std.dev: (1144.93, 811.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.51, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 394.619 CPU sec, 22.152 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517752, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 550, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (968.20, 962.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 396.963 CPU sec, 22.205 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518120, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 533, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3173)
[0000][PE] mean and std.dev: (653.42, 519.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (504, 1230, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4161)
[0000][PE] mean and std.dev: (1230.00, 744.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 392.094 CPU sec, 21.953 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518087, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 398, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3319)
[0000][PE] mean and std.dev: (635.79, 749.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 393.357 CPU sec, 22.073 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518158, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 1036, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4023)
[0000][PE] mean and std.dev: (925.50, 772.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.18, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 395.509 CPU sec, 22.093 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518171, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 442, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (920.83, 899.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.81, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (184, 1480, 2905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8347)
[0000][PE] mean and std.dev: (1896.60, 1873.42)
[0000][PE] low and high boundaries for proper pairs: (1, 11068)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (607, 1280, 3682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9832)
[0000][PE] mean and std.dev: (1784.58, 1403.09)
[0000][PE] low and high boundaries for proper pairs: (1, 12907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 394.698 CPU sec, 22.090 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518364, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 665, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5191)
[0000][PE] mean and std.dev: (1032.38, 898.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.39, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 394.193 CPU sec, 22.071 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518481, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 410, 2903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8275)
[0000][PE] mean and std.dev: (1178.85, 1312.72)
[0000][PE] low and high boundaries for proper pairs: (1, 10961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 390.573 CPU sec, 21.843 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518046, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 432, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2683)
[0000][PE] mean and std.dev: (542.08, 426.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1453, 2668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6366)
[0000][PE] mean and std.dev: (1822.00, 1314.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 392.809 CPU sec, 21.976 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517648, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 432, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5252)
[0000][PE] mean and std.dev: (1108.58, 1206.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (477, 857, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3315)
[0000][PE] mean and std.dev: (969.70, 584.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 391.522 CPU sec, 21.884 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518118, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 344, 462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1000)
[0000][PE] mean and std.dev: (325.36, 192.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.83, 125.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 388.694 CPU sec, 21.720 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517844, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 351, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5014)
[0000][PE] mean and std.dev: (641.56, 743.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 392.939 CPU sec, 22.012 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518155, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 600, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3637)
[0000][PE] mean and std.dev: (811.29, 743.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.63, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (391, 1756, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6460)
[0000][PE] mean and std.dev: (1835.00, 1635.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 393.496 CPU sec, 21.981 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518367, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 561, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2419)
[0000][PE] mean and std.dev: (665.29, 568.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 392.618 CPU sec, 22.075 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518132, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 1020, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6618)
[0000][PE] mean and std.dev: (1221.21, 1267.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1982, 4084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10046)
[0000][PE] mean and std.dev: (3163.70, 2602.24)
[0000][PE] low and high boundaries for proper pairs: (1, 13573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 392.809 CPU sec, 21.965 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518277, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1095, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5160)
[0000][PE] mean and std.dev: (1179.29, 1061.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1868, 2871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6641)
[0000][PE] mean and std.dev: (2069.60, 1420.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 389.768 CPU sec, 21.821 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 517864, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 394.502 CPU sec, 22.077 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518168, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 441, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4580)
[0000][PE] mean and std.dev: (990.33, 1188.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 394.541 CPU sec, 22.066 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518058, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 461, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3055)
[0000][PE] mean and std.dev: (479.77, 383.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1351, 1585, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1485.22, 564.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 393.434 CPU sec, 22.011 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518252, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 1264, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3859)
[0000][PE] mean and std.dev: (786.18, 619.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.85, 125.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 392.339 CPU sec, 21.941 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517806, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 450, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6207)
[0000][PE] mean and std.dev: (871.25, 835.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.77, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 393.505 CPU sec, 22.007 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517717, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 939, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (991.65, 894.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 394.094 CPU sec, 22.076 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518367, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 390, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2581)
[0000][PE] mean and std.dev: (598.38, 591.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.36, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 394.752 CPU sec, 22.094 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517782, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 341, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2917)
[0000][PE] mean and std.dev: (553.94, 647.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 393.225 CPU sec, 22.029 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518108, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 834, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3157)
[0000][PE] mean and std.dev: (772.53, 590.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1865, 2980, 4251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9023)
[0000][PE] mean and std.dev: (3196.67, 2105.95)
[0000][PE] low and high boundaries for proper pairs: (1, 11620)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 393.951 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 518401, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 2084, 5243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13569)
[0000][PE] mean and std.dev: (3134.82, 2900.69)
[0000][PE] low and high boundaries for proper pairs: (1, 17732)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 394.294 CPU sec, 22.095 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517946, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 717, 2988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8284)
[0000][PE] mean and std.dev: (1512.38, 1393.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.85, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 396.119 CPU sec, 22.152 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518651, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 429, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4105)
[0000][PE] mean and std.dev: (624.76, 589.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 392.609 CPU sec, 21.982 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518221, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 491, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (763.20, 616.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 393.930 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518049, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 659, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2732)
[0000][PE] mean and std.dev: (902.43, 715.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 2028, 2987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6921)
[0000][PE] mean and std.dev: (2258.88, 1672.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 393.286 CPU sec, 22.016 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518352, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 483, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5302)
[0000][PE] mean and std.dev: (766.53, 717.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1612, 2647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6121)
[0000][PE] mean and std.dev: (1605.00, 1024.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 393.971 CPU sec, 22.021 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518064, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 690, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2896)
[0000][PE] mean and std.dev: (626.23, 462.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.66, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1485, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4577)
[0000][PE] mean and std.dev: (1430.36, 906.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 393.185 CPU sec, 21.965 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518080, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 295, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2736)
[0000][PE] mean and std.dev: (482.82, 507.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 390.978 CPU sec, 21.855 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518567, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 938, 3244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8906)
[0000][PE] mean and std.dev: (1801.32, 1782.29)
[0000][PE] low and high boundaries for proper pairs: (1, 11737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 391.276 CPU sec, 21.856 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517900, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 621, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (965.05, 753.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 394.456 CPU sec, 22.054 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518215, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 639, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4161)
[0000][PE] mean and std.dev: (994.46, 1031.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.90, 125.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (661, 1218, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3565)
[0000][PE] mean and std.dev: (1106.58, 479.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 392.646 CPU sec, 21.957 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518146, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 702, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (1030.00, 921.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 395.882 CPU sec, 22.181 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517941, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 378, 2656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7478)
[0000][PE] mean and std.dev: (1314.08, 1355.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.20, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 392.075 CPU sec, 21.931 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518180, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 381, 442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 814)
[0000][PE] mean and std.dev: (315.38, 94.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 392.091 CPU sec, 21.953 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518393, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 550, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5011)
[0000][PE] mean and std.dev: (868.50, 866.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.89, 125.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 396.653 CPU sec, 22.191 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518175, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (620, 1152, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2471)
[0000][PE] mean and std.dev: (903.92, 504.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1135, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5490)
[0000][PE] mean and std.dev: (1755.62, 1472.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 393.908 CPU sec, 22.011 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518099, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 569, 3075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8529)
[0000][PE] mean and std.dev: (1279.91, 1431.24)
[0000][PE] low and high boundaries for proper pairs: (1, 11256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1941, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4923)
[0000][PE] mean and std.dev: (1624.07, 826.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 392.396 CPU sec, 21.991 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517585, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 319, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3400)
[0000][PE] mean and std.dev: (639.33, 861.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.91, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1688, 3034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7448)
[0000][PE] mean and std.dev: (1824.69, 1479.00)
[0000][PE] low and high boundaries for proper pairs: (1, 9655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 398.668 CPU sec, 22.356 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 518195, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.69, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1228, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4244)
[0000][PE] mean and std.dev: (1097.11, 721.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5407)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 394.684 CPU sec, 22.067 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518025, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 382, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (748.12, 779.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 395.109 CPU sec, 22.098 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517870, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 1079, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (1030.72, 812.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1794, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4860)
[0000][PE] mean and std.dev: (1604.90, 1169.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 389.822 CPU sec, 21.791 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517862, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 561, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3400)
[0000][PE] mean and std.dev: (801.11, 607.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1452, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3122)
[0000][PE] mean and std.dev: (1282.22, 536.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 398.373 CPU sec, 22.302 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518116, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 819, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2268)
[0000][PE] mean and std.dev: (796.65, 489.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.69, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 394.250 CPU sec, 22.105 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517963, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 329, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5988)
[0000][PE] mean and std.dev: (902.46, 1006.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 395.287 CPU sec, 22.125 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518190, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 613, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3510)
[0000][PE] mean and std.dev: (963.16, 836.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.69, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1313, 1998, 3500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7874)
[0000][PE] mean and std.dev: (2457.83, 1644.55)
[0000][PE] low and high boundaries for proper pairs: (1, 10061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 392.620 CPU sec, 21.966 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517802, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 1097, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (925.07, 727.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 1271, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5653)
[0000][PE] mean and std.dev: (1438.60, 939.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 396.647 CPU sec, 22.196 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518026, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 444, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2048)
[0000][PE] mean and std.dev: (480.83, 419.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 396.391 CPU sec, 22.196 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518223, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 760, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6494)
[0000][PE] mean and std.dev: (1031.16, 1038.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.77, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 394.437 CPU sec, 22.057 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517938, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 308, 460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 994)
[0000][PE] mean and std.dev: (284.67, 182.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 394.531 CPU sec, 22.095 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518247, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 1051, 2717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7339)
[0000][PE] mean and std.dev: (1441.29, 1115.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1922, 3357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7899)
[0000][PE] mean and std.dev: (2638.55, 2296.30)
[0000][PE] low and high boundaries for proper pairs: (1, 11824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 391.272 CPU sec, 21.879 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518322, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 1166, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5641)
[0000][PE] mean and std.dev: (1432.73, 1357.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1276, 2259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5125)
[0000][PE] mean and std.dev: (1754.55, 1461.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 393.474 CPU sec, 22.029 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518000, 2, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.63, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 2212, 3026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6710)
[0000][PE] mean and std.dev: (2163.93, 1450.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8552)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 397.010 CPU sec, 22.195 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517796, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 557, 950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2336)
[0000][PE] mean and std.dev: (563.79, 500.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.76, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 1222, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3719)
[0000][PE] mean and std.dev: (1046.33, 578.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4765)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 392.219 CPU sec, 21.929 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517889, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 704, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2459)
[0000][PE] mean and std.dev: (562.23, 337.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.72, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 396.554 CPU sec, 22.217 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518230, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 515, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4880)
[0000][PE] mean and std.dev: (1024.45, 1229.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.47, 124.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 394.422 CPU sec, 22.041 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518068, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 751, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1138.06, 1007.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (414, 1535, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4092)
[0000][PE] mean and std.dev: (1023.00, 622.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 393.707 CPU sec, 22.000 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517848, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 405, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2088)
[0000][PE] mean and std.dev: (578.10, 536.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.69, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 393.179 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518080, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 713, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3090)
[0000][PE] mean and std.dev: (858.09, 746.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.34, 124.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 392.730 CPU sec, 21.954 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518139, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 413, 1035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2471)
[0000][PE] mean and std.dev: (503.92, 265.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 1499, 3206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8142)
[0000][PE] mean and std.dev: (2123.80, 1849.99)
[0000][PE] low and high boundaries for proper pairs: (1, 10610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 392.483 CPU sec, 21.949 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517702, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 633, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5238)
[0000][PE] mean and std.dev: (1106.78, 912.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.59, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1459, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (1555.30, 746.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 396.051 CPU sec, 22.169 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517928, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 445, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (660.17, 534.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.68, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 395.740 CPU sec, 22.146 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518506, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 603, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (867.75, 749.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 391.873 CPU sec, 21.935 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518454, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 419, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2975)
[0000][PE] mean and std.dev: (700.86, 591.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.69, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 394.162 CPU sec, 22.071 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518379, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 405, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2831)
[0000][PE] mean and std.dev: (495.12, 454.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1103, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (1375.60, 829.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 393.856 CPU sec, 22.043 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518273, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 469, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3192)
[0000][PE] mean and std.dev: (421.89, 330.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 395.879 CPU sec, 22.187 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518138, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 374, 619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1365)
[0000][PE] mean and std.dev: (385.40, 191.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.48, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1199, 2393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5167)
[0000][PE] mean and std.dev: (1632.21, 1218.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 393.526 CPU sec, 22.029 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518465, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 397, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2805)
[0000][PE] mean and std.dev: (710.35, 740.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1514, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4645)
[0000][PE] mean and std.dev: (1508.80, 712.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 391.537 CPU sec, 21.909 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517867, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (105, 280, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3915)
[0000][PE] mean and std.dev: (506.25, 556.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 125.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1909, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5593)
[0000][PE] mean and std.dev: (1492.33, 887.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 395.395 CPU sec, 22.141 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518183, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 512, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (726.78, 491.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 395.631 CPU sec, 22.119 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517454, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (619, 1032, 2925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7537)
[0000][PE] mean and std.dev: (1744.11, 1616.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.55, 125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (437, 1105, 2583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6875)
[0000][PE] mean and std.dev: (1420.00, 1002.38)
[0000][PE] low and high boundaries for proper pairs: (1, 9021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 399.471 CPU sec, 22.363 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517952, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 865, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7580)
[0000][PE] mean and std.dev: (1411.78, 1446.80)
[0000][PE] low and high boundaries for proper pairs: (1, 10017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.70, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1229, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4427)
[0000][PE] mean and std.dev: (1370.36, 1006.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 394.167 CPU sec, 22.065 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517950, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 538, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3117)
[0000][PE] mean and std.dev: (733.50, 541.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 395.116 CPU sec, 22.075 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517963, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 706, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5456)
[0000][PE] mean and std.dev: (1022.43, 858.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.27, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 396.442 CPU sec, 22.172 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518108, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 487, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3108)
[0000][PE] mean and std.dev: (742.00, 625.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1573, 3122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7606)
[0000][PE] mean and std.dev: (1604.67, 911.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 395.116 CPU sec, 22.088 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518275, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 403, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4553)
[0000][PE] mean and std.dev: (957.43, 1110.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.71, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1652, 3695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9269)
[0000][PE] mean and std.dev: (2544.00, 2387.81)
[0000][PE] low and high boundaries for proper pairs: (1, 12095)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 395.596 CPU sec, 22.177 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518384, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 370, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2888)
[0000][PE] mean and std.dev: (574.29, 624.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 395.169 CPU sec, 22.102 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518038, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (552, 1365, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5154)
[0000][PE] mean and std.dev: (1429.69, 1177.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 1168, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2945)
[0000][PE] mean and std.dev: (1221.30, 384.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 396.148 CPU sec, 22.160 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518217, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 461, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1343)
[0000][PE] mean and std.dev: (471.77, 311.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 1872, 3247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7255)
[0000][PE] mean and std.dev: (2210.79, 1483.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 394.060 CPU sec, 22.039 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518154, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (645, 1399, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4212)
[0000][PE] mean and std.dev: (1206.14, 792.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.63, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1354, 2227, 3420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7552)
[0000][PE] mean and std.dev: (2048.50, 1027.68)
[0000][PE] low and high boundaries for proper pairs: (1, 9618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 391.564 CPU sec, 21.916 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517706, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 423, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2683)
[0000][PE] mean and std.dev: (620.88, 522.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 396.659 CPU sec, 22.147 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518068, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 951, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5090)
[0000][PE] mean and std.dev: (1183.29, 976.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.83, 125.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1378, 1998, 2513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4783)
[0000][PE] mean and std.dev: (1871.44, 787.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 394.651 CPU sec, 22.070 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517868, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 942, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (756.07, 582.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 395.175 CPU sec, 22.089 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517874, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 586, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4042)
[0000][PE] mean and std.dev: (939.65, 823.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.60, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1351, 1562, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3760)
[0000][PE] mean and std.dev: (1372.78, 572.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 395.027 CPU sec, 22.113 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518004, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 371, 1100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2736)
[0000][PE] mean and std.dev: (599.61, 526.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.72, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 393.063 CPU sec, 22.005 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518666, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 325, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1044)
[0000][PE] mean and std.dev: (262.31, 132.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1131, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3883)
[0000][PE] mean and std.dev: (1303.12, 694.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 389.790 CPU sec, 21.769 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518263, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 416, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3809)
[0000][PE] mean and std.dev: (668.31, 538.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4974)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.98, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 394.928 CPU sec, 22.098 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517777, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 394, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4787)
[0000][PE] mean and std.dev: (690.08, 682.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.51, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 396.778 CPU sec, 22.198 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518347, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 568, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4390)
[0000][PE] mean and std.dev: (720.93, 588.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1337, 3694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9096)
[0000][PE] mean and std.dev: (2289.82, 2399.20)
[0000][PE] low and high boundaries for proper pairs: (1, 11887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 392.460 CPU sec, 21.905 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518666, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 349, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2468)
[0000][PE] mean and std.dev: (609.62, 614.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 391.586 CPU sec, 21.898 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518071, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 1011, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4674)
[0000][PE] mean and std.dev: (1212.25, 1082.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 393.223 CPU sec, 21.989 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517990, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (537, 1238, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6228)
[0000][PE] mean and std.dev: (1657.79, 1424.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 395.759 CPU sec, 22.141 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518313, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (623, 910, 4893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13433)
[0000][PE] mean and std.dev: (1783.69, 2011.06)
[0000][PE] low and high boundaries for proper pairs: (1, 17703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 393.427 CPU sec, 21.998 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517952, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 556, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (627.75, 423.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.71, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1559, 2217, 5362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12968)
[0000][PE] mean and std.dev: (2915.85, 2045.54)
[0000][PE] low and high boundaries for proper pairs: (1, 16771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 394.293 CPU sec, 22.041 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518144, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 378, 828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1782)
[0000][PE] mean and std.dev: (563.62, 316.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.51, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1380, 2914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6808)
[0000][PE] mean and std.dev: (2077.33, 1568.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 394.034 CPU sec, 22.035 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518516, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 490, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2651)
[0000][PE] mean and std.dev: (597.79, 557.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 394.173 CPU sec, 22.049 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518609, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 828, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3634)
[0000][PE] mean and std.dev: (779.67, 563.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 2206, 3488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8124)
[0000][PE] mean and std.dev: (2459.31, 1579.84)
[0000][PE] low and high boundaries for proper pairs: (1, 10442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 389.455 CPU sec, 21.803 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518516, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 786, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3717)
[0000][PE] mean and std.dev: (1017.00, 807.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 394.126 CPU sec, 22.074 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517853, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 472, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5607)
[0000][PE] mean and std.dev: (1203.06, 1438.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 394.630 CPU sec, 22.053 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518074, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 867, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5847)
[0000][PE] mean and std.dev: (1328.88, 1328.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.74, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 395.676 CPU sec, 22.138 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517958, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 507, 686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1500)
[0000][PE] mean and std.dev: (485.58, 343.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1165, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3242)
[0000][PE] mean and std.dev: (1008.73, 420.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 396.270 CPU sec, 22.245 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517923, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (414, 568, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (744.00, 537.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1079, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3660)
[0000][PE] mean and std.dev: (1255.93, 764.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 399.764 CPU sec, 22.358 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517930, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (529, 1663, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6148)
[0000][PE] mean and std.dev: (1315.70, 1039.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.69, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1259, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (1260.73, 627.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 399.964 CPU sec, 22.364 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517876, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 496, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2652)
[0000][PE] mean and std.dev: (548.00, 424.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1400, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4055)
[0000][PE] mean and std.dev: (1363.17, 835.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 397.451 CPU sec, 22.229 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518231, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 437, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (782.25, 726.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.48, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 396.215 CPU sec, 22.149 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518130, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 443, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2755)
[0000][PE] mean and std.dev: (457.38, 323.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.75, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (382, 798, 4778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13570)
[0000][PE] mean and std.dev: (2191.55, 2310.67)
[0000][PE] low and high boundaries for proper pairs: (1, 17966)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1385, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2644)
[0000][PE] mean and std.dev: (1124.00, 343.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 394.442 CPU sec, 22.044 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517984, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 445, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2746)
[0000][PE] mean and std.dev: (565.57, 525.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 394.203 CPU sec, 22.032 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517607, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 365, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2330)
[0000][PE] mean and std.dev: (554.78, 494.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (480, 1116, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3915)
[0000][PE] mean and std.dev: (967.56, 709.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5060)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 396.609 CPU sec, 22.201 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518388, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 348, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6259)
[0000][PE] mean and std.dev: (1194.64, 1321.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 390.782 CPU sec, 21.851 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517857, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 489, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (719.13, 678.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 2081, 3215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7365)
[0000][PE] mean and std.dev: (2174.60, 1300.94)
[0000][PE] low and high boundaries for proper pairs: (1, 9440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 394.675 CPU sec, 22.061 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518213, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 1089, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5649)
[0000][PE] mean and std.dev: (1509.07, 1540.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.63, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (443, 1133, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4694)
[0000][PE] mean and std.dev: (1342.30, 957.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 397.346 CPU sec, 22.198 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518039, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (458, 1213, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4367)
[0000][PE] mean and std.dev: (1311.50, 984.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.79, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1183, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2959)
[0000][PE] mean and std.dev: (1234.00, 617.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 394.789 CPU sec, 22.085 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517987, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 714, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4262)
[0000][PE] mean and std.dev: (1010.77, 814.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.86, 125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 393.861 CPU sec, 21.999 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517816, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 622, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2920)
[0000][PE] mean and std.dev: (755.00, 612.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 399.265 CPU sec, 22.336 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518125, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 940, 2822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7738)
[0000][PE] mean and std.dev: (1546.21, 1787.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 396.657 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517672, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 331, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3061)
[0000][PE] mean and std.dev: (624.00, 703.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1195, 1429, 3514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8152)
[0000][PE] mean and std.dev: (2493.36, 2169.25)
[0000][PE] low and high boundaries for proper pairs: (1, 11170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 394.148 CPU sec, 22.067 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518233, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 341, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2868)
[0000][PE] mean and std.dev: (581.21, 553.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.64, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1419, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4736)
[0000][PE] mean and std.dev: (1581.79, 941.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 394.095 CPU sec, 22.048 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518269, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 617, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2688)
[0000][PE] mean and std.dev: (577.75, 392.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 1221, 3480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9278)
[0000][PE] mean and std.dev: (2361.79, 2330.35)
[0000][PE] low and high boundaries for proper pairs: (1, 12177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 394.091 CPU sec, 22.031 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518372, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (769, 1611, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6022)
[0000][PE] mean and std.dev: (1660.87, 1092.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1659, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4578)
[0000][PE] mean and std.dev: (1490.00, 856.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 393.451 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518213, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 1092, 2585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6909)
[0000][PE] mean and std.dev: (1138.23, 1154.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1323, 1750, 4163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9843)
[0000][PE] mean and std.dev: (2833.58, 2821.81)
[0000][PE] low and high boundaries for proper pairs: (1, 14121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 394.109 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517910, 8, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 391.781 CPU sec, 21.897 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518251, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 406, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3394)
[0000][PE] mean and std.dev: (617.29, 637.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1551, 2640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6126)
[0000][PE] mean and std.dev: (1667.92, 920.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 395.212 CPU sec, 22.124 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518121, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 291, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4077)
[0000][PE] mean and std.dev: (622.13, 804.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.74, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1698, 2977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6867)
[0000][PE] mean and std.dev: (2037.20, 1534.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8812)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 395.660 CPU sec, 22.120 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517653, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 813, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5412)
[0000][PE] mean and std.dev: (1051.42, 953.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 397.232 CPU sec, 22.213 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518214, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 409, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4996)
[0000][PE] mean and std.dev: (896.05, 919.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 392.635 CPU sec, 21.954 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518159, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 386, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2695)
[0000][PE] mean and std.dev: (627.05, 494.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 392.658 CPU sec, 21.981 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518160, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 259, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 759)
[0000][PE] mean and std.dev: (279.00, 155.79)
[0000][PE] low and high boundaries for proper pairs: (1, 936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.24, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1508, 1652, 2417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (1454.50, 613.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 393.766 CPU sec, 21.996 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518053, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 806, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (899.00, 763.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1479, 2606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6232)
[0000][PE] mean and std.dev: (2016.20, 1717.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 396.131 CPU sec, 22.233 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518094, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 1057, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (965.88, 834.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1261, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3081)
[0000][PE] mean and std.dev: (1254.62, 494.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3814)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 392.028 CPU sec, 21.901 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517841, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 389, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (569.40, 376.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.47, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (658, 1615, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4003)
[0000][PE] mean and std.dev: (1440.80, 825.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 393.788 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518330, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 411, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5746)
[0000][PE] mean and std.dev: (813.44, 829.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.72, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 393.246 CPU sec, 21.992 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518108, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 447, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (770.20, 856.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 395.079 CPU sec, 22.107 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518384, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 427, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3489)
[0000][PE] mean and std.dev: (741.74, 864.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.91, 125.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1905, 2946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7060)
[0000][PE] mean and std.dev: (2093.09, 1675.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 395.344 CPU sec, 22.124 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517981, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 322, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4673)
[0000][PE] mean and std.dev: (1019.22, 1122.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 394.457 CPU sec, 22.072 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518363, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 869, 4350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12324)
[0000][PE] mean and std.dev: (2624.91, 3145.85)
[0000][PE] low and high boundaries for proper pairs: (1, 16311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.24, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 393.210 CPU sec, 21.998 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518397, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 1001, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6013)
[0000][PE] mean and std.dev: (1160.00, 1005.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.47, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1274, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4457)
[0000][PE] mean and std.dev: (1413.83, 720.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 394.053 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517886, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 441, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3125)
[0000][PE] mean and std.dev: (858.16, 841.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1165, 2976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7108)
[0000][PE] mean and std.dev: (1849.57, 1474.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 395.536 CPU sec, 22.151 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518420, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 429, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4749)
[0000][PE] mean and std.dev: (1014.69, 883.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.82, 125.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 392.448 CPU sec, 21.964 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517832, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 482, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4282)
[0000][PE] mean and std.dev: (963.32, 834.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.86, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1965, 3604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9320)
[0000][PE] mean and std.dev: (2308.21, 1557.53)
[0000][PE] low and high boundaries for proper pairs: (1, 12178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 395.195 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518721, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 795, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4838)
[0000][PE] mean and std.dev: (1270.47, 1030.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (646, 2195, 2655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6673)
[0000][PE] mean and std.dev: (1795.11, 1281.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 391.305 CPU sec, 21.886 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518167, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1922, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5499)
[0000][PE] mean and std.dev: (1495.10, 1019.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1384, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4972)
[0000][PE] mean and std.dev: (1735.19, 946.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 391.612 CPU sec, 21.884 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517875, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 337, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4022)
[0000][PE] mean and std.dev: (628.53, 634.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.63, 124.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1526, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5391)
[0000][PE] mean and std.dev: (1588.58, 1092.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 397.164 CPU sec, 22.231 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518370, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1513, 3429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9551)
[0000][PE] mean and std.dev: (2078.09, 1968.75)
[0000][PE] low and high boundaries for proper pairs: (1, 12612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1275, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3478)
[0000][PE] mean and std.dev: (1263.56, 605.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 394.139 CPU sec, 22.054 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518276, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 1154, 2507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6851)
[0000][PE] mean and std.dev: (1365.94, 1044.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.74, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 396.665 CPU sec, 22.220 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518262, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 989, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (1027.70, 914.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 395.238 CPU sec, 22.102 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518175, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 1005, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5109)
[0000][PE] mean and std.dev: (1427.00, 1309.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 392.874 CPU sec, 22.002 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518366, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 400, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1949)
[0000][PE] mean and std.dev: (495.00, 396.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.76, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 393.603 CPU sec, 21.993 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517901, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 845, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (926.53, 593.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 392.521 CPU sec, 21.952 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 518327, 4, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.14, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 393.504 CPU sec, 21.982 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517991, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 478, 1000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2346)
[0000][PE] mean and std.dev: (539.21, 336.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 397.186 CPU sec, 22.273 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518058, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 390, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (747.27, 766.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.92, 125.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 961, 2962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7476)
[0000][PE] mean and std.dev: (1780.92, 1615.06)
[0000][PE] low and high boundaries for proper pairs: (1, 9733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 391.368 CPU sec, 21.888 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518114, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 461, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5215)
[0000][PE] mean and std.dev: (864.55, 863.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 395.234 CPU sec, 22.119 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517945, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 334, 705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1609)
[0000][PE] mean and std.dev: (371.21, 214.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.71, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 394.388 CPU sec, 22.030 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518113, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 543, 2649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7347)
[0000][PE] mean and std.dev: (1252.59, 1128.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 388.598 CPU sec, 21.731 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518064, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 531, 895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1821)
[0000][PE] mean and std.dev: (550.31, 276.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1859, 3190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7244)
[0000][PE] mean and std.dev: (2130.36, 1387.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 395.707 CPU sec, 22.183 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518070, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 679, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4996)
[0000][PE] mean and std.dev: (951.71, 921.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1454, 2717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5755)
[0000][PE] mean and std.dev: (1823.46, 892.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 395.765 CPU sec, 22.123 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517947, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 549, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (743.79, 618.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (596, 1136, 4078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11042)
[0000][PE] mean and std.dev: (2220.00, 2056.93)
[0000][PE] low and high boundaries for proper pairs: (1, 14524)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1362, 1657, 3166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6774)
[0000][PE] mean and std.dev: (1943.45, 1094.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 397.949 CPU sec, 22.271 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518497, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 596, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3016)
[0000][PE] mean and std.dev: (763.22, 699.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 392.870 CPU sec, 21.999 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518089, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 526, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3626)
[0000][PE] mean and std.dev: (829.38, 765.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 398.003 CPU sec, 22.327 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518217, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 528, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3123)
[0000][PE] mean and std.dev: (538.40, 342.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 394.511 CPU sec, 22.057 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517875, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 792, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2917)
[0000][PE] mean and std.dev: (740.87, 669.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 396.011 CPU sec, 22.140 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517910, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 572, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6427)
[0000][PE] mean and std.dev: (1122.69, 982.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.62, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 397.107 CPU sec, 22.217 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518050, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 721, 2319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6275)
[0000][PE] mean and std.dev: (1075.81, 1177.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 394.444 CPU sec, 22.049 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518041, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 370, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4336)
[0000][PE] mean and std.dev: (786.94, 1086.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.16, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (591, 1188, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (1160.18, 592.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 394.296 CPU sec, 22.050 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518103, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 643, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3057)
[0000][PE] mean and std.dev: (521.00, 360.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.25, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1358, 1963, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3989)
[0000][PE] mean and std.dev: (1700.30, 638.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 394.395 CPU sec, 22.053 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517468, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 786, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (723.62, 503.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 396.797 CPU sec, 22.192 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518203, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 1005, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4730)
[0000][PE] mean and std.dev: (1038.00, 852.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1354, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3733)
[0000][PE] mean and std.dev: (1275.36, 777.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 393.510 CPU sec, 22.043 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517424, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 662, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6262)
[0000][PE] mean and std.dev: (1138.73, 1064.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (493, 912, 2196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5602)
[0000][PE] mean and std.dev: (1136.08, 866.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 393.570 CPU sec, 22.023 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517636, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 1280, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4345)
[0000][PE] mean and std.dev: (1147.35, 957.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.45, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 845, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6480)
[0000][PE] mean and std.dev: (1240.80, 1210.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 392.810 CPU sec, 21.983 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518181, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 375, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3080)
[0000][PE] mean and std.dev: (667.11, 668.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1368, 1418, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3840)
[0000][PE] mean and std.dev: (1695.83, 955.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 393.655 CPU sec, 22.040 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517849, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 421, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4012)
[0000][PE] mean and std.dev: (817.17, 891.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1421, 1623, 2666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5156)
[0000][PE] mean and std.dev: (1968.00, 1143.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6542)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 397.557 CPU sec, 22.207 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518152, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 302, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2773)
[0000][PE] mean and std.dev: (568.82, 560.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 390.989 CPU sec, 21.845 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518299, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 1032, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5373)
[0000][PE] mean and std.dev: (980.89, 898.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.22, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1745, 4733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12235)
[0000][PE] mean and std.dev: (2515.30, 1998.26)
[0000][PE] low and high boundaries for proper pairs: (1, 15986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 394.374 CPU sec, 22.123 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518068, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 458, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (686.31, 597.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1633, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4322)
[0000][PE] mean and std.dev: (1599.40, 602.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 394.773 CPU sec, 22.121 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517432, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 746, 2591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6959)
[0000][PE] mean and std.dev: (1430.06, 1600.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 395.179 CPU sec, 22.145 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518287, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 340, 476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1046)
[0000][PE] mean and std.dev: (290.24, 131.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1349, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3477)
[0000][PE] mean and std.dev: (1253.30, 598.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 393.571 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518154, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 396, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4628)
[0000][PE] mean and std.dev: (747.33, 746.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 394.448 CPU sec, 22.074 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518054, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 559, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3983)
[0000][PE] mean and std.dev: (763.75, 634.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 396.528 CPU sec, 22.193 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518376, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (587, 1359, 3428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9110)
[0000][PE] mean and std.dev: (1501.17, 1288.27)
[0000][PE] low and high boundaries for proper pairs: (1, 11951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 393.771 CPU sec, 22.026 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517923, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 440, 770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1760)
[0000][PE] mean and std.dev: (548.40, 389.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.46, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1563, 2470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5062)
[0000][PE] mean and std.dev: (1592.08, 718.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 392.303 CPU sec, 21.955 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517700, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 457, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (757.00, 576.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1611, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4215)
[0000][PE] mean and std.dev: (1481.64, 746.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 397.927 CPU sec, 22.290 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518225, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 475, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3610)
[0000][PE] mean and std.dev: (645.58, 548.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 392.357 CPU sec, 21.952 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517618, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 562, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2689)
[0000][PE] mean and std.dev: (600.40, 457.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (476, 1156, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3866)
[0000][PE] mean and std.dev: (1241.43, 860.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 395.409 CPU sec, 22.111 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518048, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 529, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2246)
[0000][PE] mean and std.dev: (729.33, 579.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 2415, 3559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8591)
[0000][PE] mean and std.dev: (2100.56, 1243.05)
[0000][PE] low and high boundaries for proper pairs: (1, 11107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 395.869 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518067, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 436, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2721)
[0000][PE] mean and std.dev: (641.00, 513.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 395.835 CPU sec, 22.132 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517645, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 696, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3208)
[0000][PE] mean and std.dev: (828.24, 675.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.25, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (521, 950, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2282)
[0000][PE] mean and std.dev: (818.70, 337.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 394.500 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517807, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 353, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4569)
[0000][PE] mean and std.dev: (973.33, 968.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.80, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1419, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4707)
[0000][PE] mean and std.dev: (1368.70, 663.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 395.625 CPU sec, 22.146 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518226, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 341, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (841.65, 926.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1373, 1777, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 3242)
[0000][PE] mean and std.dev: (1793.20, 571.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 394.898 CPU sec, 22.098 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 517909, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1319, 1493, 2474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4784)
[0000][PE] mean and std.dev: (1580.92, 814.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5939)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 395.735 CPU sec, 22.149 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518509, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 566, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2878)
[0000][PE] mean and std.dev: (683.00, 433.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1281, 2378, 3820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8898)
[0000][PE] mean and std.dev: (2359.27, 1368.00)
[0000][PE] low and high boundaries for proper pairs: (1, 11437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 395.866 CPU sec, 22.170 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518011, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 835, 2770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7560)
[0000][PE] mean and std.dev: (1253.00, 1333.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.16, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (619, 1687, 4539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12379)
[0000][PE] mean and std.dev: (2738.70, 2721.54)
[0000][PE] low and high boundaries for proper pairs: (1, 16299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 396.264 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518399, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 2100, 2969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8015)
[0000][PE] mean and std.dev: (1541.80, 1170.14)
[0000][PE] low and high boundaries for proper pairs: (1, 10538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.76, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 395.750 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517599, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 994, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2943)
[0000][PE] mean and std.dev: (878.07, 661.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1943, 2836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7088)
[0000][PE] mean and std.dev: (1899.06, 1407.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 397.123 CPU sec, 22.204 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517492, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 357, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2117)
[0000][PE] mean and std.dev: (507.20, 430.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 397.297 CPU sec, 22.269 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517791, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 992, 2653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7201)
[0000][PE] mean and std.dev: (1774.84, 1954.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.23, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1810, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4141)
[0000][PE] mean and std.dev: (1623.92, 728.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 395.323 CPU sec, 22.141 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517736, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 864, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5296)
[0000][PE] mean and std.dev: (1109.92, 1161.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.29, 124.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1261, 2253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4949)
[0000][PE] mean and std.dev: (1437.43, 847.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 393.426 CPU sec, 21.995 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518059, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 446, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5067)
[0000][PE] mean and std.dev: (1104.82, 1261.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.61, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 396.057 CPU sec, 22.151 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517776, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 505, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2191)
[0000][PE] mean and std.dev: (671.57, 409.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1038, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4717)
[0000][PE] mean and std.dev: (1329.80, 1001.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 397.254 CPU sec, 22.222 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518132, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 638, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (781.93, 712.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 397.091 CPU sec, 22.268 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518063, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 616, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (791.64, 614.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 397.371 CPU sec, 22.254 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518037, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (493, 592, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2248)
[0000][PE] mean and std.dev: (675.62, 361.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 394.639 CPU sec, 22.077 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518133, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 619, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1176.00, 1083.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.48, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (637, 1186, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3895)
[0000][PE] mean and std.dev: (1016.11, 562.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 397.127 CPU sec, 22.234 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517526, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (546, 881, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3090)
[0000][PE] mean and std.dev: (854.43, 574.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.16, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 395.975 CPU sec, 22.115 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 517754, 7, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.09, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 396.844 CPU sec, 22.212 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518062, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 406, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2317)
[0000][PE] mean and std.dev: (574.94, 469.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.63, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1676, 2851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6239)
[0000][PE] mean and std.dev: (1721.08, 991.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 393.562 CPU sec, 22.029 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518205, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 426, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3542)
[0000][PE] mean and std.dev: (875.17, 661.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 394.493 CPU sec, 22.076 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517599, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 573, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (773.31, 612.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.62, 125.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 393.795 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518220, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 495, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4170)
[0000][PE] mean and std.dev: (735.00, 651.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 394.975 CPU sec, 22.100 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517999, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (653, 998, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3695)
[0000][PE] mean and std.dev: (1133.12, 736.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1569, 2536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5766)
[0000][PE] mean and std.dev: (1716.92, 970.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 394.446 CPU sec, 22.065 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518074, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 836, 3509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9943)
[0000][PE] mean and std.dev: (1708.38, 1644.67)
[0000][PE] low and high boundaries for proper pairs: (1, 13160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.66, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 394.073 CPU sec, 22.071 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517803, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 961, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5582)
[0000][PE] mean and std.dev: (1164.53, 826.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 397.075 CPU sec, 22.197 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518304, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 342, 5585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16191)
[0000][PE] mean and std.dev: (2042.08, 3003.87)
[0000][PE] low and high boundaries for proper pairs: (1, 21494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.64, 125.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1507, 2150, 3011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6019)
[0000][PE] mean and std.dev: (1804.60, 714.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 397.460 CPU sec, 22.278 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518429, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 757, 2820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7798)
[0000][PE] mean and std.dev: (1206.06, 1162.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1427, 2820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7028)
[0000][PE] mean and std.dev: (1774.93, 1405.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 394.647 CPU sec, 22.068 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518239, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 476, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4707)
[0000][PE] mean and std.dev: (935.82, 835.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 394.032 CPU sec, 22.071 real sec
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517864, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 884, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2921)
[0000][PE] mean and std.dev: (868.80, 766.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 394.254 CPU sec, 22.076 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518118, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 584, 3117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8795)
[0000][PE] mean and std.dev: (1987.20, 2380.33)
[0000][PE] low and high boundaries for proper pairs: (1, 11634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.75, 125.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 395.415 CPU sec, 22.127 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518321, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 1149, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5131)
[0000][PE] mean and std.dev: (1169.18, 1132.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 395.613 CPU sec, 22.085 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518097, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 714, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (1041.35, 934.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.87, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 394.183 CPU sec, 22.110 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517851, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 346, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5739)
[0000][PE] mean and std.dev: (1082.00, 1510.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.67, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (576, 1680, 3774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10170)
[0000][PE] mean and std.dev: (1983.92, 1621.25)
[0000][PE] low and high boundaries for proper pairs: (1, 13368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 394.253 CPU sec, 22.036 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517819, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 942, 2118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5756)
[0000][PE] mean and std.dev: (1313.24, 1253.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 921, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (1044.00, 538.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 394.829 CPU sec, 22.110 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518146, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 402, 705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1447)
[0000][PE] mean and std.dev: (440.38, 288.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.42, 124.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 396.665 CPU sec, 22.168 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517900, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 534, 791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1689)
[0000][PE] mean and std.dev: (524.80, 266.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (573, 1238, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2904)
[0000][PE] mean and std.dev: (1029.90, 417.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 395.297 CPU sec, 22.092 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518130, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 620, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (969.85, 1026.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.55, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1485, 1760, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (331, 3216)
[0000][PE] mean and std.dev: (1542.64, 577.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 394.865 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518263, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 1714, 4112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11468)
[0000][PE] mean and std.dev: (2309.33, 2218.29)
[0000][PE] low and high boundaries for proper pairs: (1, 15146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 397.866 CPU sec, 22.259 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518008, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 518, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3714)
[0000][PE] mean and std.dev: (778.19, 856.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1542, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4823)
[0000][PE] mean and std.dev: (1708.76, 925.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 394.526 CPU sec, 22.025 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517924, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 1371, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (1282.91, 914.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1921, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (1839.33, 917.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 395.221 CPU sec, 22.115 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518319, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 511, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4043)
[0000][PE] mean and std.dev: (701.13, 592.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.78, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 395.222 CPU sec, 22.109 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517479, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 552, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5529)
[0000][PE] mean and std.dev: (1115.94, 1053.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.92, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1334, 2773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6305)
[0000][PE] mean and std.dev: (1844.86, 1479.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 399.415 CPU sec, 22.417 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517969, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 674, 831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2189)
[0000][PE] mean and std.dev: (501.83, 399.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1560, 3262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7684)
[0000][PE] mean and std.dev: (2001.73, 1832.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 396.823 CPU sec, 22.220 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518077, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 524, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (851.25, 803.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1430, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (1549.43, 649.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 395.117 CPU sec, 22.118 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517826, 12, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 758, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4900)
[0000][PE] mean and std.dev: (904.89, 842.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (510, 1016, 3746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10218)
[0000][PE] mean and std.dev: (1522.00, 1470.36)
[0000][PE] low and high boundaries for proper pairs: (1, 13454)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1323, 1498, 3676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8382)
[0000][PE] mean and std.dev: (2621.45, 2175.52)
[0000][PE] low and high boundaries for proper pairs: (1, 11324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 397.243 CPU sec, 22.204 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517725, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 539, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3651)
[0000][PE] mean and std.dev: (701.92, 523.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1399, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4984)
[0000][PE] mean and std.dev: (1406.27, 695.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 398.353 CPU sec, 22.307 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518021, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 342, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1608)
[0000][PE] mean and std.dev: (336.47, 216.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1089, 3257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7723)
[0000][PE] mean and std.dev: (2082.40, 1729.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 396.823 CPU sec, 22.248 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518206, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 472, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5696)
[0000][PE] mean and std.dev: (837.07, 1046.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 397.364 CPU sec, 22.296 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518390, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 350, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2862)
[0000][PE] mean and std.dev: (716.77, 742.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 396.813 CPU sec, 22.198 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517989, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 452, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2343)
[0000][PE] mean and std.dev: (568.55, 442.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1386, 3012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7632)
[0000][PE] mean and std.dev: (1633.64, 1186.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 394.821 CPU sec, 22.072 real sec
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517621, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 606, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5465)
[0000][PE] mean and std.dev: (973.41, 943.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1811, 2308, 3448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6722)
[0000][PE] mean and std.dev: (2511.80, 1138.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 395.879 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517556, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 609, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5048)
[0000][PE] mean and std.dev: (1123.15, 1238.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1674, 3001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7161)
[0000][PE] mean and std.dev: (1735.92, 1066.43)
[0000][PE] low and high boundaries for proper pairs: (1, 9241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 398.585 CPU sec, 22.325 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000050 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 517742, 12, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (144, 1044, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6540)
[0000][PE] mean and std.dev: (1450.75, 1786.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8672)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 398.030 CPU sec, 22.258 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517997, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 413, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3223)
[0000][PE] mean and std.dev: (699.20, 529.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1110, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2576)
[0000][PE] mean and std.dev: (978.88, 268.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 392.824 CPU sec, 21.956 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517830, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 751, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3574)
[0000][PE] mean and std.dev: (881.96, 773.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.85, 125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 394.806 CPU sec, 22.065 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518480, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 527, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3839)
[0000][PE] mean and std.dev: (1009.87, 991.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 2129, 4945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12689)
[0000][PE] mean and std.dev: (2586.36, 1931.43)
[0000][PE] low and high boundaries for proper pairs: (1, 16561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 391.218 CPU sec, 21.890 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518024, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 571, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2295)
[0000][PE] mean and std.dev: (602.62, 333.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.81, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1927, 3123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7483)
[0000][PE] mean and std.dev: (2299.42, 1944.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 391.385 CPU sec, 21.883 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518713, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 624, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2974)
[0000][PE] mean and std.dev: (685.15, 606.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1276, 1573, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4171)
[0000][PE] mean and std.dev: (1591.29, 907.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 388.885 CPU sec, 21.780 real sec
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518419, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 975, 3257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8953)
[0000][PE] mean and std.dev: (1971.31, 2266.38)
[0000][PE] low and high boundaries for proper pairs: (1, 11801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1438, 3815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9687)
[0000][PE] mean and std.dev: (2121.25, 1935.63)
[0000][PE] low and high boundaries for proper pairs: (1, 12623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 392.713 CPU sec, 21.957 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517944, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 492, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2243)
[0000][PE] mean and std.dev: (662.13, 532.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1727, 3946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9854)
[0000][PE] mean and std.dev: (2343.54, 2136.27)
[0000][PE] low and high boundaries for proper pairs: (1, 12808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 390.794 CPU sec, 21.888 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518245, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 344, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2762)
[0000][PE] mean and std.dev: (444.73, 347.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 389.514 CPU sec, 21.806 real sec
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518757, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 340, 946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2350)
[0000][PE] mean and std.dev: (524.33, 422.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.72, 125.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 389.809 CPU sec, 21.854 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518286, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 456, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4977)
[0000][PE] mean and std.dev: (1086.75, 1149.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1221, 1836, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3678)
[0000][PE] mean and std.dev: (1509.78, 611.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 394.132 CPU sec, 22.030 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518153, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 438, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3766)
[0000][PE] mean and std.dev: (818.59, 771.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.94, 125.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1500, 3060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6978)
[0000][PE] mean and std.dev: (1631.22, 882.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 393.476 CPU sec, 22.010 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517835, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 443, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5827)
[0000][PE] mean and std.dev: (1078.82, 1061.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 395.378 CPU sec, 22.077 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517983, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 389, 608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1434)
[0000][PE] mean and std.dev: (315.27, 152.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 394.577 CPU sec, 22.067 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517976, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 586, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (828.71, 709.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.26, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 391.549 CPU sec, 21.875 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518128, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 447, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5875)
[0000][PE] mean and std.dev: (1117.73, 1210.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.89, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1421, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1386.17, 783.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 391.982 CPU sec, 21.931 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518018, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 387, 802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1748)
[0000][PE] mean and std.dev: (496.38, 300.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.76, 125.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1260, 1541, 2615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5325)
[0000][PE] mean and std.dev: (1669.42, 990.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 397.147 CPU sec, 22.260 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517954, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 742, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (686.36, 415.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.08, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 389.121 CPU sec, 21.765 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518167, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 747, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2875)
[0000][PE] mean and std.dev: (827.14, 620.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.71, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1151, 2053, 3926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9476)
[0000][PE] mean and std.dev: (2373.09, 2171.43)
[0000][PE] low and high boundaries for proper pairs: (1, 12251)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (514, 1258, 3103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8281)
[0000][PE] mean and std.dev: (2030.93, 1914.85)
[0000][PE] low and high boundaries for proper pairs: (1, 10870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 394.960 CPU sec, 22.092 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517340, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 1277, 3709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10319)
[0000][PE] mean and std.dev: (1973.37, 1962.12)
[0000][PE] low and high boundaries for proper pairs: (1, 13624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.73, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1326, 1642, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (1704.40, 467.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 397.093 CPU sec, 22.215 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518006, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 769, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5312)
[0000][PE] mean and std.dev: (1099.57, 965.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.40, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 393.068 CPU sec, 21.950 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517898, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 323, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5650)
[0000][PE] mean and std.dev: (1126.33, 1140.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.85, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 391.426 CPU sec, 21.995 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518296, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 871, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (1145.71, 1089.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 393.642 CPU sec, 22.010 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518007, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 649, 5254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15074)
[0000][PE] mean and std.dev: (1698.62, 2155.55)
[0000][PE] low and high boundaries for proper pairs: (1, 19984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.09, 124.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 394.215 CPU sec, 22.045 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518099, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (493, 1431, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4354)
[0000][PE] mean and std.dev: (1355.47, 795.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 394.533 CPU sec, 22.070 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518346, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 923, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6881)
[0000][PE] mean and std.dev: (1444.46, 1436.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.80, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1391, 2084, 3950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9068)
[0000][PE] mean and std.dev: (2403.91, 1372.66)
[0000][PE] low and high boundaries for proper pairs: (1, 11627)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 393.177 CPU sec, 21.983 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518252, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 1001, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5420)
[0000][PE] mean and std.dev: (1033.55, 1300.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.70, 125.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (452, 833, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6314)
[0000][PE] mean and std.dev: (1451.82, 1423.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8268)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1171, 1364, 2420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4918)
[0000][PE] mean and std.dev: (1589.36, 897.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 394.865 CPU sec, 22.074 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517548, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 529, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5064)
[0000][PE] mean and std.dev: (1197.69, 1413.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1295, 1489, 2998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6404)
[0000][PE] mean and std.dev: (1729.85, 913.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 397.190 CPU sec, 22.216 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518054, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 371, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1177)
[0000][PE] mean and std.dev: (379.00, 264.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.77, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 392.071 CPU sec, 21.965 real sec
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517969, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 340, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 723)
[0000][PE] mean and std.dev: (289.69, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1059, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4499)
[0000][PE] mean and std.dev: (1436.33, 1064.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 391.567 CPU sec, 21.888 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518408, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 466, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2791)
[0000][PE] mean and std.dev: (485.25, 280.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 393.095 CPU sec, 22.044 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517864, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 526, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3382)
[0000][PE] mean and std.dev: (640.76, 465.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.63, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 393.806 CPU sec, 22.020 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517665, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 826, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3953)
[0000][PE] mean and std.dev: (960.25, 801.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1374, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (1364.08, 721.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 393.723 CPU sec, 22.057 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518138, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 503, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2887)
[0000][PE] mean and std.dev: (658.12, 573.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 393.015 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518537, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 587, 2999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8339)
[0000][PE] mean and std.dev: (1721.33, 1962.85)
[0000][PE] low and high boundaries for proper pairs: (1, 11009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1321, 2477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5609)
[0000][PE] mean and std.dev: (1975.60, 1500.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 390.141 CPU sec, 21.835 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518322, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (549, 743, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4614)
[0000][PE] mean and std.dev: (1064.87, 728.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1024, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2616)
[0000][PE] mean and std.dev: (1016.89, 440.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 396.406 CPU sec, 22.150 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518441, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 762, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5108)
[0000][PE] mean and std.dev: (1319.62, 1439.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 390.401 CPU sec, 21.869 real sec
[0000] Calling mem_process_seqs.., task: 1019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518017, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (773, 1253, 2744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6686)
[0000][PE] mean and std.dev: (1334.50, 1070.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.74, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 392.409 CPU sec, 21.961 real sec
[0000] Calling mem_process_seqs.., task: 1020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518294, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 505, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3675)
[0000][PE] mean and std.dev: (862.47, 835.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.66, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1220, 2685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5927)
[0000][PE] mean and std.dev: (1869.33, 1466.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 393.651 CPU sec, 21.990 real sec
[0000] Calling mem_process_seqs.., task: 1021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518159, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 491, 2767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7573)
[0000][PE] mean and std.dev: (1474.08, 1943.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.71, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1534, 2415, 4543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10561)
[0000][PE] mean and std.dev: (2806.73, 2003.27)
[0000][PE] low and high boundaries for proper pairs: (1, 13570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 390.043 CPU sec, 21.789 real sec
[0000] Calling mem_process_seqs.., task: 1022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 518187, 7, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 392.614 CPU sec, 21.977 real sec
[0000] Calling mem_process_seqs.., task: 1023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518301, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 892, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4925)
[0000][PE] mean and std.dev: (998.13, 730.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 391.105 CPU sec, 21.882 real sec
[0000] Calling mem_process_seqs.., task: 1024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518074, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 529, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3835)
[0000][PE] mean and std.dev: (624.23, 459.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.77, 124.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 394.334 CPU sec, 22.039 real sec
[0000] Calling mem_process_seqs.., task: 1025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518706, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 435, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3778)
[0000][PE] mean and std.dev: (740.93, 732.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 391.304 CPU sec, 21.891 real sec
[0000] Calling mem_process_seqs.., task: 1026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517824, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 455, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3977)
[0000][PE] mean and std.dev: (575.31, 499.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.64, 125.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1261, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3013)
[0000][PE] mean and std.dev: (1112.18, 688.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 393.390 CPU sec, 21.987 real sec
[0000] Calling mem_process_seqs.., task: 1027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518116, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 328, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (729.35, 867.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.63, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 394.783 CPU sec, 22.105 real sec
[0000] Calling mem_process_seqs.., task: 1028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518724, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 722, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4408)
[0000][PE] mean and std.dev: (864.75, 684.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.73, 125.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 391.035 CPU sec, 21.883 real sec
[0000] Calling mem_process_seqs.., task: 1029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517945, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 547, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2484)
[0000][PE] mean and std.dev: (631.89, 492.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.63, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 395.815 CPU sec, 22.147 real sec
[0000] Calling mem_process_seqs.., task: 1030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518032, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 562, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3618)
[0000][PE] mean and std.dev: (942.79, 931.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1245, 1862, 2443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4839)
[0000][PE] mean and std.dev: (1808.77, 775.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 394.004 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 1031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518011, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 467, 2436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6676)
[0000][PE] mean and std.dev: (1440.54, 1763.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.16, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1619, 2613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6113)
[0000][PE] mean and std.dev: (1739.00, 1288.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 392.567 CPU sec, 21.955 real sec
[0000] Calling mem_process_seqs.., task: 1032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518142, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 415, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4468)
[0000][PE] mean and std.dev: (597.79, 628.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 392.572 CPU sec, 21.934 real sec
[0000] Calling mem_process_seqs.., task: 1033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518418, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 437, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3501)
[0000][PE] mean and std.dev: (900.88, 806.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1536, 1826, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (184, 3564)
[0000][PE] mean and std.dev: (1827.60, 528.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 393.290 CPU sec, 22.018 real sec
[0000] Calling mem_process_seqs.., task: 1034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518144, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 412, 557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1089)
[0000][PE] mean and std.dev: (378.53, 205.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.44, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1322, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 2680)
[0000][PE] mean and std.dev: (1269.33, 465.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 394.863 CPU sec, 22.071 real sec
[0000] Calling mem_process_seqs.., task: 1035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518380, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 333, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5618)
[0000][PE] mean and std.dev: (915.92, 1091.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 393.898 CPU sec, 22.048 real sec
[0000] Calling mem_process_seqs.., task: 1036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517801, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 1276, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5722)
[0000][PE] mean and std.dev: (1050.19, 918.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.13, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 395.309 CPU sec, 22.114 real sec
[0000] Calling mem_process_seqs.., task: 1037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517492, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 1028, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3412)
[0000][PE] mean and std.dev: (835.62, 513.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 395.325 CPU sec, 22.113 real sec
[0000] Calling mem_process_seqs.., task: 1038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518317, 6, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 392.588 CPU sec, 21.971 real sec
[0000] Calling mem_process_seqs.., task: 1039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518664, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 620, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4074)
[0000][PE] mean and std.dev: (906.18, 929.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 2018, 3130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7408)
[0000][PE] mean and std.dev: (1825.11, 964.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 387.430 CPU sec, 21.695 real sec
[0000] Calling mem_process_seqs.., task: 1040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518104, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 615, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6126)
[0000][PE] mean and std.dev: (1001.54, 1127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.79, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1377, 1738, 2583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4995)
[0000][PE] mean and std.dev: (1954.00, 1126.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 395.297 CPU sec, 22.104 real sec
[0000] Calling mem_process_seqs.., task: 1041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518410, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 500, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4612)
[0000][PE] mean and std.dev: (939.45, 956.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.00, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1828, 3156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7218)
[0000][PE] mean and std.dev: (2184.62, 1459.57)
[0000][PE] low and high boundaries for proper pairs: (1, 9249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 393.767 CPU sec, 22.002 real sec
[0000] Calling mem_process_seqs.., task: 1042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517942, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 1039, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5181)
[0000][PE] mean and std.dev: (1279.42, 1193.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 395.500 CPU sec, 22.134 real sec
[0000] Calling mem_process_seqs.., task: 1043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517754, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 969, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4619)
[0000][PE] mean and std.dev: (942.08, 875.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1664, 1750, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (160, 3920)
[0000][PE] mean and std.dev: (1671.22, 496.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 396.623 CPU sec, 22.174 real sec
[0000] Calling mem_process_seqs.., task: 1044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518067, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 624, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3783)
[0000][PE] mean and std.dev: (854.38, 760.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1551, 3106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7570)
[0000][PE] mean and std.dev: (2112.46, 1784.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 399.317 CPU sec, 22.418 real sec
[0000] Calling mem_process_seqs.., task: 1045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518112, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 1064, 2299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6357)
[0000][PE] mean and std.dev: (1135.38, 1013.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 395.277 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 1046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518168, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 319, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (594.44, 768.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 398.638 CPU sec, 22.335 real sec
[0000] Calling mem_process_seqs.., task: 1047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517762, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 363, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2570)
[0000][PE] mean and std.dev: (504.27, 403.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 396.135 CPU sec, 22.152 real sec
[0000] Calling mem_process_seqs.., task: 1048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517672, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 778, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (611.69, 415.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 395.357 CPU sec, 22.081 real sec
[0000] Calling mem_process_seqs.., task: 1049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517801, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (488, 1179, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3908)
[0000][PE] mean and std.dev: (1147.86, 790.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1280, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2907)
[0000][PE] mean and std.dev: (1377.69, 646.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 394.476 CPU sec, 22.101 real sec
[0000] Calling mem_process_seqs.., task: 1050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518257, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 669, 863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2281)
[0000][PE] mean and std.dev: (538.30, 348.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.76, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1553, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4407)
[0000][PE] mean and std.dev: (1482.27, 580.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 392.694 CPU sec, 21.962 real sec
[0000] Calling mem_process_seqs.., task: 1051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518138, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 332, 533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1153)
[0000][PE] mean and std.dev: (367.47, 223.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.25, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 394.131 CPU sec, 22.093 real sec
[0000] Calling mem_process_seqs.., task: 1052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518212, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 329, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5391)
[0000][PE] mean and std.dev: (661.58, 760.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 2248, 3789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9097)
[0000][PE] mean and std.dev: (2062.22, 1238.20)
[0000][PE] low and high boundaries for proper pairs: (1, 11751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 392.655 CPU sec, 21.988 real sec
[0000] Calling mem_process_seqs.., task: 1053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517859, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 490, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2307)
[0000][PE] mean and std.dev: (606.94, 409.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 395.712 CPU sec, 22.094 real sec
[0000] Calling mem_process_seqs.., task: 1054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518191, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (470, 931, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4118)
[0000][PE] mean and std.dev: (1020.65, 719.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1264, 1913, 4125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9847)
[0000][PE] mean and std.dev: (2736.31, 2372.68)
[0000][PE] low and high boundaries for proper pairs: (1, 12708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 392.955 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 1055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518097, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 456, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3116)
[0000][PE] mean and std.dev: (531.70, 449.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1709, 2866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6342)
[0000][PE] mean and std.dev: (1904.48, 1383.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 394.946 CPU sec, 22.134 real sec
[0000] Calling mem_process_seqs.., task: 1056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517814, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 631, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (807.00, 519.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 396.518 CPU sec, 22.170 real sec
[0000] Calling mem_process_seqs.., task: 1057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518017, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 412, 757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1599)
[0000][PE] mean and std.dev: (452.75, 225.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 394.326 CPU sec, 22.174 real sec
[0000] Calling mem_process_seqs.., task: 1058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518049, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 675, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (829.46, 700.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.69, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1218, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4588)
[0000][PE] mean and std.dev: (1438.88, 762.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 394.662 CPU sec, 22.098 real sec
[0000] Calling mem_process_seqs.., task: 1059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517697, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 537, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (778.79, 609.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.99, 125.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1718, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4655)
[0000][PE] mean and std.dev: (1498.47, 683.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 397.158 CPU sec, 22.260 real sec
[0000] Calling mem_process_seqs.., task: 1060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518079, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (445, 1000, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (1164.29, 817.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1628, 1795, 4218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9398)
[0000][PE] mean and std.dev: (2839.10, 2285.71)
[0000][PE] low and high boundaries for proper pairs: (1, 11988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 396.744 CPU sec, 22.229 real sec
[0000] Calling mem_process_seqs.., task: 1061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518264, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 379, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5258)
[0000][PE] mean and std.dev: (1047.81, 1114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.47, 124.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 397.292 CPU sec, 22.284 real sec
[0000] Calling mem_process_seqs.., task: 1062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518481, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 355, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5325)
[0000][PE] mean and std.dev: (1319.53, 1753.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.71, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 394.430 CPU sec, 22.049 real sec
[0000] Calling mem_process_seqs.., task: 1063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518466, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 1074, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5350)
[0000][PE] mean and std.dev: (1145.00, 996.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 393.139 CPU sec, 22.020 real sec
[0000] Calling mem_process_seqs.., task: 1064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517988, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 836, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4439)
[0000][PE] mean and std.dev: (1170.46, 1195.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 395.039 CPU sec, 22.088 real sec
[0000] Calling mem_process_seqs.., task: 1065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518793, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 777, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6024)
[0000][PE] mean and std.dev: (1005.63, 976.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 391.153 CPU sec, 21.841 real sec
[0000] Calling mem_process_seqs.., task: 1066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518318, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 761, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4375)
[0000][PE] mean and std.dev: (867.00, 747.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.56, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 393.127 CPU sec, 22.022 real sec
[0000] Calling mem_process_seqs.., task: 1067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517918, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 887, 2703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7455)
[0000][PE] mean and std.dev: (1109.35, 1022.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 392.811 CPU sec, 21.962 real sec
[0000] Calling mem_process_seqs.., task: 1068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518052, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 1299, 2640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7438)
[0000][PE] mean and std.dev: (1850.72, 1991.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.48, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 2114, 2450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5082)
[0000][PE] mean and std.dev: (1788.00, 1239.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 395.890 CPU sec, 22.163 real sec
[0000] Calling mem_process_seqs.., task: 1069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517356, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 465, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3004)
[0000][PE] mean and std.dev: (668.29, 477.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.44, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 392.742 CPU sec, 21.942 real sec
[0000] Calling mem_process_seqs.., task: 1070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518015, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 811, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5068)
[0000][PE] mean and std.dev: (1250.06, 1367.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.09, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 2062, 5885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16059)
[0000][PE] mean and std.dev: (2572.25, 2249.29)
[0000][PE] low and high boundaries for proper pairs: (1, 21146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 393.316 CPU sec, 21.979 real sec
[0000] Calling mem_process_seqs.., task: 1071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518049, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 649, 4180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11654)
[0000][PE] mean and std.dev: (2067.13, 2418.07)
[0000][PE] low and high boundaries for proper pairs: (1, 15391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 391.236 CPU sec, 21.891 real sec
[0000] Calling mem_process_seqs.., task: 1072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518177, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 426, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4047)
[0000][PE] mean and std.dev: (807.93, 631.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 393.534 CPU sec, 22.020 real sec
[0000] Calling mem_process_seqs.., task: 1073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518361, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 485, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2906)
[0000][PE] mean and std.dev: (833.11, 638.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.67, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 394.818 CPU sec, 22.109 real sec
[0000] Calling mem_process_seqs.., task: 1074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517852, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 405, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1557)
[0000][PE] mean and std.dev: (353.91, 163.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1442, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (1166.78, 477.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 394.805 CPU sec, 22.078 real sec
[0000] Calling mem_process_seqs.., task: 1075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518264, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 851, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3080)
[0000][PE] mean and std.dev: (768.45, 418.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.45, 124.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 389.567 CPU sec, 21.813 real sec
[0000] Calling mem_process_seqs.., task: 1076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517985, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 364, 987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2329)
[0000][PE] mean and std.dev: (544.92, 399.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.24, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1674, 3216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8254)
[0000][PE] mean and std.dev: (1940.38, 1536.61)
[0000][PE] low and high boundaries for proper pairs: (1, 10773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 390.871 CPU sec, 21.847 real sec
[0000] Calling mem_process_seqs.., task: 1077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518127, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 895, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (1008.39, 918.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.75, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 391.685 CPU sec, 21.874 real sec
[0000] Calling mem_process_seqs.., task: 1078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517996, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 487, 3412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9692)
[0000][PE] mean and std.dev: (1503.65, 2050.77)
[0000][PE] low and high boundaries for proper pairs: (1, 12832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.69, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1603, 2927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7429)
[0000][PE] mean and std.dev: (1930.38, 1363.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 395.537 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 1079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517862, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 554, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (991.69, 933.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (638, 1239, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4433)
[0000][PE] mean and std.dev: (1391.46, 1010.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 394.066 CPU sec, 22.036 real sec
[0000] Calling mem_process_seqs.., task: 1080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517939, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 810, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5034)
[0000][PE] mean and std.dev: (1174.74, 1116.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 395.851 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 1081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518005, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 458, 2712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7474)
[0000][PE] mean and std.dev: (1216.56, 1374.65)
[0000][PE] low and high boundaries for proper pairs: (1, 9855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.32, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 3288, 5437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14263)
[0000][PE] mean and std.dev: (3465.92, 2708.19)
[0000][PE] low and high boundaries for proper pairs: (1, 18676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 391.231 CPU sec, 21.888 real sec
[0000] Calling mem_process_seqs.., task: 1082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517953, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 373, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3674)
[0000][PE] mean and std.dev: (676.41, 597.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 395.864 CPU sec, 22.219 real sec
[0000] Calling mem_process_seqs.., task: 1083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518166, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 936, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (862.77, 616.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.81, 125.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1962, 5091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12877)
[0000][PE] mean and std.dev: (3189.91, 2492.70)
[0000][PE] low and high boundaries for proper pairs: (1, 16770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 392.905 CPU sec, 21.963 real sec
[0000] Calling mem_process_seqs.., task: 1084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517765, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 368, 726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1732)
[0000][PE] mean and std.dev: (439.82, 346.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 398.818 CPU sec, 22.355 real sec
[0000] Calling mem_process_seqs.., task: 1085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518088, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 773, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3986)
[0000][PE] mean and std.dev: (1123.62, 967.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.74, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1498, 1957, 2886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5662)
[0000][PE] mean and std.dev: (1962.50, 947.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 395.883 CPU sec, 22.150 real sec
[0000] Calling mem_process_seqs.., task: 1086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517861, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 484, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3187)
[0000][PE] mean and std.dev: (644.68, 503.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 393.899 CPU sec, 22.065 real sec
[0000] Calling mem_process_seqs.., task: 1087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518158, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 424, 2620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7124)
[0000][PE] mean and std.dev: (1308.77, 1692.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.73, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1238, 2561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6139)
[0000][PE] mean and std.dev: (1639.40, 1289.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 393.955 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 1088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517715, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 556, 3317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9235)
[0000][PE] mean and std.dev: (1969.53, 2521.53)
[0000][PE] low and high boundaries for proper pairs: (1, 12194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.62, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 396.813 CPU sec, 22.213 real sec
[0000] Calling mem_process_seqs.., task: 1089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518140, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 802, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3148)
[0000][PE] mean and std.dev: (778.18, 591.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.72, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1195, 2743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6439)
[0000][PE] mean and std.dev: (1798.00, 1391.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 395.382 CPU sec, 22.118 real sec
[0000] Calling mem_process_seqs.., task: 1090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517942, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 421, 2589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7271)
[0000][PE] mean and std.dev: (1098.88, 1059.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (610, 1247, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3505)
[0000][PE] mean and std.dev: (971.22, 500.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 397.714 CPU sec, 22.245 real sec
[0000] Calling mem_process_seqs.., task: 1091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518073, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 1094, 3164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8962)
[0000][PE] mean and std.dev: (1552.20, 1527.18)
[0000][PE] low and high boundaries for proper pairs: (1, 11861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 394.908 CPU sec, 22.078 real sec
[0000] Calling mem_process_seqs.., task: 1092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517637, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 353, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3257)
[0000][PE] mean and std.dev: (656.30, 603.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (512, 3614, 6116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17324)
[0000][PE] mean and std.dev: (3572.20, 3009.01)
[0000][PE] low and high boundaries for proper pairs: (1, 22928)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 395.593 CPU sec, 22.173 real sec
[0000] Calling mem_process_seqs.., task: 1093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518322, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 598, 960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2564)
[0000][PE] mean and std.dev: (579.00, 588.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1687, 2457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5483)
[0000][PE] mean and std.dev: (1610.21, 925.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 394.938 CPU sec, 22.110 real sec
[0000] Calling mem_process_seqs.., task: 1094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518830, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 420, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2822)
[0000][PE] mean and std.dev: (737.83, 702.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 393.215 CPU sec, 21.981 real sec
[0000] Calling mem_process_seqs.., task: 1095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517899, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 347, 773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1645)
[0000][PE] mean and std.dev: (459.60, 353.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 1354, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5424)
[0000][PE] mean and std.dev: (1390.62, 828.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 394.482 CPU sec, 22.058 real sec
[0000] Calling mem_process_seqs.., task: 1096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518056, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 382, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2719)
[0000][PE] mean and std.dev: (467.41, 482.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.69, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1232, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5282)
[0000][PE] mean and std.dev: (1363.20, 952.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 394.768 CPU sec, 22.107 real sec
[0000] Calling mem_process_seqs.., task: 1097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517988, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1071, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (1175.91, 804.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5070)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 393.475 CPU sec, 22.027 real sec
[0000] Calling mem_process_seqs.., task: 1098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518384, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 409, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5234)
[0000][PE] mean and std.dev: (728.82, 689.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.73, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 394.085 CPU sec, 22.074 real sec
[0000] Calling mem_process_seqs.., task: 1099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518210, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 469, 3271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9131)
[0000][PE] mean and std.dev: (1883.00, 2276.13)
[0000][PE] low and high boundaries for proper pairs: (1, 12061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.66, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 395.065 CPU sec, 22.113 real sec
[0000] Calling mem_process_seqs.., task: 1100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517777, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (517, 1304, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (1094.82, 720.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 397.828 CPU sec, 22.272 real sec
[0000] Calling mem_process_seqs.., task: 1101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517940, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 410, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3461)
[0000][PE] mean and std.dev: (552.75, 418.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 392.734 CPU sec, 21.955 real sec
[0000] Calling mem_process_seqs.., task: 1102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518518, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 454, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3403)
[0000][PE] mean and std.dev: (646.10, 552.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.37, 124.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 2162, 3044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7162)
[0000][PE] mean and std.dev: (2445.00, 1807.65)
[0000][PE] low and high boundaries for proper pairs: (1, 9676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 391.735 CPU sec, 21.885 real sec
[0000] Calling mem_process_seqs.., task: 1103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 518054, 6, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.65, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 394.068 CPU sec, 22.040 real sec
[0000] Calling mem_process_seqs.., task: 1104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518387, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 369, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (675.38, 523.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 393.278 CPU sec, 22.013 real sec
[0000] Calling mem_process_seqs.., task: 1105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517703, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 424, 1035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2413)
[0000][PE] mean and std.dev: (689.25, 606.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 397.191 CPU sec, 22.226 real sec
[0000] Calling mem_process_seqs.., task: 1106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517582, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 352, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1108)
[0000][PE] mean and std.dev: (344.29, 224.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 393.319 CPU sec, 21.973 real sec
[0000] Calling mem_process_seqs.., task: 1107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518490, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 724, 3679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10745)
[0000][PE] mean and std.dev: (1964.07, 2616.71)
[0000][PE] low and high boundaries for proper pairs: (1, 14278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 393.883 CPU sec, 22.042 real sec
[0000] Calling mem_process_seqs.., task: 1108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517989, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 352, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2887)
[0000][PE] mean and std.dev: (501.07, 442.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 395.046 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 1109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518322, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 460, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4040)
[0000][PE] mean and std.dev: (915.11, 904.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.41, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 393.509 CPU sec, 22.065 real sec
[0000] Calling mem_process_seqs.., task: 1110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517774, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 498, 2340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6538)
[0000][PE] mean and std.dev: (831.36, 850.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.89, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1436, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3786)
[0000][PE] mean and std.dev: (1523.70, 762.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 398.957 CPU sec, 22.312 real sec
[0000] Calling mem_process_seqs.., task: 1111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518406, 6, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 1735, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5085)
[0000][PE] mean and std.dev: (1501.29, 976.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6532)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 392.400 CPU sec, 21.943 real sec
[0000] Calling mem_process_seqs.., task: 1112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518457, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 668, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3887)
[0000][PE] mean and std.dev: (810.10, 694.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1261, 1513, 2448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4822)
[0000][PE] mean and std.dev: (1452.11, 711.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 394.751 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 1113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518294, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 554, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2466)
[0000][PE] mean and std.dev: (664.89, 503.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.20, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1891, 3052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7330)
[0000][PE] mean and std.dev: (2030.08, 1546.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 393.935 CPU sec, 22.067 real sec
[0000] Calling mem_process_seqs.., task: 1114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518032, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 349, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2656)
[0000][PE] mean and std.dev: (705.47, 803.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 392.877 CPU sec, 22.025 real sec
[0000] Calling mem_process_seqs.., task: 1115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518651, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 748, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4543)
[0000][PE] mean and std.dev: (1044.37, 1219.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1593, 2710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6468)
[0000][PE] mean and std.dev: (1650.89, 1307.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 392.145 CPU sec, 21.946 real sec
[0000] Calling mem_process_seqs.., task: 1116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518206, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 662, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (740.78, 617.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.65, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1306, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3011)
[0000][PE] mean and std.dev: (1222.00, 589.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 395.767 CPU sec, 22.116 real sec
[0000] Calling mem_process_seqs.., task: 1117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518065, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 555, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2504)
[0000][PE] mean and std.dev: (648.64, 445.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 390.251 CPU sec, 21.807 real sec
[0000] Calling mem_process_seqs.., task: 1118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517872, 0, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 428, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (728.44, 583.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1894, 7002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18706)
[0000][PE] mean and std.dev: (3068.42, 2863.80)
[0000][PE] low and high boundaries for proper pairs: (1, 24558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 395.494 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 1119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517925, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 443, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3905)
[0000][PE] mean and std.dev: (780.44, 684.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 395.830 CPU sec, 22.152 real sec
[0000] Calling mem_process_seqs.., task: 1120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517782, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 494, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4718)
[0000][PE] mean and std.dev: (817.64, 724.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 396.546 CPU sec, 22.196 real sec
[0000] Calling mem_process_seqs.., task: 1121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518195, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 674, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5112)
[0000][PE] mean and std.dev: (869.88, 725.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 389.768 CPU sec, 21.799 real sec
[0000] Calling mem_process_seqs.., task: 1122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517920, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 571, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5249)
[0000][PE] mean and std.dev: (1180.50, 1248.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 395.360 CPU sec, 22.118 real sec
[0000] Calling mem_process_seqs.., task: 1123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517803, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 682, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4665)
[0000][PE] mean and std.dev: (1035.14, 1088.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1977, 3051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6779)
[0000][PE] mean and std.dev: (2034.75, 1453.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 395.144 CPU sec, 22.107 real sec
[0000] Calling mem_process_seqs.., task: 1124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518013, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 448, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4780)
[0000][PE] mean and std.dev: (1223.93, 1354.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.71, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 397.188 CPU sec, 22.197 real sec
[0000] Calling mem_process_seqs.., task: 1125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517822, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 380, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6170)
[0000][PE] mean and std.dev: (1295.00, 1597.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.63, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 395.473 CPU sec, 22.202 real sec
[0000] Calling mem_process_seqs.., task: 1126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518006, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 993, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3285)
[0000][PE] mean and std.dev: (636.00, 452.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 394.276 CPU sec, 22.032 real sec
[0000] Calling mem_process_seqs.., task: 1127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517757, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 449, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4368)
[0000][PE] mean and std.dev: (872.00, 803.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 396.521 CPU sec, 22.221 real sec
[0000] Calling mem_process_seqs.., task: 1128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517903, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 520, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2099)
[0000][PE] mean and std.dev: (639.53, 463.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1611, 1911, 2594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4560)
[0000][PE] mean and std.dev: (1841.30, 652.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 396.920 CPU sec, 22.187 real sec
[0000] Calling mem_process_seqs.., task: 1129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518518, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 388, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4183)
[0000][PE] mean and std.dev: (765.94, 659.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1631, 3216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7682)
[0000][PE] mean and std.dev: (2171.80, 1776.74)
[0000][PE] low and high boundaries for proper pairs: (1, 9915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 393.165 CPU sec, 22.007 real sec
[0000] Calling mem_process_seqs.., task: 1130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518154, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 1120, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7000)
[0000][PE] mean and std.dev: (1816.19, 2057.14)
[0000][PE] low and high boundaries for proper pairs: (1, 10045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 393.622 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 1131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517869, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 463, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4173)
[0000][PE] mean and std.dev: (911.81, 863.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.75, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 395.365 CPU sec, 22.136 real sec
[0000] Calling mem_process_seqs.., task: 1132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518122, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 891, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5277)
[0000][PE] mean and std.dev: (1299.18, 1219.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.51, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1274, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5282)
[0000][PE] mean and std.dev: (1470.09, 1158.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 392.391 CPU sec, 21.954 real sec
[0000] Calling mem_process_seqs.., task: 1133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518281, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 468, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3272)
[0000][PE] mean and std.dev: (547.73, 362.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 393.033 CPU sec, 21.951 real sec
[0000] Calling mem_process_seqs.., task: 1134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517977, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 1251, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4917)
[0000][PE] mean and std.dev: (1175.80, 852.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.70, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1524, 2441, 3510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7482)
[0000][PE] mean and std.dev: (2477.00, 1407.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 395.274 CPU sec, 22.109 real sec
[0000] Calling mem_process_seqs.., task: 1135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518233, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (547, 885, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (1054.81, 742.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.02, 125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 393.531 CPU sec, 22.002 real sec
[0000] Calling mem_process_seqs.., task: 1136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518192, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 865, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4249)
[0000][PE] mean and std.dev: (975.72, 890.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.24, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1371, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5223)
[0000][PE] mean and std.dev: (1658.75, 1066.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 397.836 CPU sec, 22.250 real sec
[0000] Calling mem_process_seqs.., task: 1137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518013, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 566, 3059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8361)
[0000][PE] mean and std.dev: (1351.20, 1301.80)
[0000][PE] low and high boundaries for proper pairs: (1, 11012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 393.485 CPU sec, 22.014 real sec
[0000] Calling mem_process_seqs.., task: 1138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518173, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 389, 716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1562)
[0000][PE] mean and std.dev: (442.00, 294.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (526.99, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1463, 2539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5947)
[0000][PE] mean and std.dev: (1593.40, 878.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 398.909 CPU sec, 22.345 real sec
[0000] Calling mem_process_seqs.., task: 1139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517993, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (459, 1114, 3671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10095)
[0000][PE] mean and std.dev: (1931.85, 1617.80)
[0000][PE] low and high boundaries for proper pairs: (1, 13307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.68, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1460, 2640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5650)
[0000][PE] mean and std.dev: (1823.16, 1055.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 394.222 CPU sec, 22.040 real sec
[0000] Calling mem_process_seqs.., task: 1140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517754, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 383, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2432)
[0000][PE] mean and std.dev: (501.60, 282.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.72, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 395.050 CPU sec, 22.086 real sec
[0000] Calling mem_process_seqs.., task: 1141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518163, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 381, 868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2038)
[0000][PE] mean and std.dev: (388.25, 218.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 2199, 3212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8020)
[0000][PE] mean and std.dev: (2541.80, 2095.67)
[0000][PE] low and high boundaries for proper pairs: (1, 10924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 395.122 CPU sec, 22.080 real sec
[0000] Calling mem_process_seqs.., task: 1142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518106, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 676, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5537)
[0000][PE] mean and std.dev: (1046.24, 904.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.63, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1504, 2140, 3362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7078)
[0000][PE] mean and std.dev: (2077.75, 1192.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 393.768 CPU sec, 22.105 real sec
[0000] Calling mem_process_seqs.., task: 1143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517977, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 1040, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5814)
[0000][PE] mean and std.dev: (1199.71, 1354.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 393.504 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 1144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518302, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 1111, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (1017.86, 787.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.47, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1476, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3050)
[0000][PE] mean and std.dev: (1491.86, 706.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 393.448 CPU sec, 21.973 real sec
[0000] Calling mem_process_seqs.., task: 1145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518060, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 448, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2587)
[0000][PE] mean and std.dev: (586.57, 414.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1468, 2302, 3306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6982)
[0000][PE] mean and std.dev: (2477.25, 1366.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 389.462 CPU sec, 21.788 real sec
[0000] Calling mem_process_seqs.., task: 1146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517789, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 919, 2495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6737)
[0000][PE] mean and std.dev: (1418.32, 1444.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (515, 1262, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4145)
[0000][PE] mean and std.dev: (1167.00, 796.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 397.273 CPU sec, 22.368 real sec
[0000] Calling mem_process_seqs.., task: 1147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517881, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (451, 887, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5647)
[0000][PE] mean and std.dev: (1151.69, 992.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (485, 1278, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3863)
[0000][PE] mean and std.dev: (1107.44, 775.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4989)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1226, 1574, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (1544.15, 591.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 393.814 CPU sec, 22.064 real sec
[0000] Calling mem_process_seqs.., task: 1148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517870, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 384, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3836)
[0000][PE] mean and std.dev: (750.62, 705.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 2145, 4652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11878)
[0000][PE] mean and std.dev: (2426.42, 1727.09)
[0000][PE] low and high boundaries for proper pairs: (1, 15491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 394.573 CPU sec, 22.078 real sec
[0000] Calling mem_process_seqs.., task: 1149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517962, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 346, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (566.00, 484.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 395.877 CPU sec, 22.228 real sec
[0000] Calling mem_process_seqs.., task: 1150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518100, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 478, 2265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6443)
[0000][PE] mean and std.dev: (931.00, 968.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1224, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2721)
[0000][PE] mean and std.dev: (1302.13, 599.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 394.499 CPU sec, 22.174 real sec
[0000] Calling mem_process_seqs.., task: 1151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518497, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 326, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4924)
[0000][PE] mean and std.dev: (796.50, 960.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.71, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1311, 3210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7648)
[0000][PE] mean and std.dev: (1936.50, 1448.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 394.532 CPU sec, 22.059 real sec
[0000] Calling mem_process_seqs.., task: 1152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518349, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 442, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5462)
[0000][PE] mean and std.dev: (1205.86, 1317.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 2160, 3818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9252)
[0000][PE] mean and std.dev: (2761.80, 2276.74)
[0000][PE] low and high boundaries for proper pairs: (1, 11969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 392.179 CPU sec, 21.931 real sec
[0000] Calling mem_process_seqs.., task: 1153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 518259, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1287, 1657, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3237)
[0000][PE] mean and std.dev: (1425.89, 351.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3887)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 394.522 CPU sec, 22.053 real sec
[0000] Calling mem_process_seqs.., task: 1154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518400, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 1000, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4519)
[0000][PE] mean and std.dev: (1152.30, 1072.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 393.484 CPU sec, 21.980 real sec
[0000] Calling mem_process_seqs.., task: 1155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518246, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 1003, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4632)
[0000][PE] mean and std.dev: (985.38, 1053.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 392.322 CPU sec, 21.938 real sec
[0000] Calling mem_process_seqs.., task: 1156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518189, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (522, 963, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3117)
[0000][PE] mean and std.dev: (901.93, 483.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.64, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1615, 2205, 3298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6664)
[0000][PE] mean and std.dev: (2327.55, 1222.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 396.621 CPU sec, 22.178 real sec
[0000] Calling mem_process_seqs.., task: 1157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518544, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 479, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3169)
[0000][PE] mean and std.dev: (851.43, 825.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.73, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 392.991 CPU sec, 22.002 real sec
[0000] Calling mem_process_seqs.., task: 1158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517990, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 391, 743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1597)
[0000][PE] mean and std.dev: (495.13, 323.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 392.551 CPU sec, 21.943 real sec
[0000] Calling mem_process_seqs.., task: 1159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518243, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 451, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2235)
[0000][PE] mean and std.dev: (465.08, 250.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 125.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1137, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2350)
[0000][PE] mean and std.dev: (976.92, 408.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 393.778 CPU sec, 22.021 real sec
[0000] Calling mem_process_seqs.., task: 1160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517673, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 1246, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5489)
[0000][PE] mean and std.dev: (1165.38, 963.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 394.001 CPU sec, 22.025 real sec
[0000] Calling mem_process_seqs.., task: 1161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517867, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 1909, 3375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9463)
[0000][PE] mean and std.dev: (1629.50, 1371.95)
[0000][PE] low and high boundaries for proper pairs: (1, 12507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1214, 1525, 3771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8885)
[0000][PE] mean and std.dev: (2701.25, 2344.34)
[0000][PE] low and high boundaries for proper pairs: (1, 12079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 393.316 CPU sec, 22.022 real sec
[0000] Calling mem_process_seqs.., task: 1162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518228, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 367, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3323)
[0000][PE] mean and std.dev: (699.25, 781.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1631, 2159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (1685.20, 752.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5309)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 394.966 CPU sec, 22.133 real sec
[0000] Calling mem_process_seqs.., task: 1163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518124, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 671, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5102)
[0000][PE] mean and std.dev: (1079.92, 1213.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.62, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 393.315 CPU sec, 22.022 real sec
[0000] Calling mem_process_seqs.., task: 1164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517962, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 531, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2841)
[0000][PE] mean and std.dev: (564.08, 456.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.75, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (290, 1212, 4045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11555)
[0000][PE] mean and std.dev: (2190.10, 2280.78)
[0000][PE] low and high boundaries for proper pairs: (1, 15310)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1349, 3180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7252)
[0000][PE] mean and std.dev: (2252.64, 1737.68)
[0000][PE] low and high boundaries for proper pairs: (1, 9288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 393.863 CPU sec, 22.013 real sec
[0000] Calling mem_process_seqs.., task: 1165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517917, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 708, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (938.42, 1004.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.65, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 1682, 2618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5362)
[0000][PE] mean and std.dev: (2060.10, 1236.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 394.231 CPU sec, 22.079 real sec
[0000] Calling mem_process_seqs.., task: 1166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518303, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 872, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4485)
[0000][PE] mean and std.dev: (1019.14, 1028.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.16, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 393.132 CPU sec, 21.961 real sec
[0000] Calling mem_process_seqs.., task: 1167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518225, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 741, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (883.75, 610.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.73, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 395.952 CPU sec, 22.132 real sec
[0000] Calling mem_process_seqs.., task: 1168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517305, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 890, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4015)
[0000][PE] mean and std.dev: (1144.31, 1000.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.24, 125.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1363, 3637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9185)
[0000][PE] mean and std.dev: (2175.18, 1953.75)
[0000][PE] low and high boundaries for proper pairs: (1, 11959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 396.040 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 1169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518045, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 378, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1439)
[0000][PE] mean and std.dev: (431.29, 306.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1526, 2705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5941)
[0000][PE] mean and std.dev: (2016.73, 1478.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 395.242 CPU sec, 22.124 real sec
[0000] Calling mem_process_seqs.., task: 1170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517750, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 410, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (736.30, 691.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 397.170 CPU sec, 22.241 real sec
[0000] Calling mem_process_seqs.., task: 1171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517788, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 539, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3650)
[0000][PE] mean and std.dev: (877.00, 716.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 395.329 CPU sec, 22.139 real sec
[0000] Calling mem_process_seqs.., task: 1172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518271, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 494, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5219)
[0000][PE] mean and std.dev: (1203.93, 1398.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 396.134 CPU sec, 22.228 real sec
[0000] Calling mem_process_seqs.., task: 1173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517948, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 320, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (869.31, 926.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.13, 125.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1512, 2938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6692)
[0000][PE] mean and std.dev: (2003.73, 1352.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 397.071 CPU sec, 22.251 real sec
[0000] Calling mem_process_seqs.., task: 1174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518285, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 402, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2902)
[0000][PE] mean and std.dev: (623.11, 478.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.63, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 394.749 CPU sec, 22.072 real sec
[0000] Calling mem_process_seqs.., task: 1175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518494, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 421, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (713.25, 736.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 395.703 CPU sec, 22.125 real sec
[0000] Calling mem_process_seqs.., task: 1176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518272, 1, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.81, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1744, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4058)
[0000][PE] mean and std.dev: (1477.44, 551.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5046)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 393.913 CPU sec, 22.021 real sec
[0000] Calling mem_process_seqs.., task: 1177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517713, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 897, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4095)
[0000][PE] mean and std.dev: (960.27, 831.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1431, 2081, 3039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6255)
[0000][PE] mean and std.dev: (2031.36, 1133.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 397.530 CPU sec, 22.284 real sec
[0000] Calling mem_process_seqs.., task: 1178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518235, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 476, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (1065.84, 1075.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 395.269 CPU sec, 22.113 real sec
[0000] Calling mem_process_seqs.., task: 1179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518096, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 331, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2552)
[0000][PE] mean and std.dev: (500.86, 416.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.23, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 394.955 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 1180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518183, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 637, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5202)
[0000][PE] mean and std.dev: (869.21, 747.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1848, 2669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5709)
[0000][PE] mean and std.dev: (1674.83, 983.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 396.661 CPU sec, 22.189 real sec
[0000] Calling mem_process_seqs.., task: 1181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518118, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 345, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2567)
[0000][PE] mean and std.dev: (646.74, 589.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.60, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (216, 647, 2939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8385)
[0000][PE] mean and std.dev: (990.33, 1196.84)
[0000][PE] low and high boundaries for proper pairs: (1, 11108)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1413, 1879, 4578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10908)
[0000][PE] mean and std.dev: (2620.92, 1767.47)
[0000][PE] low and high boundaries for proper pairs: (1, 14073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 392.877 CPU sec, 21.955 real sec
[0000] Calling mem_process_seqs.., task: 1182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518428, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 406, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (717.23, 630.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1242, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4835)
[0000][PE] mean and std.dev: (1299.73, 974.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 393.503 CPU sec, 21.994 real sec
[0000] Calling mem_process_seqs.., task: 1183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517848, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 436, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4365)
[0000][PE] mean and std.dev: (731.25, 698.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 396.032 CPU sec, 22.133 real sec
[0000] Calling mem_process_seqs.., task: 1184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518003, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 314, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2671)
[0000][PE] mean and std.dev: (435.82, 333.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.47, 124.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (411, 1113, 2698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7272)
[0000][PE] mean and std.dev: (1308.67, 1124.23)
[0000][PE] low and high boundaries for proper pairs: (1, 9559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 394.034 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 1185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518137, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 500, 3059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8531)
[0000][PE] mean and std.dev: (1122.00, 1237.14)
[0000][PE] low and high boundaries for proper pairs: (1, 11267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.66, 125.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1423, 1664, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4270)
[0000][PE] mean and std.dev: (1766.33, 639.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5219)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 391.228 CPU sec, 21.910 real sec
[0000] Calling mem_process_seqs.., task: 1186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518115, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 823, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (1032.72, 977.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1473, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5145)
[0000][PE] mean and std.dev: (1661.14, 894.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 394.970 CPU sec, 22.092 real sec
[0000] Calling mem_process_seqs.., task: 1187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518015, 1, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.44, 124.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 394.537 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 1188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517860, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 594, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3834)
[0000][PE] mean and std.dev: (843.69, 674.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.20, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1345, 1905, 2605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5125)
[0000][PE] mean and std.dev: (1779.22, 955.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 395.265 CPU sec, 22.108 real sec
[0000] Calling mem_process_seqs.., task: 1189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518077, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 371, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2676)
[0000][PE] mean and std.dev: (541.50, 443.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 394.078 CPU sec, 22.071 real sec
[0000] Calling mem_process_seqs.., task: 1190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518246, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 456, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2077)
[0000][PE] mean and std.dev: (521.41, 300.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 392.204 CPU sec, 21.970 real sec
[0000] Calling mem_process_seqs.., task: 1191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518158, 2, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.72, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 395.644 CPU sec, 22.129 real sec
[0000] Calling mem_process_seqs.., task: 1192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518448, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 437, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (763.57, 767.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 918, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (1090.20, 604.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 391.061 CPU sec, 21.896 real sec
[0000] Calling mem_process_seqs.., task: 1193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518526, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 719, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4878)
[0000][PE] mean and std.dev: (1060.79, 950.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (587, 1055, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (1040.25, 771.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 389.283 CPU sec, 21.766 real sec
[0000] Calling mem_process_seqs.., task: 1194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518427, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 631, 2905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7965)
[0000][PE] mean and std.dev: (1370.53, 1336.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (591, 1105, 2883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7467)
[0000][PE] mean and std.dev: (1387.40, 1135.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 393.026 CPU sec, 21.961 real sec
[0000] Calling mem_process_seqs.., task: 1195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518461, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 318, 799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2055)
[0000][PE] mean and std.dev: (315.47, 236.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 392.840 CPU sec, 22.039 real sec
[0000] Calling mem_process_seqs.., task: 1196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517993, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 375, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3285)
[0000][PE] mean and std.dev: (724.46, 530.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 392.822 CPU sec, 21.965 real sec
[0000] Calling mem_process_seqs.., task: 1197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517860, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 631, 3566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10138)
[0000][PE] mean and std.dev: (1466.65, 1719.27)
[0000][PE] low and high boundaries for proper pairs: (1, 13424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.29, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 395.022 CPU sec, 22.079 real sec
[0000] Calling mem_process_seqs.., task: 1198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517959, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 453, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5709)
[0000][PE] mean and std.dev: (731.25, 712.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 396.245 CPU sec, 22.172 real sec
[0000] Calling mem_process_seqs.., task: 1199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518368, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 530, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3365)
[0000][PE] mean and std.dev: (608.57, 528.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.27, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1909, 3362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7842)
[0000][PE] mean and std.dev: (2236.87, 1664.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 393.572 CPU sec, 21.992 real sec
[0000] Calling mem_process_seqs.., task: 1200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518228, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 464, 2871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8041)
[0000][PE] mean and std.dev: (1712.78, 2028.60)
[0000][PE] low and high boundaries for proper pairs: (1, 10626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1453, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3814)
[0000][PE] mean and std.dev: (1400.83, 716.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 393.002 CPU sec, 21.953 real sec
[0000] Calling mem_process_seqs.., task: 1201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517883, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 524, 2391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6497)
[0000][PE] mean and std.dev: (1354.85, 1493.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.89, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (447, 954, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5871)
[0000][PE] mean and std.dev: (1425.40, 1183.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 395.384 CPU sec, 22.127 real sec
[0000] Calling mem_process_seqs.., task: 1202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518005, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 523, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3137)
[0000][PE] mean and std.dev: (699.36, 518.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 394.473 CPU sec, 22.069 real sec
[0000] Calling mem_process_seqs.., task: 1203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517871, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 418, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2295)
[0000][PE] mean and std.dev: (538.94, 415.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.22, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1488, 2417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5887)
[0000][PE] mean and std.dev: (1484.00, 950.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 396.228 CPU sec, 22.172 real sec
[0000] Calling mem_process_seqs.., task: 1204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518197, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 430, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2446)
[0000][PE] mean and std.dev: (685.86, 693.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.44, 124.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1728, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4443)
[0000][PE] mean and std.dev: (1676.64, 973.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 393.620 CPU sec, 22.005 real sec
[0000] Calling mem_process_seqs.., task: 1205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517853, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 402, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3550)
[0000][PE] mean and std.dev: (867.36, 729.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.22, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1784, 2244, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4595)
[0000][PE] mean and std.dev: (2241.33, 819.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 395.378 CPU sec, 22.123 real sec
[0000] Calling mem_process_seqs.., task: 1206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518029, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 887, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4830)
[0000][PE] mean and std.dev: (1198.17, 1203.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.73, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 392.107 CPU sec, 21.947 real sec
[0000] Calling mem_process_seqs.., task: 1207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517858, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 335, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1251)
[0000][PE] mean and std.dev: (433.79, 380.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 397.923 CPU sec, 22.266 real sec
[0000] Calling mem_process_seqs.., task: 1208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518320, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 552, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3848)
[0000][PE] mean and std.dev: (661.81, 522.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 394.937 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 1209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517894, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 372, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4633)
[0000][PE] mean and std.dev: (690.33, 619.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.81, 125.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1391, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4013)
[0000][PE] mean and std.dev: (1490.00, 675.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 394.049 CPU sec, 22.036 real sec
[0000] Calling mem_process_seqs.., task: 1210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518112, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 365, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2396)
[0000][PE] mean and std.dev: (537.92, 354.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.17, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 393.080 CPU sec, 21.955 real sec
[0000] Calling mem_process_seqs.., task: 1211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518205, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 311, 424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 736)
[0000][PE] mean and std.dev: (295.33, 66.11)
[0000][PE] low and high boundaries for proper pairs: (1, 892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 392.027 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 1212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517933, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 389, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1256)
[0000][PE] mean and std.dev: (377.64, 177.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.40, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 394.738 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 1213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518181, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 904, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3788)
[0000][PE] mean and std.dev: (906.36, 698.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 390.927 CPU sec, 21.858 real sec
[0000] Calling mem_process_seqs.., task: 1214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518712, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 408, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2260)
[0000][PE] mean and std.dev: (574.86, 414.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 521, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3261)
[0000][PE] mean and std.dev: (516.89, 408.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4244)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1832, 4026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10034)
[0000][PE] mean and std.dev: (2766.45, 2527.18)
[0000][PE] low and high boundaries for proper pairs: (1, 13038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 390.225 CPU sec, 21.811 real sec
[0000] Calling mem_process_seqs.., task: 1215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517411, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 463, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2755)
[0000][PE] mean and std.dev: (581.73, 423.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 397.577 CPU sec, 22.263 real sec
[0000] Calling mem_process_seqs.., task: 1216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517875, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 200, 422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 960)
[0000][PE] mean and std.dev: (256.16, 145.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.27, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1487, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3807)
[0000][PE] mean and std.dev: (1429.75, 664.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 395.011 CPU sec, 22.133 real sec
[0000] Calling mem_process_seqs.., task: 1217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518087, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 478, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4991)
[0000][PE] mean and std.dev: (956.44, 999.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1577, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3682)
[0000][PE] mean and std.dev: (1398.45, 576.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4564)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 394.659 CPU sec, 22.095 real sec
[0000] Calling mem_process_seqs.., task: 1218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518414, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 1040, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (805.43, 665.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.74, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1307, 2185, 2934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6188)
[0000][PE] mean and std.dev: (1941.40, 1254.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 393.408 CPU sec, 22.038 real sec
[0000] Calling mem_process_seqs.., task: 1219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517853, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 444, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5177)
[0000][PE] mean and std.dev: (955.27, 849.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 394.441 CPU sec, 22.083 real sec
[0000] Calling mem_process_seqs.., task: 1220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518549, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (765, 1337, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3717)
[0000][PE] mean and std.dev: (1313.53, 843.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.22, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 394.740 CPU sec, 22.133 real sec
[0000] Calling mem_process_seqs.., task: 1221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518230, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 519, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4289)
[0000][PE] mean and std.dev: (828.19, 873.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.76, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (668, 1353, 2776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6992)
[0000][PE] mean and std.dev: (1546.50, 981.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 393.315 CPU sec, 21.976 real sec
[0000] Calling mem_process_seqs.., task: 1222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517836, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 396, 895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2087)
[0000][PE] mean and std.dev: (475.18, 282.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 395.317 CPU sec, 22.128 real sec
[0000] Calling mem_process_seqs.., task: 1223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517287, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 369, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2117)
[0000][PE] mean and std.dev: (534.60, 553.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1494, 3285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7553)
[0000][PE] mean and std.dev: (2088.67, 1346.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 396.093 CPU sec, 22.192 real sec
[0000] Calling mem_process_seqs.., task: 1224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518413, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 374, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3965)
[0000][PE] mean and std.dev: (797.60, 837.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.74, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1669, 2980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6862)
[0000][PE] mean and std.dev: (1615.36, 775.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 391.516 CPU sec, 21.915 real sec
[0000] Calling mem_process_seqs.., task: 1225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518126, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 340, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6481)
[0000][PE] mean and std.dev: (1070.00, 1360.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (662, 1201, 4140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11096)
[0000][PE] mean and std.dev: (2144.64, 1858.48)
[0000][PE] low and high boundaries for proper pairs: (1, 14574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 396.319 CPU sec, 22.174 real sec
[0000] Calling mem_process_seqs.., task: 1226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518409, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 517, 2475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6835)
[0000][PE] mean and std.dev: (932.13, 1057.57)
[0000][PE] low and high boundaries for proper pairs: (1, 9015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.72, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 1950, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3798)
[0000][PE] mean and std.dev: (1718.33, 689.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 392.415 CPU sec, 21.969 real sec
[0000] Calling mem_process_seqs.., task: 1227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517613, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 512, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4515)
[0000][PE] mean and std.dev: (1069.93, 1115.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1354, 1595, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (1508.36, 977.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 396.105 CPU sec, 22.150 real sec
[0000] Calling mem_process_seqs.., task: 1228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518003, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 921, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (1089.94, 856.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 394.621 CPU sec, 22.069 real sec
[0000] Calling mem_process_seqs.., task: 1229
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518184, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 1067, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4351)
[0000][PE] mean and std.dev: (1368.80, 1321.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.87, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000154 bp)...
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 397.092 CPU sec, 22.256 real sec
[0000] Calling mem_process_seqs.., task: 1230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517901, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 1284, 2519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6863)
[0000][PE] mean and std.dev: (1863.00, 2068.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.44, 124.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 392.141 CPU sec, 21.894 real sec
[0000] Calling mem_process_seqs.., task: 1231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 518315, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 392.717 CPU sec, 21.991 real sec
[0000] Calling mem_process_seqs.., task: 1232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518028, 2, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 393.942 CPU sec, 22.104 real sec
[0000] Calling mem_process_seqs.., task: 1233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518379, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 257, 503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1097)
[0000][PE] mean and std.dev: (310.23, 230.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 395.095 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 1234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518607, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 885, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5018)
[0000][PE] mean and std.dev: (1031.44, 1039.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1481, 5196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13322)
[0000][PE] mean and std.dev: (2358.27, 2088.65)
[0000][PE] low and high boundaries for proper pairs: (1, 17385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 396.516 CPU sec, 22.164 real sec
[0000] Calling mem_process_seqs.., task: 1235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518581, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 1343, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6015)
[0000][PE] mean and std.dev: (1403.57, 1226.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 388.545 CPU sec, 21.713 real sec
[0000] Calling mem_process_seqs.., task: 1236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518150, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 850, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (1031.18, 854.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.37, 124.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1260, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3361)
[0000][PE] mean and std.dev: (985.20, 429.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 396.018 CPU sec, 22.180 real sec
[0000] Calling mem_process_seqs.., task: 1237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518027, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 991, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5258)
[0000][PE] mean and std.dev: (932.00, 771.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 390.226 CPU sec, 21.805 real sec
[0000] Calling mem_process_seqs.., task: 1238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518669, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (449, 925, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4895)
[0000][PE] mean and std.dev: (1313.19, 1386.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 391.437 CPU sec, 21.920 real sec
[0000] Calling mem_process_seqs.., task: 1239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517972, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 891, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5457)
[0000][PE] mean and std.dev: (1451.73, 1694.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.23, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 2234, 2952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7234)
[0000][PE] mean and std.dev: (2136.00, 1782.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 390.345 CPU sec, 21.823 real sec
[0000] Calling mem_process_seqs.., task: 1240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517891, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 1121, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (1082.38, 987.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 393.909 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 1241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518494, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 504, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (729.23, 779.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.69, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1563, 3049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7323)
[0000][PE] mean and std.dev: (2053.27, 1556.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 393.934 CPU sec, 22.087 real sec
[0000] Calling mem_process_seqs.., task: 1242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517801, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 594, 3266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9090)
[0000][PE] mean and std.dev: (1828.15, 2064.93)
[0000][PE] low and high boundaries for proper pairs: (1, 12002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1769, 2973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7397)
[0000][PE] mean and std.dev: (2034.60, 1578.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 392.363 CPU sec, 21.947 real sec
[0000] Calling mem_process_seqs.., task: 1243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518504, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 387, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (796.86, 732.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1622, 2090, 3291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6629)
[0000][PE] mean and std.dev: (1989.82, 1253.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 395.336 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 1244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518007, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 809, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2912)
[0000][PE] mean and std.dev: (841.21, 515.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.61, 125.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 390.131 CPU sec, 21.811 real sec
[0000] Calling mem_process_seqs.., task: 1245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518426, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (449, 1541, 2606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6920)
[0000][PE] mean and std.dev: (1862.75, 1720.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.65, 125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 1858, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5092)
[0000][PE] mean and std.dev: (1570.40, 781.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 390.167 CPU sec, 21.808 real sec
[0000] Calling mem_process_seqs.., task: 1246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518392, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 700, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3186)
[0000][PE] mean and std.dev: (714.24, 556.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.63, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 395.364 CPU sec, 22.104 real sec
[0000] Calling mem_process_seqs.., task: 1247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517951, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 622, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (842.38, 652.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.21, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1750, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (1800.20, 822.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 392.170 CPU sec, 21.950 real sec
[0000] Calling mem_process_seqs.., task: 1248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518177, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 511, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (808.81, 747.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1660, 3023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7189)
[0000][PE] mean and std.dev: (1915.69, 1187.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 390.584 CPU sec, 21.825 real sec
[0000] Calling mem_process_seqs.., task: 1249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518279, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 802, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3729)
[0000][PE] mean and std.dev: (785.45, 788.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 394.560 CPU sec, 22.079 real sec
[0000] Calling mem_process_seqs.., task: 1250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518164, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 1028, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3505)
[0000][PE] mean and std.dev: (974.06, 714.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1428, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4653)
[0000][PE] mean and std.dev: (1585.09, 926.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 391.358 CPU sec, 21.879 real sec
[0000] Calling mem_process_seqs.., task: 1251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518224, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 446, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3819)
[0000][PE] mean and std.dev: (678.38, 589.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 389.855 CPU sec, 21.806 real sec
[0000] Calling mem_process_seqs.., task: 1252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517586, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 376, 821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1891)
[0000][PE] mean and std.dev: (428.10, 261.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.79, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 394.463 CPU sec, 22.154 real sec
[0000] Calling mem_process_seqs.., task: 1253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518083, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (462, 529, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4569)
[0000][PE] mean and std.dev: (987.27, 946.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.22, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1747, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5099)
[0000][PE] mean and std.dev: (1530.08, 827.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 389.238 CPU sec, 21.838 real sec
[0000] Calling mem_process_seqs.., task: 1254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518021, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 484, 3074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8546)
[0000][PE] mean and std.dev: (1617.20, 1984.34)
[0000][PE] low and high boundaries for proper pairs: (1, 11282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.80, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1933, 2729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6175)
[0000][PE] mean and std.dev: (2027.60, 1321.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 394.066 CPU sec, 22.026 real sec
[0000] Calling mem_process_seqs.., task: 1255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518794, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 345, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4546)
[0000][PE] mean and std.dev: (922.14, 990.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (322, 1054, 3172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8872)
[0000][PE] mean and std.dev: (1515.46, 1486.89)
[0000][PE] low and high boundaries for proper pairs: (1, 11722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 389.628 CPU sec, 21.795 real sec
[0000] Calling mem_process_seqs.., task: 1256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518011, 8, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 736, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (755.54, 588.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 393.284 CPU sec, 22.039 real sec
[0000] Calling mem_process_seqs.., task: 1257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517922, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 599, 3030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8318)
[0000][PE] mean and std.dev: (1679.64, 1782.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.17, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 390.290 CPU sec, 21.871 real sec
[0000] Calling mem_process_seqs.., task: 1258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517920, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 416, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1792)
[0000][PE] mean and std.dev: (467.29, 303.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.66, 125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1804, 3690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8820)
[0000][PE] mean and std.dev: (2458.29, 1883.87)
[0000][PE] low and high boundaries for proper pairs: (1, 11385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 393.021 CPU sec, 21.985 real sec
[0000] Calling mem_process_seqs.., task: 1259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517862, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 838, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3950)
[0000][PE] mean and std.dev: (832.94, 709.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 392.264 CPU sec, 21.917 real sec
[0000] Calling mem_process_seqs.., task: 1260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518325, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 706, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (673.92, 490.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.87, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1722, 3557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8459)
[0000][PE] mean and std.dev: (2387.20, 1823.25)
[0000][PE] low and high boundaries for proper pairs: (1, 10910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 389.081 CPU sec, 21.829 real sec
[0000] Calling mem_process_seqs.., task: 1261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518155, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 496, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2943)
[0000][PE] mean and std.dev: (719.70, 669.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.61, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (615, 930, 3724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9942)
[0000][PE] mean and std.dev: (2459.91, 2958.50)
[0000][PE] low and high boundaries for proper pairs: (1, 14294)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 392.416 CPU sec, 21.965 real sec
[0000] Calling mem_process_seqs.., task: 1262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518238, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 353, 2591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7437)
[0000][PE] mean and std.dev: (1253.94, 1690.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1363, 2374, 4133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9673)
[0000][PE] mean and std.dev: (2859.33, 1846.47)
[0000][PE] low and high boundaries for proper pairs: (1, 12443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 391.380 CPU sec, 21.878 real sec
[0000] Calling mem_process_seqs.., task: 1263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518129, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 986, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3910)
[0000][PE] mean and std.dev: (913.08, 513.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1193, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3172)
[0000][PE] mean and std.dev: (1109.44, 422.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 392.772 CPU sec, 21.987 real sec
[0000] Calling mem_process_seqs.., task: 1264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517804, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (504, 1067, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (995.33, 628.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 2069, 2673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5697)
[0000][PE] mean and std.dev: (1498.67, 823.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 391.889 CPU sec, 21.899 real sec
[0000] Calling mem_process_seqs.., task: 1265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518293, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 364, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2287)
[0000][PE] mean and std.dev: (587.24, 464.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 1055, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1318.41, 860.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 391.860 CPU sec, 21.941 real sec
[0000] Calling mem_process_seqs.., task: 1266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517354, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 929, 2739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7411)
[0000][PE] mean and std.dev: (1741.75, 1843.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.48, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 392.930 CPU sec, 21.960 real sec
[0000] Calling mem_process_seqs.., task: 1267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518027, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 735, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5267)
[0000][PE] mean and std.dev: (1090.10, 882.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.74, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1460, 3307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8187)
[0000][PE] mean and std.dev: (1977.00, 1716.85)
[0000][PE] low and high boundaries for proper pairs: (1, 10627)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 391.760 CPU sec, 21.887 real sec
[0000] Calling mem_process_seqs.., task: 1268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517587, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 672, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3494)
[0000][PE] mean and std.dev: (886.65, 882.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 393.418 CPU sec, 22.005 real sec
[0000] Calling mem_process_seqs.., task: 1269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517863, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 478, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5211)
[0000][PE] mean and std.dev: (1187.24, 1377.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.66, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1349, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (627, 1927)
[0000][PE] mean and std.dev: (1211.88, 204.20)
[0000][PE] low and high boundaries for proper pairs: (367, 2187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 391.843 CPU sec, 21.908 real sec
[0000] Calling mem_process_seqs.., task: 1270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518245, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 483, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5305)
[0000][PE] mean and std.dev: (547.10, 521.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.76, 125.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 393.351 CPU sec, 22.059 real sec
[0000] Calling mem_process_seqs.., task: 1271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517851, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 892, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5623)
[0000][PE] mean and std.dev: (1308.18, 1350.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1274, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4132)
[0000][PE] mean and std.dev: (1415.10, 810.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 391.951 CPU sec, 21.910 real sec
[0000] Calling mem_process_seqs.., task: 1272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518027, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 391.681 CPU sec, 21.916 real sec
[0000] Calling mem_process_seqs.., task: 1273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518283, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 350, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6658)
[0000][PE] mean and std.dev: (1046.79, 1156.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.63, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1619, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (1802.55, 1271.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 391.229 CPU sec, 21.898 real sec
[0000] Calling mem_process_seqs.., task: 1274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517778, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (458, 770, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5126)
[0000][PE] mean and std.dev: (955.07, 744.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.24, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 393.103 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 1275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518227, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 793, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4464)
[0000][PE] mean and std.dev: (928.60, 683.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 389.916 CPU sec, 21.802 real sec
[0000] Calling mem_process_seqs.., task: 1276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518424, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 489, 992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2468)
[0000][PE] mean and std.dev: (704.38, 639.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.69, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 392.714 CPU sec, 21.955 real sec
[0000] Calling mem_process_seqs.., task: 1277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517862, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1332, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5234)
[0000][PE] mean and std.dev: (1583.85, 944.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6649)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 393.570 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 1278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518400, 4, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1578, 3371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8145)
[0000][PE] mean and std.dev: (2251.38, 1961.27)
[0000][PE] low and high boundaries for proper pairs: (1, 10532)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 391.192 CPU sec, 21.887 real sec
[0000] Calling mem_process_seqs.., task: 1279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518446, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 821, 2367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6223)
[0000][PE] mean and std.dev: (1218.57, 1051.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1083, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2380)
[0000][PE] mean and std.dev: (1064.45, 323.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 390.108 CPU sec, 21.800 real sec
[0000] Calling mem_process_seqs.., task: 1280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517820, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 595, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (858.70, 906.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1627, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4042)
[0000][PE] mean and std.dev: (1385.09, 883.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 391.379 CPU sec, 21.897 real sec
[0000] Calling mem_process_seqs.., task: 1281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517868, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 490, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4338)
[0000][PE] mean and std.dev: (806.64, 841.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.89, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1819, 2806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6650)
[0000][PE] mean and std.dev: (1975.62, 1260.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 391.913 CPU sec, 21.912 real sec
[0000] Calling mem_process_seqs.., task: 1282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518354, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 513, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3993)
[0000][PE] mean and std.dev: (799.15, 653.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1247, 2979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6681)
[0000][PE] mean and std.dev: (2037.36, 1739.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 390.216 CPU sec, 21.840 real sec
[0000] Calling mem_process_seqs.., task: 1283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517810, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 483, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2990)
[0000][PE] mean and std.dev: (594.25, 419.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 392.397 CPU sec, 21.936 real sec
[0000] Calling mem_process_seqs.., task: 1284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517936, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (799, 1113, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5551)
[0000][PE] mean and std.dev: (1432.67, 1039.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 390.764 CPU sec, 21.841 real sec
[0000] Calling mem_process_seqs.., task: 1285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518567, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 811, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5152)
[0000][PE] mean and std.dev: (825.67, 616.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.39, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 390.092 CPU sec, 21.859 real sec
[0000] Calling mem_process_seqs.., task: 1286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518106, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 512, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2864)
[0000][PE] mean and std.dev: (865.72, 796.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 392.656 CPU sec, 21.937 real sec
[0000] Calling mem_process_seqs.., task: 1287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518431, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 509, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2461)
[0000][PE] mean and std.dev: (552.07, 326.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 389.561 CPU sec, 21.795 real sec
[0000] Calling mem_process_seqs.., task: 1288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518190, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 895, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3527)
[0000][PE] mean and std.dev: (782.70, 477.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 394.695 CPU sec, 22.067 real sec
[0000] Calling mem_process_seqs.., task: 1289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518476, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 441, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (734.82, 532.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 391.779 CPU sec, 21.931 real sec
[0000] Calling mem_process_seqs.., task: 1290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517619, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 432, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (662.33, 543.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 396.248 CPU sec, 22.218 real sec
[0000] Calling mem_process_seqs.., task: 1291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518228, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (506, 692, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3527)
[0000][PE] mean and std.dev: (1104.92, 815.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 390.658 CPU sec, 21.885 real sec
[0000] Calling mem_process_seqs.., task: 1292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518344, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 695, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5219)
[0000][PE] mean and std.dev: (1151.19, 984.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (399, 954, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2682)
[0000][PE] mean and std.dev: (619.25, 362.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 390.313 CPU sec, 21.814 real sec
[0000] Calling mem_process_seqs.., task: 1293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517839, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 980, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4218)
[0000][PE] mean and std.dev: (1105.60, 930.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1564, 2621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5557)
[0000][PE] mean and std.dev: (1873.55, 1214.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 395.266 CPU sec, 22.169 real sec
[0000] Calling mem_process_seqs.., task: 1294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517564, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 586, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3948)
[0000][PE] mean and std.dev: (853.14, 719.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.38, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (681, 1264, 2648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6582)
[0000][PE] mean and std.dev: (1806.50, 1448.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 392.617 CPU sec, 21.996 real sec
[0000] Calling mem_process_seqs.., task: 1295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517630, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 442, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (956.94, 1029.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 1200, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4293)
[0000][PE] mean and std.dev: (1063.55, 642.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 390.906 CPU sec, 21.855 real sec
[0000] Calling mem_process_seqs.., task: 1296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518212, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 914, 2393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6301)
[0000][PE] mean and std.dev: (1449.41, 1559.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1317, 2059, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4644)
[0000][PE] mean and std.dev: (1773.11, 938.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 392.327 CPU sec, 21.978 real sec
[0000] Calling mem_process_seqs.., task: 1297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517950, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 311, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5789)
[0000][PE] mean and std.dev: (890.20, 1049.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1252, 1409, 2577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5227)
[0000][PE] mean and std.dev: (1873.59, 1156.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 394.700 CPU sec, 22.083 real sec
[0000] Calling mem_process_seqs.., task: 1298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517950, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 477, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3162)
[0000][PE] mean and std.dev: (634.26, 519.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.92, 125.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1418, 2637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6233)
[0000][PE] mean and std.dev: (1897.00, 1837.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 394.556 CPU sec, 22.076 real sec
[0000] Calling mem_process_seqs.., task: 1299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518269, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 361, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (818.31, 707.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 390.874 CPU sec, 21.853 real sec
[0000] Calling mem_process_seqs.., task: 1300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517718, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 293, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (721.00, 886.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 1059, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4997)
[0000][PE] mean and std.dev: (964.31, 700.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6592)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 392.470 CPU sec, 21.960 real sec
[0000] Calling mem_process_seqs.., task: 1301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517876, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 494, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2755)
[0000][PE] mean and std.dev: (710.36, 650.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.63, 125.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1338, 1587, 4965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12219)
[0000][PE] mean and std.dev: (2889.36, 2517.50)
[0000][PE] low and high boundaries for proper pairs: (1, 15846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 391.511 CPU sec, 21.916 real sec
[0000] Calling mem_process_seqs.., task: 1302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518253, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 325, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3426)
[0000][PE] mean and std.dev: (603.00, 739.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1325, 2200, 5117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12701)
[0000][PE] mean and std.dev: (3254.50, 2585.73)
[0000][PE] low and high boundaries for proper pairs: (1, 16493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 392.403 CPU sec, 21.990 real sec
[0000] Calling mem_process_seqs.., task: 1303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518570, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 1101, 2914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8042)
[0000][PE] mean and std.dev: (1583.12, 1464.40)
[0000][PE] low and high boundaries for proper pairs: (1, 10606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 392.543 CPU sec, 21.964 real sec
[0000] Calling mem_process_seqs.., task: 1304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518096, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 473, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (790.56, 799.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 392.876 CPU sec, 22.016 real sec
[0000] Calling mem_process_seqs.., task: 1305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517682, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 463, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4107)
[0000][PE] mean and std.dev: (630.40, 594.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.20, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1294, 3729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9323)
[0000][PE] mean and std.dev: (2189.80, 2142.48)
[0000][PE] low and high boundaries for proper pairs: (1, 12120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 394.500 CPU sec, 22.043 real sec
[0000] Calling mem_process_seqs.., task: 1306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518151, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 381, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5610)
[0000][PE] mean and std.dev: (964.29, 1225.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 390.886 CPU sec, 21.858 real sec
[0000] Calling mem_process_seqs.., task: 1307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517732, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 612, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6652)
[0000][PE] mean and std.dev: (978.89, 968.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.71, 124.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 391.557 CPU sec, 21.890 real sec
[0000] Calling mem_process_seqs.., task: 1308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518103, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (456, 714, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5025)
[0000][PE] mean and std.dev: (1112.00, 1002.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 393.940 CPU sec, 22.030 real sec
[0000] Calling mem_process_seqs.., task: 1309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518429, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 407, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5476)
[0000][PE] mean and std.dev: (1238.07, 1212.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1448, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4150)
[0000][PE] mean and std.dev: (1474.00, 595.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 390.782 CPU sec, 21.833 real sec
[0000] Calling mem_process_seqs.., task: 1310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518026, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 399, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1371)
[0000][PE] mean and std.dev: (372.17, 203.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.05, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1423, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (1374.44, 925.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 390.902 CPU sec, 21.876 real sec
[0000] Calling mem_process_seqs.., task: 1311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518051, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 454, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4249)
[0000][PE] mean and std.dev: (807.23, 646.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.82, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1580, 2322, 4005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8855)
[0000][PE] mean and std.dev: (2389.33, 1260.64)
[0000][PE] low and high boundaries for proper pairs: (1, 11280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 393.793 CPU sec, 22.055 real sec
[0000] Calling mem_process_seqs.., task: 1312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518054, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 1157, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4628)
[0000][PE] mean and std.dev: (1436.00, 1379.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.85, 125.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 2546, 2977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7395)
[0000][PE] mean and std.dev: (2116.29, 1614.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 394.369 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 1313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518072, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 496, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (788.23, 793.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.78, 125.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1338, 1562, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (176, 3081)
[0000][PE] mean and std.dev: (1350.62, 493.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3662)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 391.929 CPU sec, 21.958 real sec
[0000] Calling mem_process_seqs.., task: 1314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518202, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 599, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6418)
[0000][PE] mean and std.dev: (1148.29, 1208.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 393.065 CPU sec, 22.008 real sec
[0000] Calling mem_process_seqs.., task: 1315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518427, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 417, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2925)
[0000][PE] mean and std.dev: (673.89, 558.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1364, 1865, 4332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10268)
[0000][PE] mean and std.dev: (2571.67, 2025.76)
[0000][PE] low and high boundaries for proper pairs: (1, 13236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 391.115 CPU sec, 21.855 real sec
[0000] Calling mem_process_seqs.., task: 1316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517830, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 447, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (708.62, 670.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1247, 1723, 3132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6902)
[0000][PE] mean and std.dev: (1865.33, 981.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 392.182 CPU sec, 21.943 real sec
[0000] Calling mem_process_seqs.., task: 1317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518358, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (524, 1101, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5207)
[0000][PE] mean and std.dev: (1180.17, 790.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 391.949 CPU sec, 21.913 real sec
[0000] Calling mem_process_seqs.., task: 1318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517797, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 404, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1786)
[0000][PE] mean and std.dev: (437.25, 278.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.62, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1789, 2841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6653)
[0000][PE] mean and std.dev: (1985.50, 1661.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 393.064 CPU sec, 22.016 real sec
[0000] Calling mem_process_seqs.., task: 1319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517929, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 389, 2720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7580)
[0000][PE] mean and std.dev: (1673.06, 2051.78)
[0000][PE] low and high boundaries for proper pairs: (1, 10010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 395.032 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 1320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517870, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 1165, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (1335.40, 1100.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1281, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4356)
[0000][PE] mean and std.dev: (1383.77, 750.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 390.937 CPU sec, 21.858 real sec
[0000] Calling mem_process_seqs.., task: 1321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517564, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 722, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3743)
[0000][PE] mean and std.dev: (748.29, 636.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.75, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1206, 3132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7392)
[0000][PE] mean and std.dev: (2022.31, 1584.75)
[0000][PE] low and high boundaries for proper pairs: (1, 9522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 394.313 CPU sec, 22.072 real sec
[0000] Calling mem_process_seqs.., task: 1322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518022, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 1246, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5817)
[0000][PE] mean and std.dev: (1465.75, 1294.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 393.932 CPU sec, 22.067 real sec
[0000] Calling mem_process_seqs.., task: 1323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518387, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (539, 1154, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3614)
[0000][PE] mean and std.dev: (1276.33, 932.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.73, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 391.516 CPU sec, 21.928 real sec
[0000] Calling mem_process_seqs.., task: 1324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517682, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 724, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (1218.14, 1105.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.87, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (2030, 3045, 4405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9155)
[0000][PE] mean and std.dev: (2827.09, 1947.25)
[0000][PE] low and high boundaries for proper pairs: (1, 11530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 394.199 CPU sec, 22.040 real sec
[0000] Calling mem_process_seqs.., task: 1325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518265, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 1693, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6177)
[0000][PE] mean and std.dev: (1312.38, 1070.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 393.833 CPU sec, 22.060 real sec
[0000] Calling mem_process_seqs.., task: 1326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517610, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 350, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3983)
[0000][PE] mean and std.dev: (828.60, 992.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.71, 125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (577, 1009, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4840)
[0000][PE] mean and std.dev: (991.36, 551.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 395.298 CPU sec, 22.109 real sec
[0000] Calling mem_process_seqs.., task: 1327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518465, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 302, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6500)
[0000][PE] mean and std.dev: (1184.15, 1380.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1396, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4252)
[0000][PE] mean and std.dev: (1352.00, 769.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 390.354 CPU sec, 21.858 real sec
[0000] Calling mem_process_seqs.., task: 1328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517705, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 438, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3471)
[0000][PE] mean and std.dev: (746.07, 730.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1355, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (77, 2702)
[0000][PE] mean and std.dev: (1068.90, 493.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 392.551 CPU sec, 21.937 real sec
[0000] Calling mem_process_seqs.., task: 1329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517877, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (458, 1227, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5231)
[0000][PE] mean and std.dev: (1408.29, 1147.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1724, 2422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5406)
[0000][PE] mean and std.dev: (1762.62, 999.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 394.713 CPU sec, 22.047 real sec
[0000] Calling mem_process_seqs.., task: 1330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518071, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 261, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (613.88, 814.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 392.996 CPU sec, 21.984 real sec
[0000] Calling mem_process_seqs.., task: 1331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517866, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 342, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3016)
[0000][PE] mean and std.dev: (590.79, 629.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 393.094 CPU sec, 21.984 real sec
[0000] Calling mem_process_seqs.., task: 1332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518192, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 362, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2890)
[0000][PE] mean and std.dev: (497.26, 362.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (423, 1271, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3708)
[0000][PE] mean and std.dev: (1197.00, 699.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 391.102 CPU sec, 21.887 real sec
[0000] Calling mem_process_seqs.., task: 1333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517888, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 605, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (710.28, 627.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1146, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4382)
[0000][PE] mean and std.dev: (1203.27, 763.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 396.517 CPU sec, 22.206 real sec
[0000] Calling mem_process_seqs.., task: 1334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518052, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 200, 470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1156)
[0000][PE] mean and std.dev: (204.75, 130.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 392.535 CPU sec, 22.029 real sec
[0000] Calling mem_process_seqs.., task: 1335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517461, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 422, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5510)
[0000][PE] mean and std.dev: (1147.09, 1290.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 397.312 CPU sec, 22.253 real sec
[0000] Calling mem_process_seqs.., task: 1336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517979, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 348, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2229)
[0000][PE] mean and std.dev: (456.58, 374.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 391.847 CPU sec, 21.897 real sec
[0000] Calling mem_process_seqs.., task: 1337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518077, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 375, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2911)
[0000][PE] mean and std.dev: (720.40, 722.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 393.805 CPU sec, 22.063 real sec
[0000] Calling mem_process_seqs.., task: 1338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517393, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 939, 1824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5134)
[0000][PE] mean and std.dev: (1365.72, 1546.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.69, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 395.621 CPU sec, 22.126 real sec
[0000] Calling mem_process_seqs.., task: 1339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517928, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 1057, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3870)
[0000][PE] mean and std.dev: (1007.79, 830.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1247, 4334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10796)
[0000][PE] mean and std.dev: (2058.77, 1960.91)
[0000][PE] low and high boundaries for proper pairs: (1, 14027)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 391.530 CPU sec, 21.881 real sec
[0000] Calling mem_process_seqs.., task: 1340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517421, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 423, 473)
[0000][PE] low and high boundaries for computing mean and std.dev: (23, 773)
[0000][PE] mean and std.dev: (369.62, 68.96)
[0000][PE] low and high boundaries for proper pairs: (1, 923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1295, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4405)
[0000][PE] mean and std.dev: (1388.25, 943.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 395.121 CPU sec, 22.132 real sec
[0000] Calling mem_process_seqs.., task: 1341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518102, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 407, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4735)
[0000][PE] mean and std.dev: (1114.57, 1201.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.81, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 392.790 CPU sec, 21.975 real sec
[0000] Calling mem_process_seqs.., task: 1342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518330, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 346, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4559)
[0000][PE] mean and std.dev: (771.85, 828.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1372, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5009)
[0000][PE] mean and std.dev: (1403.91, 879.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 391.263 CPU sec, 21.892 real sec
[0000] Calling mem_process_seqs.., task: 1343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517689, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 955, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4817)
[0000][PE] mean and std.dev: (1317.41, 1207.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 392.906 CPU sec, 21.972 real sec
[0000] Calling mem_process_seqs.., task: 1344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518451, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 615, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3334)
[0000][PE] mean and std.dev: (978.33, 949.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.33, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1338, 1588, 4738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11538)
[0000][PE] mean and std.dev: (2440.00, 1774.17)
[0000][PE] low and high boundaries for proper pairs: (1, 14938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 392.840 CPU sec, 21.955 real sec
[0000] Calling mem_process_seqs.., task: 1345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518214, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 891, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3543)
[0000][PE] mean and std.dev: (877.54, 815.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1421, 3343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8035)
[0000][PE] mean and std.dev: (1738.91, 1245.85)
[0000][PE] low and high boundaries for proper pairs: (1, 10381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 392.104 CPU sec, 21.935 real sec
[0000] Calling mem_process_seqs.., task: 1346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517925, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 1222, 4268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11940)
[0000][PE] mean and std.dev: (2189.06, 2294.19)
[0000][PE] low and high boundaries for proper pairs: (1, 15776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1409, 1581, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (325, 3035)
[0000][PE] mean and std.dev: (1376.56, 484.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 393.569 CPU sec, 22.007 real sec
[0000] Calling mem_process_seqs.., task: 1347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518251, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 417, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (723.55, 673.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.00, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1201, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5345)
[0000][PE] mean and std.dev: (1537.20, 789.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 392.426 CPU sec, 21.977 real sec
[0000] Calling mem_process_seqs.., task: 1348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518426, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 1118, 2470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6890)
[0000][PE] mean and std.dev: (1709.70, 1880.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.66, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 393.364 CPU sec, 21.995 real sec
[0000] Calling mem_process_seqs.., task: 1349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518103, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 420, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3190)
[0000][PE] mean and std.dev: (492.55, 408.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 394.803 CPU sec, 22.133 real sec
[0000] Calling mem_process_seqs.., task: 1350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517766, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 423, 733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1651)
[0000][PE] mean and std.dev: (497.78, 405.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1488, 2417, 5178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12558)
[0000][PE] mean and std.dev: (3262.30, 2144.36)
[0000][PE] low and high boundaries for proper pairs: (1, 16248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 398.363 CPU sec, 22.307 real sec
[0000] Calling mem_process_seqs.., task: 1351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518574, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 736, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3188)
[0000][PE] mean and std.dev: (706.07, 498.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 390.285 CPU sec, 21.817 real sec
[0000] Calling mem_process_seqs.., task: 1352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517663, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 436, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (824.53, 976.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 394.105 CPU sec, 22.022 real sec
[0000] Calling mem_process_seqs.., task: 1353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518313, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 586, 3746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10512)
[0000][PE] mean and std.dev: (1655.20, 1731.32)
[0000][PE] low and high boundaries for proper pairs: (1, 13895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 393.299 CPU sec, 22.077 real sec
[0000] Calling mem_process_seqs.., task: 1354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518116, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 532, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2559)
[0000][PE] mean and std.dev: (646.69, 529.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 397.198 CPU sec, 22.274 real sec
[0000] Calling mem_process_seqs.., task: 1355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518119, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 1577, 3259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9143)
[0000][PE] mean and std.dev: (1815.60, 1747.13)
[0000][PE] low and high boundaries for proper pairs: (1, 12085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.27, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 392.152 CPU sec, 21.938 real sec
[0000] Calling mem_process_seqs.., task: 1356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518324, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 929, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4988)
[0000][PE] mean and std.dev: (1139.55, 990.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.42, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1077, 2095, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5208)
[0000][PE] mean and std.dev: (2062.40, 1226.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 393.963 CPU sec, 22.076 real sec
[0000] Calling mem_process_seqs.., task: 1357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518231, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 411, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2724)
[0000][PE] mean and std.dev: (688.00, 626.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 391.252 CPU sec, 21.882 real sec
[0000] Calling mem_process_seqs.., task: 1358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517989, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 391, 2805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7809)
[0000][PE] mean and std.dev: (1194.64, 1302.98)
[0000][PE] low and high boundaries for proper pairs: (1, 10311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1342, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (1440.86, 955.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 395.586 CPU sec, 22.131 real sec
[0000] Calling mem_process_seqs.., task: 1359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518021, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 541, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6288)
[0000][PE] mean and std.dev: (921.36, 1216.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.03, 125.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 394.492 CPU sec, 22.053 real sec
[0000] Calling mem_process_seqs.., task: 1360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517756, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 577, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3687)
[0000][PE] mean and std.dev: (936.54, 855.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.03, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (552, 1413, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3357)
[0000][PE] mean and std.dev: (928.40, 533.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 392.513 CPU sec, 21.938 real sec
[0000] Calling mem_process_seqs.., task: 1361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517985, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 646, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4479)
[0000][PE] mean and std.dev: (1078.05, 1003.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 393.123 CPU sec, 22.003 real sec
[0000] Calling mem_process_seqs.., task: 1362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518320, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 345, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4703)
[0000][PE] mean and std.dev: (984.65, 1144.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 393.420 CPU sec, 21.994 real sec
[0000] Calling mem_process_seqs.., task: 1363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518426, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 357, 1276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (897.22, 865.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 393.254 CPU sec, 22.009 real sec
[0000] Calling mem_process_seqs.., task: 1364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518344, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 495, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3169)
[0000][PE] mean and std.dev: (714.84, 695.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1717, 2783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6497)
[0000][PE] mean and std.dev: (1702.00, 1239.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 391.466 CPU sec, 21.913 real sec
[0000] Calling mem_process_seqs.., task: 1365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517900, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 556, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2786)
[0000][PE] mean and std.dev: (765.78, 618.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.69, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 395.386 CPU sec, 22.113 real sec
[0000] Calling mem_process_seqs.., task: 1366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517952, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 907, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5654)
[0000][PE] mean and std.dev: (1217.07, 1078.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.77, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 395.871 CPU sec, 22.142 real sec
[0000] Calling mem_process_seqs.., task: 1367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517471, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 417, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4402)
[0000][PE] mean and std.dev: (908.38, 1104.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.75, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 394.128 CPU sec, 22.045 real sec
[0000] Calling mem_process_seqs.., task: 1368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517848, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 1092, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3506)
[0000][PE] mean and std.dev: (977.18, 705.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 392.074 CPU sec, 21.949 real sec
[0000] Calling mem_process_seqs.., task: 1369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517843, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 371, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2921)
[0000][PE] mean and std.dev: (657.23, 742.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 395.173 CPU sec, 22.095 real sec
[0000] Calling mem_process_seqs.., task: 1370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518445, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 623, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (888.45, 841.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 2282, 4130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10378)
[0000][PE] mean and std.dev: (2735.31, 2442.76)
[0000][PE] low and high boundaries for proper pairs: (1, 13502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 391.063 CPU sec, 21.905 real sec
[0000] Calling mem_process_seqs.., task: 1371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517979, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 584, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3722)
[0000][PE] mean and std.dev: (788.53, 767.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.70, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1902, 3362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8322)
[0000][PE] mean and std.dev: (2156.40, 1514.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 393.370 CPU sec, 21.991 real sec
[0000] Calling mem_process_seqs.., task: 1372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518012, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 981, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4312)
[0000][PE] mean and std.dev: (1165.88, 1071.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.70, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 1000, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4140)
[0000][PE] mean and std.dev: (1066.42, 646.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 396.059 CPU sec, 22.150 real sec
[0000] Calling mem_process_seqs.., task: 1373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517909, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 687, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3231)
[0000][PE] mean and std.dev: (861.69, 513.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.85, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1703, 2830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6102)
[0000][PE] mean and std.dev: (2030.83, 1402.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 396.809 CPU sec, 22.202 real sec
[0000] Calling mem_process_seqs.., task: 1374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518417, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 856, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4187)
[0000][PE] mean and std.dev: (865.92, 669.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.87, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 2142, 3756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9190)
[0000][PE] mean and std.dev: (2463.36, 1612.93)
[0000][PE] low and high boundaries for proper pairs: (1, 11907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 392.952 CPU sec, 21.954 real sec
[0000] Calling mem_process_seqs.., task: 1375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517794, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 692, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2247)
[0000][PE] mean and std.dev: (621.38, 376.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 392.985 CPU sec, 22.030 real sec
[0000] Calling mem_process_seqs.., task: 1376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517880, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 1023, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4600)
[0000][PE] mean and std.dev: (1085.82, 912.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1652, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3663)
[0000][PE] mean and std.dev: (1404.67, 425.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 394.332 CPU sec, 22.050 real sec
[0000] Calling mem_process_seqs.., task: 1377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518214, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 1109, 2519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6631)
[0000][PE] mean and std.dev: (1499.27, 1288.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.76, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 393.954 CPU sec, 22.039 real sec
[0000] Calling mem_process_seqs.., task: 1378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517958, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 336, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3083)
[0000][PE] mean and std.dev: (481.88, 434.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.38, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1110, 1270, 3111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7113)
[0000][PE] mean and std.dev: (1475.20, 1170.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9114)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 395.372 CPU sec, 22.146 real sec
[0000] Calling mem_process_seqs.., task: 1379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517436, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (473, 672, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3563)
[0000][PE] mean and std.dev: (860.90, 641.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1614, 3944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9704)
[0000][PE] mean and std.dev: (2192.31, 1756.44)
[0000][PE] low and high boundaries for proper pairs: (1, 12584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 394.455 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 1380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518214, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 1332, 2889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7829)
[0000][PE] mean and std.dev: (1777.62, 1839.87)
[0000][PE] low and high boundaries for proper pairs: (1, 10299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 390.250 CPU sec, 21.811 real sec
[0000] Calling mem_process_seqs.., task: 1381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518116, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 508, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4025)
[0000][PE] mean and std.dev: (951.47, 870.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1281, 1472, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4989)
[0000][PE] mean and std.dev: (1861.64, 935.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 394.011 CPU sec, 22.059 real sec
[0000] Calling mem_process_seqs.., task: 1382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518320, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 840, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2534)
[0000][PE] mean and std.dev: (702.64, 543.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (626, 1620, 3638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9662)
[0000][PE] mean and std.dev: (1974.69, 1574.50)
[0000][PE] low and high boundaries for proper pairs: (1, 12674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 394.379 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 1383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518281, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 385, 773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1827)
[0000][PE] mean and std.dev: (399.00, 223.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1926, 3499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8369)
[0000][PE] mean and std.dev: (2169.23, 1411.02)
[0000][PE] low and high boundaries for proper pairs: (1, 10804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 392.191 CPU sec, 21.969 real sec
[0000] Calling mem_process_seqs.., task: 1384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518133, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 545, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3236)
[0000][PE] mean and std.dev: (682.57, 452.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.79, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1541, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4617)
[0000][PE] mean and std.dev: (1441.20, 845.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 395.419 CPU sec, 22.125 real sec
[0000] Calling mem_process_seqs.., task: 1385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517533, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 528, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5399)
[0000][PE] mean and std.dev: (1167.00, 1293.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 398.179 CPU sec, 22.299 real sec
[0000] Calling mem_process_seqs.., task: 1386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518382, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 1120, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5534)
[0000][PE] mean and std.dev: (1308.73, 1098.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 394.942 CPU sec, 22.107 real sec
[0000] Calling mem_process_seqs.., task: 1387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517928, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 346, 734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1708)
[0000][PE] mean and std.dev: (432.74, 360.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1337, 2103, 3504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7838)
[0000][PE] mean and std.dev: (2162.33, 1275.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 395.901 CPU sec, 22.133 real sec
[0000] Calling mem_process_seqs.., task: 1388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518010, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 380, 761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1649)
[0000][PE] mean and std.dev: (468.00, 363.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 395.889 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 1389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517928, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 1018, 2528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6888)
[0000][PE] mean and std.dev: (1437.45, 1469.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 125.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 396.853 CPU sec, 22.214 real sec
[0000] Calling mem_process_seqs.., task: 1390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518175, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 902, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6016)
[0000][PE] mean and std.dev: (1387.39, 1438.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.25, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 396.042 CPU sec, 22.171 real sec
[0000] Calling mem_process_seqs.., task: 1391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517951, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 413, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3409)
[0000][PE] mean and std.dev: (603.21, 696.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 393.228 CPU sec, 22.000 real sec
[0000] Calling mem_process_seqs.., task: 1392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517746, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 347, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5670)
[0000][PE] mean and std.dev: (1123.45, 1478.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1306, 1780, 2927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6169)
[0000][PE] mean and std.dev: (1908.45, 1097.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 393.637 CPU sec, 21.986 real sec
[0000] Calling mem_process_seqs.., task: 1393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518152, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 399, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4585)
[0000][PE] mean and std.dev: (889.62, 1028.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1514, 2664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5830)
[0000][PE] mean and std.dev: (1665.15, 929.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 395.582 CPU sec, 22.114 real sec
[0000] Calling mem_process_seqs.., task: 1394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518065, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 455, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6351)
[0000][PE] mean and std.dev: (1280.13, 1479.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 394.908 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 1395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518192, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 389, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2437)
[0000][PE] mean and std.dev: (493.75, 382.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.88, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 393.413 CPU sec, 22.089 real sec
[0000] Calling mem_process_seqs.., task: 1396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517724, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 426, 948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2282)
[0000][PE] mean and std.dev: (627.24, 461.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 396.640 CPU sec, 22.235 real sec
[0000] Calling mem_process_seqs.., task: 1397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517972, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 381, 634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1396)
[0000][PE] mean and std.dev: (332.43, 140.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 395.158 CPU sec, 22.141 real sec
[0000] Calling mem_process_seqs.., task: 1398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517934, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 782, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (823.71, 634.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 2511, 4165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10425)
[0000][PE] mean and std.dev: (2671.15, 1807.85)
[0000][PE] low and high boundaries for proper pairs: (1, 13555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 398.747 CPU sec, 22.336 real sec
[0000] Calling mem_process_seqs.., task: 1399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518345, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 311, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3358)
[0000][PE] mean and std.dev: (652.36, 583.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.78, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1247, 2395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5655)
[0000][PE] mean and std.dev: (1621.20, 1138.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 392.721 CPU sec, 21.980 real sec
[0000] Calling mem_process_seqs.., task: 1400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518421, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 362, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1624)
[0000][PE] mean and std.dev: (487.93, 367.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.69, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (448, 1149, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5461)
[0000][PE] mean and std.dev: (1312.67, 1044.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 388.413 CPU sec, 21.726 real sec
[0000] Calling mem_process_seqs.., task: 1401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518343, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 509, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4082)
[0000][PE] mean and std.dev: (855.28, 818.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 393.142 CPU sec, 21.986 real sec
[0000] Calling mem_process_seqs.., task: 1402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518231, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 492, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2865)
[0000][PE] mean and std.dev: (706.54, 556.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 393.612 CPU sec, 22.004 real sec
[0000] Calling mem_process_seqs.., task: 1403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518156, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 1426, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6662)
[0000][PE] mean and std.dev: (1511.92, 1435.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 394.477 CPU sec, 22.101 real sec
[0000] Calling mem_process_seqs.., task: 1404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518375, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 491, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4447)
[0000][PE] mean and std.dev: (776.31, 692.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 392.759 CPU sec, 22.011 real sec
[0000] Calling mem_process_seqs.., task: 1405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518344, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 619, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6055)
[0000][PE] mean and std.dev: (1197.43, 1234.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.81, 124.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 868, 2784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7106)
[0000][PE] mean and std.dev: (1449.08, 1312.45)
[0000][PE] low and high boundaries for proper pairs: (1, 9267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 392.235 CPU sec, 21.967 real sec
[0000] Calling mem_process_seqs.., task: 1406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518517, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 920, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3926)
[0000][PE] mean and std.dev: (972.19, 947.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.79, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 392.792 CPU sec, 21.953 real sec
[0000] Calling mem_process_seqs.., task: 1407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517740, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 1033, 3442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9750)
[0000][PE] mean and std.dev: (2098.11, 2374.84)
[0000][PE] low and high boundaries for proper pairs: (1, 12904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.64, 125.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1667, 2979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7307)
[0000][PE] mean and std.dev: (1907.82, 1584.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 395.661 CPU sec, 22.124 real sec
[0000] Calling mem_process_seqs.., task: 1408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518202, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 395, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3512)
[0000][PE] mean and std.dev: (638.89, 525.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1507, 2169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4283)
[0000][PE] mean and std.dev: (1453.80, 768.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 394.247 CPU sec, 22.057 real sec
[0000] Calling mem_process_seqs.., task: 1409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518106, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 355, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4126)
[0000][PE] mean and std.dev: (784.62, 869.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 393.089 CPU sec, 22.008 real sec
[0000] Calling mem_process_seqs.., task: 1410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518167, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 1625, 3160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8780)
[0000][PE] mean and std.dev: (1874.44, 1810.14)
[0000][PE] low and high boundaries for proper pairs: (1, 11590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 393.998 CPU sec, 22.059 real sec
[0000] Calling mem_process_seqs.., task: 1411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518113, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 500, 746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1840)
[0000][PE] mean and std.dev: (457.57, 298.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.74, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 397.573 CPU sec, 22.249 real sec
[0000] Calling mem_process_seqs.., task: 1412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518114, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 425, 3310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9278)
[0000][PE] mean and std.dev: (1683.31, 2357.20)
[0000][PE] low and high boundaries for proper pairs: (1, 12262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 392.469 CPU sec, 21.927 real sec
[0000] Calling mem_process_seqs.., task: 1413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517674, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 387, 734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1616)
[0000][PE] mean and std.dev: (396.81, 224.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.65, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 397.861 CPU sec, 22.260 real sec
[0000] Calling mem_process_seqs.., task: 1414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517607, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 541, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3107)
[0000][PE] mean and std.dev: (683.89, 498.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.91, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 400.648 CPU sec, 22.400 real sec
[0000] Calling mem_process_seqs.., task: 1415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517891, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 486, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4143)
[0000][PE] mean and std.dev: (842.35, 706.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1712, 1909, 4256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9344)
[0000][PE] mean and std.dev: (2637.69, 1649.79)
[0000][PE] low and high boundaries for proper pairs: (1, 11888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 393.310 CPU sec, 22.072 real sec
[0000] Calling mem_process_seqs.., task: 1416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518011, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 586, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5081)
[0000][PE] mean and std.dev: (1031.62, 967.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.72, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 1804, 2936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6432)
[0000][PE] mean and std.dev: (2086.50, 1395.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 393.518 CPU sec, 22.028 real sec
[0000] Calling mem_process_seqs.., task: 1417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518062, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 510, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2539)
[0000][PE] mean and std.dev: (628.06, 407.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1660, 4114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10254)
[0000][PE] mean and std.dev: (2427.27, 1893.37)
[0000][PE] low and high boundaries for proper pairs: (1, 13324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 394.046 CPU sec, 22.012 real sec
[0000] Calling mem_process_seqs.., task: 1418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517824, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 487, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5149)
[0000][PE] mean and std.dev: (909.64, 1035.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.67, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 395.090 CPU sec, 22.121 real sec
[0000] Calling mem_process_seqs.., task: 1419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518382, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 456, 2475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6807)
[0000][PE] mean and std.dev: (1146.73, 1156.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 394.735 CPU sec, 22.085 real sec
[0000] Calling mem_process_seqs.., task: 1420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205398
	[0000][ M::kt_pipeline] read 1205398 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518095, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 544, 2291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6117)
[0000][PE] mean and std.dev: (981.85, 1012.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.13, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (516, 1185, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4953)
[0000][PE] mean and std.dev: (1245.70, 994.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 394.645 CPU sec, 22.057 real sec
[0000] Calling mem_process_seqs.., task: 1421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518176, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 656, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4484)
[0000][PE] mean and std.dev: (897.35, 772.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (824, 2397, 4138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10766)
[0000][PE] mean and std.dev: (2708.73, 2791.16)
[0000][PE] low and high boundaries for proper pairs: (1, 14080)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205398 reads in 392.859 CPU sec, 21.991 real sec
[0000] Calling mem_process_seqs.., task: 1422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518141, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 383, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (588.00, 603.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.75, 125.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 2239, 3257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7279)
[0000][PE] mean and std.dev: (2386.50, 1339.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 393.279 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 1423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518764, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 395, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4788)
[0000][PE] mean and std.dev: (750.07, 734.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 393.553 CPU sec, 22.022 real sec
[0000] Calling mem_process_seqs.., task: 1424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518098, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 362, 764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1868)
[0000][PE] mean and std.dev: (443.62, 405.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (628, 1156, 3352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8800)
[0000][PE] mean and std.dev: (1987.31, 2113.30)
[0000][PE] low and high boundaries for proper pairs: (1, 11524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 396.063 CPU sec, 22.120 real sec
[0000] Calling mem_process_seqs.., task: 1425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518498, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 1127, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5558)
[0000][PE] mean and std.dev: (1262.19, 829.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 394.298 CPU sec, 22.070 real sec
[0000] Calling mem_process_seqs.., task: 1426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517444, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 455, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (811.38, 715.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1497, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5326)
[0000][PE] mean and std.dev: (1515.11, 934.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 395.196 CPU sec, 22.096 real sec
[0000] Calling mem_process_seqs.., task: 1427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518142, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 465, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5273)
[0000][PE] mean and std.dev: (1093.39, 1177.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.83, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 397.896 CPU sec, 22.300 real sec
[0000] Calling mem_process_seqs.., task: 1428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518147, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 374, 887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2037)
[0000][PE] mean and std.dev: (514.72, 510.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 392.951 CPU sec, 21.976 real sec
[0000] Calling mem_process_seqs.., task: 1429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518429, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 638, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3033)
[0000][PE] mean and std.dev: (812.31, 705.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1508, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2949)
[0000][PE] mean and std.dev: (1249.11, 562.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 391.855 CPU sec, 21.904 real sec
[0000] Calling mem_process_seqs.., task: 1430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518094, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 320, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4183)
[0000][PE] mean and std.dev: (739.64, 795.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (482, 1676, 3023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8105)
[0000][PE] mean and std.dev: (1783.14, 1428.23)
[0000][PE] low and high boundaries for proper pairs: (1, 10646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 393.445 CPU sec, 21.990 real sec
[0000] Calling mem_process_seqs.., task: 1431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518157, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 412, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4092)
[0000][PE] mean and std.dev: (995.24, 1043.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.13, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1363, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4172)
[0000][PE] mean and std.dev: (1493.80, 736.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 390.266 CPU sec, 21.813 real sec
[0000] Calling mem_process_seqs.., task: 1432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517769, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 602, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (762.79, 579.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 394.048 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 1433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517886, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 386, 1016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2362)
[0000][PE] mean and std.dev: (705.47, 576.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1324, 2451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5465)
[0000][PE] mean and std.dev: (1428.64, 1089.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 394.943 CPU sec, 22.081 real sec
[0000] Calling mem_process_seqs.., task: 1434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205424
	[0000][ M::kt_pipeline] read 1205424 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517958, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 419, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3123)
[0000][PE] mean and std.dev: (693.79, 612.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1222, 2261, 3194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7138)
[0000][PE] mean and std.dev: (2331.14, 1290.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 394.774 CPU sec, 22.171 real sec
[0000] Calling mem_process_seqs.., task: 1435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518451, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 491, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (896.78, 818.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1614, 2958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7190)
[0000][PE] mean and std.dev: (1802.18, 1160.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205424 reads in 392.397 CPU sec, 21.956 real sec
[0000] Calling mem_process_seqs.., task: 1436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517989, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 488, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5455)
[0000][PE] mean and std.dev: (1022.22, 1163.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.26, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1025, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (20, 2160)
[0000][PE] mean and std.dev: (900.56, 248.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 395.823 CPU sec, 22.220 real sec
[0000] Calling mem_process_seqs.., task: 1437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518022, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 443, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3485)
[0000][PE] mean and std.dev: (795.67, 693.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.73, 125.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (515, 863, 2962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7856)
[0000][PE] mean and std.dev: (1415.54, 1471.15)
[0000][PE] low and high boundaries for proper pairs: (1, 10303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 395.310 CPU sec, 22.096 real sec
[0000] Calling mem_process_seqs.., task: 1438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517914, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 423, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (736.78, 664.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 394.672 CPU sec, 22.036 real sec
[0000] Calling mem_process_seqs.., task: 1439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518198, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 422, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (854.64, 808.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 396.828 CPU sec, 22.228 real sec
[0000] Calling mem_process_seqs.., task: 1440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517949, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 424, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5195)
[0000][PE] mean and std.dev: (749.89, 759.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 849, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2135)
[0000][PE] mean and std.dev: (736.11, 342.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 394.371 CPU sec, 22.151 real sec
[0000] Calling mem_process_seqs.., task: 1441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517962, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 801, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4649)
[0000][PE] mean and std.dev: (1128.56, 1043.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.76, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 392.579 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 1442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518079, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 692, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4242)
[0000][PE] mean and std.dev: (925.89, 788.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.41, 124.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 396.124 CPU sec, 22.172 real sec
[0000] Calling mem_process_seqs.., task: 1443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518258, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 399, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5427)
[0000][PE] mean and std.dev: (1241.80, 1319.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1759, 2551, 5649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13429)
[0000][PE] mean and std.dev: (3471.73, 2783.63)
[0000][PE] low and high boundaries for proper pairs: (1, 17319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 396.616 CPU sec, 22.212 real sec
[0000] Calling mem_process_seqs.., task: 1444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518468, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 431, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2724)
[0000][PE] mean and std.dev: (762.80, 677.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (551, 1037, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3791)
[0000][PE] mean and std.dev: (1043.54, 548.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 392.533 CPU sec, 21.953 real sec
[0000] Calling mem_process_seqs.., task: 1445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518106, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 736, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4312)
[0000][PE] mean and std.dev: (899.56, 765.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.27, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1303, 1938, 3236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7102)
[0000][PE] mean and std.dev: (2240.46, 1139.22)
[0000][PE] low and high boundaries for proper pairs: (1, 9035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 395.992 CPU sec, 22.161 real sec
[0000] Calling mem_process_seqs.., task: 1446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517980, 2, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1612, 2923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7123)
[0000][PE] mean and std.dev: (1944.69, 1737.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9223)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 397.331 CPU sec, 22.242 real sec
[0000] Calling mem_process_seqs.., task: 1447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518285, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 648, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3676)
[0000][PE] mean and std.dev: (938.25, 821.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1427, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3346)
[0000][PE] mean and std.dev: (1229.09, 513.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 396.697 CPU sec, 22.214 real sec
[0000] Calling mem_process_seqs.., task: 1448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517658, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.67, 125.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1545, 2990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6588)
[0000][PE] mean and std.dev: (2232.36, 1632.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8762)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 397.672 CPU sec, 22.223 real sec
[0000] Calling mem_process_seqs.., task: 1449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518101, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 342, 2428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6822)
[0000][PE] mean and std.dev: (888.81, 1170.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1512, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (1362.75, 572.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 395.627 CPU sec, 22.131 real sec
[0000] Calling mem_process_seqs.., task: 1450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517834, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 520, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3145)
[0000][PE] mean and std.dev: (761.00, 590.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 398.362 CPU sec, 22.286 real sec
[0000] Calling mem_process_seqs.., task: 1451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518411, 11, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 522, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2761)
[0000][PE] mean and std.dev: (624.89, 394.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (265, 413, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2344)
[0000][PE] mean and std.dev: (415.11, 309.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3037)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (686, 1550, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4736)
[0000][PE] mean and std.dev: (1082.62, 631.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 395.460 CPU sec, 22.156 real sec
[0000] Calling mem_process_seqs.., task: 1452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518097, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1348, 2977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6647)
[0000][PE] mean and std.dev: (1885.31, 1245.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8482)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 397.172 CPU sec, 22.218 real sec
[0000] Calling mem_process_seqs.., task: 1453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517838, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 305, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3360)
[0000][PE] mean and std.dev: (601.57, 686.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1271, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (1335.78, 906.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 394.058 CPU sec, 22.039 real sec
[0000] Calling mem_process_seqs.., task: 1454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518164, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 676, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5140)
[0000][PE] mean and std.dev: (1123.44, 1267.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.63, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1250, 1670, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4385)
[0000][PE] mean and std.dev: (1391.80, 769.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5430)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 393.519 CPU sec, 22.074 real sec
[0000] Calling mem_process_seqs.., task: 1455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518465, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 665, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4100)
[0000][PE] mean and std.dev: (994.47, 868.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.73, 125.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 393.085 CPU sec, 21.984 real sec
[0000] Calling mem_process_seqs.., task: 1456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518316, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 404, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3582)
[0000][PE] mean and std.dev: (750.20, 772.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (631, 1378, 3636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9646)
[0000][PE] mean and std.dev: (2172.80, 2028.12)
[0000][PE] low and high boundaries for proper pairs: (1, 12651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 392.334 CPU sec, 21.920 real sec
[0000] Calling mem_process_seqs.., task: 1457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517934, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 317, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2858)
[0000][PE] mean and std.dev: (666.62, 709.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.84, 125.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (523, 1153, 2920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7714)
[0000][PE] mean and std.dev: (1559.24, 1417.95)
[0000][PE] low and high boundaries for proper pairs: (1, 10111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 395.025 CPU sec, 22.093 real sec
[0000] Calling mem_process_seqs.., task: 1458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518199, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 487, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3250)
[0000][PE] mean and std.dev: (679.79, 590.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 396.182 CPU sec, 22.161 real sec
[0000] Calling mem_process_seqs.., task: 1459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517939, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 357, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3070)
[0000][PE] mean and std.dev: (671.42, 710.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1101, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3733)
[0000][PE] mean and std.dev: (1086.11, 503.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 394.499 CPU sec, 22.144 real sec
[0000] Calling mem_process_seqs.., task: 1460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518411, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 954, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4647)
[0000][PE] mean and std.dev: (1200.18, 1044.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.38, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1400, 2047, 3049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6347)
[0000][PE] mean and std.dev: (2308.83, 1469.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 391.416 CPU sec, 21.912 real sec
[0000] Calling mem_process_seqs.., task: 1461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518162, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 775, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5413)
[0000][PE] mean and std.dev: (1302.60, 1307.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1169, 1346, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 2750)
[0000][PE] mean and std.dev: (1283.43, 273.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 395.891 CPU sec, 22.129 real sec
[0000] Calling mem_process_seqs.., task: 1462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518168, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 402, 2492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6810)
[0000][PE] mean and std.dev: (1122.37, 1337.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.25, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (604, 1168, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5668)
[0000][PE] mean and std.dev: (1444.08, 1022.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 392.706 CPU sec, 21.941 real sec
[0000] Calling mem_process_seqs.., task: 1463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518238, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 625, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4173)
[0000][PE] mean and std.dev: (722.00, 694.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.63, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (467, 921, 3135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8471)
[0000][PE] mean and std.dev: (1800.55, 1468.06)
[0000][PE] low and high boundaries for proper pairs: (1, 11139)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (565, 939, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2785)
[0000][PE] mean and std.dev: (956.42, 536.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 392.753 CPU sec, 22.009 real sec
[0000] Calling mem_process_seqs.., task: 1464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518245, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 530, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3630)
[0000][PE] mean and std.dev: (741.57, 643.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 393.208 CPU sec, 22.004 real sec
[0000] Calling mem_process_seqs.., task: 1465
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517585, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 466, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2230)
[0000][PE] mean and std.dev: (531.67, 446.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.93, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1648, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3929)
[0000][PE] mean and std.dev: (1475.10, 558.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 394.538 CPU sec, 22.306 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000124 bp)...
[0000] Calling mem_process_seqs.., task: 1466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 518168, 4, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 391.761 CPU sec, 21.989 real sec
[0000] Calling mem_process_seqs.., task: 1467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518057, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 677, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (876.07, 848.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.73, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (723, 1257, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3426)
[0000][PE] mean and std.dev: (1102.78, 641.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 395.162 CPU sec, 22.152 real sec
[0000] Calling mem_process_seqs.., task: 1468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517884, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 427, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (901.12, 920.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.51, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 400.803 CPU sec, 22.433 real sec
[0000] Calling mem_process_seqs.., task: 1469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518253, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 356, 751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1697)
[0000][PE] mean and std.dev: (382.00, 184.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 1388, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3827)
[0000][PE] mean and std.dev: (1156.40, 657.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 397.552 CPU sec, 22.275 real sec
[0000] Calling mem_process_seqs.., task: 1470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518239, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 471, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3135)
[0000][PE] mean and std.dev: (683.05, 652.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.67, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 394.904 CPU sec, 22.067 real sec
[0000] Calling mem_process_seqs.., task: 1471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518069, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 1289, 2450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6576)
[0000][PE] mean and std.dev: (1438.90, 1276.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.75, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (146, 1460, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6080)
[0000][PE] mean and std.dev: (1221.11, 1297.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8058)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1683, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3112)
[0000][PE] mean and std.dev: (1431.90, 493.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 392.473 CPU sec, 21.976 real sec
[0000] Calling mem_process_seqs.., task: 1472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517902, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 322, 729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1653)
[0000][PE] mean and std.dev: (440.28, 308.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.63, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 396.853 CPU sec, 22.212 real sec
[0000] Calling mem_process_seqs.., task: 1473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517634, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 440, 852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1976)
[0000][PE] mean and std.dev: (624.89, 465.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.31, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 396.151 CPU sec, 22.163 real sec
[0000] Calling mem_process_seqs.., task: 1474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518116, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 698, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7509)
[0000][PE] mean and std.dev: (1567.11, 1488.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1828, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4172)
[0000][PE] mean and std.dev: (1650.33, 807.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 395.777 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 1475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518028, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 634, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (881.50, 744.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.42, 124.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 393.551 CPU sec, 22.020 real sec
[0000] Calling mem_process_seqs.., task: 1476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 518284, 9, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.57, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 971, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5729)
[0000][PE] mean and std.dev: (1256.92, 784.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7438)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 396.699 CPU sec, 22.155 real sec
[0000] Calling mem_process_seqs.., task: 1477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517904, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 341, 492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1020)
[0000][PE] mean and std.dev: (318.53, 112.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.39, 124.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 396.462 CPU sec, 22.196 real sec
[0000] Calling mem_process_seqs.., task: 1478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518016, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 744, 2353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6399)
[0000][PE] mean and std.dev: (1209.71, 1156.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.70, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1113, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4817)
[0000][PE] mean and std.dev: (1344.86, 900.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 397.317 CPU sec, 22.244 real sec
[0000] Calling mem_process_seqs.., task: 1479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517857, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 462, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1630)
[0000][PE] mean and std.dev: (529.73, 314.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.87, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 394.310 CPU sec, 22.077 real sec
[0000] Calling mem_process_seqs.., task: 1480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517837, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 276, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2335)
[0000][PE] mean and std.dev: (538.00, 547.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (701, 1182, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4958)
[0000][PE] mean and std.dev: (1059.09, 638.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 399.941 CPU sec, 22.397 real sec
[0000] Calling mem_process_seqs.., task: 1481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518247, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 1208, 3488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9842)
[0000][PE] mean and std.dev: (1461.92, 1409.27)
[0000][PE] low and high boundaries for proper pairs: (1, 13019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.06, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (399, 1743, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5139)
[0000][PE] mean and std.dev: (1350.50, 893.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 393.539 CPU sec, 22.028 real sec
[0000] Calling mem_process_seqs.., task: 1482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518131, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 471, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3853)
[0000][PE] mean and std.dev: (812.81, 732.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1970, 2778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6330)
[0000][PE] mean and std.dev: (2131.71, 1398.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 395.847 CPU sec, 22.155 real sec
[0000] Calling mem_process_seqs.., task: 1483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518099, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 983, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3288)
[0000][PE] mean and std.dev: (755.36, 505.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 2012, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4462)
[0000][PE] mean and std.dev: (1483.56, 782.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 394.737 CPU sec, 22.133 real sec
[0000] Calling mem_process_seqs.., task: 1484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518236, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 740, 2798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7792)
[0000][PE] mean and std.dev: (1239.93, 1419.14)
[0000][PE] low and high boundaries for proper pairs: (1, 10289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.24, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 397.620 CPU sec, 22.281 real sec
[0000] Calling mem_process_seqs.., task: 1485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517780, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 1391, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4899)
[0000][PE] mean and std.dev: (1291.26, 1009.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1763, 3993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9985)
[0000][PE] mean and std.dev: (2330.83, 1723.43)
[0000][PE] low and high boundaries for proper pairs: (1, 12981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 401.189 CPU sec, 22.506 real sec
[0000] Calling mem_process_seqs.., task: 1486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 517923, 6, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 394.557 CPU sec, 22.068 real sec
[0000] Calling mem_process_seqs.., task: 1487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205362
	[0000][ M::kt_pipeline] read 1205362 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518708, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 725, 2687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7415)
[0000][PE] mean and std.dev: (1245.50, 1512.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 395.548 CPU sec, 22.125 real sec
[0000] Calling mem_process_seqs.., task: 1488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517773, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 471, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3046)
[0000][PE] mean and std.dev: (728.72, 659.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.74, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205362 reads in 396.847 CPU sec, 22.189 real sec
[0000] Calling mem_process_seqs.., task: 1489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518096, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 377, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2751)
[0000][PE] mean and std.dev: (690.82, 585.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (660, 1419, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (1267.39, 673.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 397.511 CPU sec, 22.239 real sec
[0000] Calling mem_process_seqs.., task: 1490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518351, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 428, 976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2314)
[0000][PE] mean and std.dev: (517.73, 286.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 395.079 CPU sec, 22.095 real sec
[0000] Calling mem_process_seqs.., task: 1491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518138, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 450, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3013)
[0000][PE] mean and std.dev: (585.40, 451.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.86, 125.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 396.288 CPU sec, 22.162 real sec
[0000] Calling mem_process_seqs.., task: 1492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517865, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 550, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4763)
[0000][PE] mean and std.dev: (884.53, 767.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (511, 807, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5335)
[0000][PE] mean and std.dev: (1551.45, 1259.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 397.815 CPU sec, 22.248 real sec
[0000] Calling mem_process_seqs.., task: 1493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517894, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 848, 2999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8289)
[0000][PE] mean and std.dev: (1642.24, 1869.05)
[0000][PE] low and high boundaries for proper pairs: (1, 10934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.73, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 396.063 CPU sec, 22.148 real sec
[0000] Calling mem_process_seqs.., task: 1494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518484, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 634, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5396)
[0000][PE] mean and std.dev: (963.88, 1035.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1060, 2971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6959)
[0000][PE] mean and std.dev: (1482.30, 878.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 395.248 CPU sec, 22.109 real sec
[0000] Calling mem_process_seqs.., task: 1495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518355, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 388, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5477)
[0000][PE] mean and std.dev: (1246.45, 1280.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 395.415 CPU sec, 22.123 real sec
[0000] Calling mem_process_seqs.., task: 1496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517906, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 458, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1269)
[0000][PE] mean and std.dev: (457.00, 287.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1420, 1777, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4684)
[0000][PE] mean and std.dev: (1696.50, 674.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 397.310 CPU sec, 22.225 real sec
[0000] Calling mem_process_seqs.., task: 1497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518175, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 605, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2193)
[0000][PE] mean and std.dev: (532.50, 401.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 398.416 CPU sec, 22.351 real sec
[0000] Calling mem_process_seqs.., task: 1498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518144, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 931, 2904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7888)
[0000][PE] mean and std.dev: (1154.42, 1069.05)
[0000][PE] low and high boundaries for proper pairs: (1, 10380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 395.425 CPU sec, 22.145 real sec
[0000] Calling mem_process_seqs.., task: 1499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518080, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 706, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3525)
[0000][PE] mean and std.dev: (910.62, 760.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 399.053 CPU sec, 22.306 real sec
[0000] Calling mem_process_seqs.., task: 1500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517719, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 730, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (961.68, 806.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (357, 1458, 2981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8229)
[0000][PE] mean and std.dev: (1680.00, 1467.45)
[0000][PE] low and high boundaries for proper pairs: (1, 10853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 398.223 CPU sec, 22.269 real sec
[0000] Calling mem_process_seqs.., task: 1501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518075, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 456, 2259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6389)
[0000][PE] mean and std.dev: (1008.69, 1067.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 396.345 CPU sec, 22.169 real sec
[0000] Calling mem_process_seqs.., task: 1502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518437, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 397, 1035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2829)
[0000][PE] mean and std.dev: (448.92, 413.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.26, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 397.509 CPU sec, 22.256 real sec
[0000] Calling mem_process_seqs.., task: 1503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518502, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 428, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (876.08, 949.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1312, 2623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6289)
[0000][PE] mean and std.dev: (1512.50, 961.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 394.841 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 1504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517888, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 860, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4127)
[0000][PE] mean and std.dev: (945.19, 631.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1291, 1693, 3335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7423)
[0000][PE] mean and std.dev: (1838.60, 1366.54)
[0000][PE] low and high boundaries for proper pairs: (1, 9467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 398.632 CPU sec, 22.285 real sec
[0000] Calling mem_process_seqs.., task: 1505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518325, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 502, 890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2100)
[0000][PE] mean and std.dev: (605.93, 491.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 396.578 CPU sec, 22.171 real sec
[0000] Calling mem_process_seqs.., task: 1506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517781, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 641, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4034)
[0000][PE] mean and std.dev: (936.00, 863.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.29, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 397.217 CPU sec, 22.220 real sec
[0000] Calling mem_process_seqs.., task: 1507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518364, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 1284, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3698)
[0000][PE] mean and std.dev: (1046.61, 805.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.51, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 393.076 CPU sec, 21.966 real sec
[0000] Calling mem_process_seqs.., task: 1508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517920, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 773, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5691)
[0000][PE] mean and std.dev: (1187.76, 1048.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.14, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1385, 1774, 3382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7376)
[0000][PE] mean and std.dev: (2283.17, 1417.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 396.300 CPU sec, 22.156 real sec
[0000] Calling mem_process_seqs.., task: 1509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517939, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 348, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 912)
[0000][PE] mean and std.dev: (371.33, 121.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.36, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1679, 3054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7364)
[0000][PE] mean and std.dev: (2096.38, 1889.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 393.932 CPU sec, 22.047 real sec
[0000] Calling mem_process_seqs.., task: 1510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518531, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 280, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1689)
[0000][PE] mean and std.dev: (397.41, 324.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 394.608 CPU sec, 22.058 real sec
[0000] Calling mem_process_seqs.., task: 1511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517842, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 273, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3113)
[0000][PE] mean and std.dev: (683.60, 804.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 1343, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5955)
[0000][PE] mean and std.dev: (1620.75, 1402.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 394.876 CPU sec, 22.107 real sec
[0000] Calling mem_process_seqs.., task: 1512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518247, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 514, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (836.57, 771.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 397.438 CPU sec, 22.235 real sec
[0000] Calling mem_process_seqs.., task: 1513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518389, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 393, 858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2160)
[0000][PE] mean and std.dev: (594.39, 568.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 395.319 CPU sec, 22.119 real sec
[0000] Calling mem_process_seqs.., task: 1514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518002, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 453, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (764.42, 827.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.24, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1072, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4293)
[0000][PE] mean and std.dev: (1291.80, 771.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 394.513 CPU sec, 22.117 real sec
[0000] Calling mem_process_seqs.., task: 1515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518432, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 374, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (564.25, 610.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 2225, 3888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9972)
[0000][PE] mean and std.dev: (2578.70, 2186.49)
[0000][PE] low and high boundaries for proper pairs: (1, 13014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 396.223 CPU sec, 22.125 real sec
[0000] Calling mem_process_seqs.., task: 1516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517643, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 397, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3079)
[0000][PE] mean and std.dev: (661.59, 585.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 399.366 CPU sec, 22.330 real sec
[0000] Calling mem_process_seqs.., task: 1517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518104, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 339, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1248)
[0000][PE] mean and std.dev: (351.33, 163.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 125.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 396.090 CPU sec, 22.164 real sec
[0000] Calling mem_process_seqs.., task: 1518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517881, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 1145, 2698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7298)
[0000][PE] mean and std.dev: (1218.36, 1118.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1824, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (1464.78, 479.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 394.498 CPU sec, 22.036 real sec
[0000] Calling mem_process_seqs.., task: 1519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518040, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (543, 1013, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3639)
[0000][PE] mean and std.dev: (980.05, 590.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.65, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (639, 1195, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3288)
[0000][PE] mean and std.dev: (1297.80, 888.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 399.800 CPU sec, 22.376 real sec
[0000] Calling mem_process_seqs.., task: 1520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518342, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 435, 706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1560)
[0000][PE] mean and std.dev: (483.36, 279.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (456, 852, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4071)
[0000][PE] mean and std.dev: (988.40, 685.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 393.486 CPU sec, 21.989 real sec
[0000] Calling mem_process_seqs.., task: 1521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518062, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 414, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (1254.59, 1517.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1256, 2169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1462.87, 823.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 395.114 CPU sec, 22.108 real sec
[0000] Calling mem_process_seqs.., task: 1522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518003, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 790, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6216)
[0000][PE] mean and std.dev: (1275.28, 1069.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1408, 3158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7694)
[0000][PE] mean and std.dev: (1808.94, 1475.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 393.920 CPU sec, 22.045 real sec
[0000] Calling mem_process_seqs.., task: 1523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518057, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 630, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4585)
[0000][PE] mean and std.dev: (1153.50, 1152.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 1562, 2985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6405)
[0000][PE] mean and std.dev: (1975.82, 1375.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 397.516 CPU sec, 22.226 real sec
[0000] Calling mem_process_seqs.., task: 1524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517965, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 533, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5208)
[0000][PE] mean and std.dev: (1268.43, 1291.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.76, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1753, 2144, 3287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6355)
[0000][PE] mean and std.dev: (2120.00, 786.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 396.828 CPU sec, 22.198 real sec
[0000] Calling mem_process_seqs.., task: 1525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518371, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.71, 125.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 393.271 CPU sec, 21.982 real sec
[0000] Calling mem_process_seqs.., task: 1526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518053, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 702, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4648)
[0000][PE] mean and std.dev: (985.64, 736.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.25, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1743, 3609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9035)
[0000][PE] mean and std.dev: (2243.33, 1807.97)
[0000][PE] low and high boundaries for proper pairs: (1, 11748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 394.511 CPU sec, 22.064 real sec
[0000] Calling mem_process_seqs.., task: 1527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518043, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 390, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3662)
[0000][PE] mean and std.dev: (599.08, 544.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 1091, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4213)
[0000][PE] mean and std.dev: (1051.33, 1052.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 397.216 CPU sec, 22.204 real sec
[0000] Calling mem_process_seqs.., task: 1528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518025, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 480, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4695)
[0000][PE] mean and std.dev: (1035.32, 1032.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 395.787 CPU sec, 22.159 real sec
[0000] Calling mem_process_seqs.., task: 1529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517918, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 721, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4556)
[0000][PE] mean and std.dev: (1070.00, 968.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 394.863 CPU sec, 22.090 real sec
[0000] Calling mem_process_seqs.., task: 1530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517822, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 616, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4519)
[0000][PE] mean and std.dev: (866.92, 898.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1424, 1499, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4157)
[0000][PE] mean and std.dev: (1590.25, 757.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 396.167 CPU sec, 22.168 real sec
[0000] Calling mem_process_seqs.., task: 1531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518301, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 310, 354)
[0000][PE] low and high boundaries for computing mean and std.dev: (27, 572)
[0000][PE] mean and std.dev: (246.89, 101.32)
[0000][PE] low and high boundaries for proper pairs: (1, 681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.21, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1458, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3065)
[0000][PE] mean and std.dev: (1214.00, 506.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 394.754 CPU sec, 22.064 real sec
[0000] Calling mem_process_seqs.., task: 1532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518204, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 657, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4779)
[0000][PE] mean and std.dev: (1106.11, 1016.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 396.193 CPU sec, 22.199 real sec
[0000] Calling mem_process_seqs.., task: 1533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518175, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 594, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3684)
[0000][PE] mean and std.dev: (819.00, 582.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 394.447 CPU sec, 22.094 real sec
[0000] Calling mem_process_seqs.., task: 1534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517658, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 619, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1904)
[0000][PE] mean and std.dev: (601.94, 440.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (572, 1694, 5429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15143)
[0000][PE] mean and std.dev: (2759.88, 2691.92)
[0000][PE] low and high boundaries for proper pairs: (1, 20000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 398.613 CPU sec, 22.369 real sec
[0000] Calling mem_process_seqs.., task: 1535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518220, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (469, 640, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5368)
[0000][PE] mean and std.dev: (1012.57, 852.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1425, 1784, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4350)
[0000][PE] mean and std.dev: (1832.08, 916.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 394.955 CPU sec, 22.083 real sec
[0000] Calling mem_process_seqs.., task: 1536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518284, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 681, 3531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9829)
[0000][PE] mean and std.dev: (1777.77, 2345.25)
[0000][PE] low and high boundaries for proper pairs: (1, 12978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.53, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1369, 3208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7548)
[0000][PE] mean and std.dev: (1780.56, 1199.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 395.279 CPU sec, 22.087 real sec
[0000] Calling mem_process_seqs.., task: 1537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517913, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 426, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3726)
[0000][PE] mean and std.dev: (704.89, 832.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.51, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1624, 4005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9985)
[0000][PE] mean and std.dev: (2064.64, 1702.67)
[0000][PE] low and high boundaries for proper pairs: (1, 12975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 394.962 CPU sec, 22.101 real sec
[0000] Calling mem_process_seqs.., task: 1538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 517918, 10, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (176, 2209, 4146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12086)
[0000][PE] mean and std.dev: (2256.80, 2020.46)
[0000][PE] low and high boundaries for proper pairs: (1, 16056)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 395.871 CPU sec, 22.203 real sec
[0000] Calling mem_process_seqs.., task: 1539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517981, 2, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1464, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4202)
[0000][PE] mean and std.dev: (1615.59, 898.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5248)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 395.893 CPU sec, 22.128 real sec
[0000] Calling mem_process_seqs.., task: 1540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517559, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 568, 2176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5870)
[0000][PE] mean and std.dev: (1117.33, 1128.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 395.219 CPU sec, 22.093 real sec
[0000] Calling mem_process_seqs.., task: 1541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518106, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (604, 1051, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3727)
[0000][PE] mean and std.dev: (1124.69, 761.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.81, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 390.822 CPU sec, 21.832 real sec
[0000] Calling mem_process_seqs.., task: 1542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517508, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (549, 790, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5118)
[0000][PE] mean and std.dev: (1238.09, 944.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 396.008 CPU sec, 22.198 real sec
[0000] Calling mem_process_seqs.., task: 1543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518246, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 809, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3329)
[0000][PE] mean and std.dev: (796.42, 713.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.47, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 393.442 CPU sec, 22.022 real sec
[0000] Calling mem_process_seqs.., task: 1544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517946, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 587, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (684.62, 464.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.45, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 2004, 3035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7057)
[0000][PE] mean and std.dev: (2090.10, 1080.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 396.681 CPU sec, 22.163 real sec
[0000] Calling mem_process_seqs.., task: 1545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518068, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 361, 892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2202)
[0000][PE] mean and std.dev: (417.60, 325.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.71, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 396.251 CPU sec, 22.217 real sec
[0000] Calling mem_process_seqs.., task: 1546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518138, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 1148, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4976)
[0000][PE] mean and std.dev: (1200.06, 1102.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.62, 125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1257, 1676, 3529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8073)
[0000][PE] mean and std.dev: (2098.13, 1342.08)
[0000][PE] low and high boundaries for proper pairs: (1, 10345)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 394.018 CPU sec, 22.044 real sec
[0000] Calling mem_process_seqs.., task: 1547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518506, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 379, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2507)
[0000][PE] mean and std.dev: (566.14, 425.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1510, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4210)
[0000][PE] mean and std.dev: (1435.62, 773.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 391.693 CPU sec, 21.948 real sec
[0000] Calling mem_process_seqs.., task: 1548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517936, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 309, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2868)
[0000][PE] mean and std.dev: (713.57, 720.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1543, 4068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10354)
[0000][PE] mean and std.dev: (2719.09, 2165.46)
[0000][PE] low and high boundaries for proper pairs: (1, 13497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 396.463 CPU sec, 22.161 real sec
[0000] Calling mem_process_seqs.., task: 1549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517532, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 371, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4497)
[0000][PE] mean and std.dev: (1054.89, 1116.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.90, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1447, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3784)
[0000][PE] mean and std.dev: (1385.33, 531.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 398.292 CPU sec, 22.254 real sec
[0000] Calling mem_process_seqs.., task: 1550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518492, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 572, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3386)
[0000][PE] mean and std.dev: (816.56, 738.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1360, 1651, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5005)
[0000][PE] mean and std.dev: (1464.78, 588.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 390.021 CPU sec, 21.811 real sec
[0000] Calling mem_process_seqs.., task: 1551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518236, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 386, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5737)
[0000][PE] mean and std.dev: (1070.40, 1402.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 396.004 CPU sec, 22.144 real sec
[0000] Calling mem_process_seqs.., task: 1552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518659, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 490, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (1005.29, 932.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.63, 124.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1167, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3914)
[0000][PE] mean and std.dev: (1314.45, 561.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 392.678 CPU sec, 21.959 real sec
[0000] Calling mem_process_seqs.., task: 1553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517890, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (474, 1024, 2777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7383)
[0000][PE] mean and std.dev: (1552.84, 1630.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.39, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1304, 2088, 2552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5048)
[0000][PE] mean and std.dev: (1888.08, 756.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 397.601 CPU sec, 22.269 real sec
[0000] Calling mem_process_seqs.., task: 1554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518167, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 410, 810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1732)
[0000][PE] mean and std.dev: (557.08, 382.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.41, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (538, 1363, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4003)
[0000][PE] mean and std.dev: (1210.80, 774.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 394.287 CPU sec, 22.053 real sec
[0000] Calling mem_process_seqs.., task: 1555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518032, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 1267, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4818)
[0000][PE] mean and std.dev: (1213.59, 1005.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 125.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 395.739 CPU sec, 22.135 real sec
[0000] Calling mem_process_seqs.., task: 1556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518183, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 1108, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6366)
[0000][PE] mean and std.dev: (1307.20, 1197.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.71, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (640, 1166, 3087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7981)
[0000][PE] mean and std.dev: (1611.83, 1381.53)
[0000][PE] low and high boundaries for proper pairs: (1, 10428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 393.434 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 1557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518175, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 408, 756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1544)
[0000][PE] mean and std.dev: (373.00, 162.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 395.815 CPU sec, 22.120 real sec
[0000] Calling mem_process_seqs.., task: 1558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517692, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 378, 2692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7500)
[0000][PE] mean and std.dev: (1353.14, 1662.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1723, 1902, 2965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5449)
[0000][PE] mean and std.dev: (1953.40, 1056.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 395.122 CPU sec, 22.078 real sec
[0000] Calling mem_process_seqs.., task: 1559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518184, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 549, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5622)
[0000][PE] mean and std.dev: (1322.60, 1404.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.74, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 393.969 CPU sec, 22.071 real sec
[0000] Calling mem_process_seqs.., task: 1560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517906, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 495, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4499)
[0000][PE] mean and std.dev: (734.53, 739.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.39, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1516, 1828, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (584, 2914)
[0000][PE] mean and std.dev: (1727.36, 430.36)
[0000][PE] low and high boundaries for proper pairs: (6, 3449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 395.926 CPU sec, 22.192 real sec
[0000] Calling mem_process_seqs.., task: 1561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518284, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 449, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2525)
[0000][PE] mean and std.dev: (569.71, 444.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.24, 124.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1274, 1708, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (1551.20, 598.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 394.185 CPU sec, 22.032 real sec
[0000] Calling mem_process_seqs.., task: 1562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518227, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 512, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4867)
[0000][PE] mean and std.dev: (797.35, 756.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 906, 2751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7597)
[0000][PE] mean and std.dev: (1675.08, 1734.41)
[0000][PE] low and high boundaries for proper pairs: (1, 10020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 395.480 CPU sec, 22.129 real sec
[0000] Calling mem_process_seqs.., task: 1563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518196, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 1010, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5148)
[0000][PE] mean and std.dev: (1015.62, 951.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 395.773 CPU sec, 22.130 real sec
[0000] Calling mem_process_seqs.., task: 1564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517901, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 1038, 2587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7263)
[0000][PE] mean and std.dev: (1282.47, 1180.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 395.791 CPU sec, 22.136 real sec
[0000] Calling mem_process_seqs.., task: 1565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518309, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (414, 1032, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4986)
[0000][PE] mean and std.dev: (1280.31, 1041.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.86, 125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1252, 1895, 3362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7582)
[0000][PE] mean and std.dev: (2416.27, 1995.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 395.517 CPU sec, 22.161 real sec
[0000] Calling mem_process_seqs.., task: 1566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518447, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 900, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4462)
[0000][PE] mean and std.dev: (1205.93, 1171.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.87, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 392.884 CPU sec, 21.998 real sec
[0000] Calling mem_process_seqs.., task: 1567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517904, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 744, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5211)
[0000][PE] mean and std.dev: (1214.00, 1265.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.75, 125.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1566, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5209)
[0000][PE] mean and std.dev: (1539.21, 844.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 395.346 CPU sec, 22.144 real sec
[0000] Calling mem_process_seqs.., task: 1568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518207, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 445, 4683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13447)
[0000][PE] mean and std.dev: (1640.77, 2037.11)
[0000][PE] low and high boundaries for proper pairs: (1, 17829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.32, 124.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 396.237 CPU sec, 22.184 real sec
[0000] Calling mem_process_seqs.., task: 1569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517991, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 309, 793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1955)
[0000][PE] mean and std.dev: (377.33, 301.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 391.750 CPU sec, 21.913 real sec
[0000] Calling mem_process_seqs.., task: 1570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205364
	[0000][ M::kt_pipeline] read 1205364 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517864, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 462, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4373)
[0000][PE] mean and std.dev: (854.12, 944.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1840, 3831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9377)
[0000][PE] mean and std.dev: (2678.19, 2187.05)
[0000][PE] low and high boundaries for proper pairs: (1, 12150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 398.458 CPU sec, 22.274 real sec
[0000] Calling mem_process_seqs.., task: 1571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517989, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 784, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3066)
[0000][PE] mean and std.dev: (854.25, 757.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205364 reads in 393.986 CPU sec, 22.044 real sec
[0000] Calling mem_process_seqs.., task: 1572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517717, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 332, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (749.54, 736.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1464, 1746, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (384, 3084)
[0000][PE] mean and std.dev: (1621.56, 424.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 398.293 CPU sec, 22.258 real sec
[0000] Calling mem_process_seqs.., task: 1573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 518015, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 395.831 CPU sec, 22.145 real sec
[0000] Calling mem_process_seqs.., task: 1574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517810, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 681, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3112)
[0000][PE] mean and std.dev: (822.35, 693.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (339, 525, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3009)
[0000][PE] mean and std.dev: (611.90, 390.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 398.191 CPU sec, 22.244 real sec
[0000] Calling mem_process_seqs.., task: 1575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518136, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.64, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1226, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2795)
[0000][PE] mean and std.dev: (1145.88, 298.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3374)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 394.718 CPU sec, 22.058 real sec
[0000] Calling mem_process_seqs.., task: 1576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518284, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 412, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4523)
[0000][PE] mean and std.dev: (750.07, 640.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 395.278 CPU sec, 22.133 real sec
[0000] Calling mem_process_seqs.., task: 1577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518003, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 878, 2703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7483)
[0000][PE] mean and std.dev: (1663.92, 1933.75)
[0000][PE] low and high boundaries for proper pairs: (1, 9873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.64, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 398.517 CPU sec, 22.306 real sec
[0000] Calling mem_process_seqs.., task: 1578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518129, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 915, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (930.57, 618.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 396.638 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 1579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518124, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 753, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3297)
[0000][PE] mean and std.dev: (698.67, 576.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 395.518 CPU sec, 22.122 real sec
[0000] Calling mem_process_seqs.., task: 1580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518082, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 1263, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4905)
[0000][PE] mean and std.dev: (839.89, 717.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.63, 125.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 398.320 CPU sec, 22.261 real sec
[0000] Calling mem_process_seqs.., task: 1581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518256, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 308, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1223)
[0000][PE] mean and std.dev: (410.46, 328.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1657, 2652, 3464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7078)
[0000][PE] mean and std.dev: (2479.56, 914.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 394.970 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 1582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518340, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 1259, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3623)
[0000][PE] mean and std.dev: (838.78, 547.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 393.717 CPU sec, 22.020 real sec
[0000] Calling mem_process_seqs.., task: 1583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518548, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 513, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1589)
[0000][PE] mean and std.dev: (327.80, 208.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1554, 2756, 3265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6687)
[0000][PE] mean and std.dev: (2403.58, 1124.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 394.690 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 1584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517756, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 463, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3150)
[0000][PE] mean and std.dev: (582.06, 437.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.92, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 399.307 CPU sec, 22.362 real sec
[0000] Calling mem_process_seqs.., task: 1585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518114, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 959, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3208)
[0000][PE] mean and std.dev: (866.86, 766.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1439, 1691, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (1720.67, 761.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 393.243 CPU sec, 21.976 real sec
[0000] Calling mem_process_seqs.., task: 1586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517956, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (474, 1659, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6777)
[0000][PE] mean and std.dev: (1592.85, 1326.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (641, 1372, 4822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13184)
[0000][PE] mean and std.dev: (2319.33, 2257.24)
[0000][PE] low and high boundaries for proper pairs: (1, 17365)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 394.173 CPU sec, 22.047 real sec
[0000] Calling mem_process_seqs.., task: 1587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517851, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (105, 344, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2814)
[0000][PE] mean and std.dev: (560.89, 603.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (655, 743, 3611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9523)
[0000][PE] mean and std.dev: (1781.64, 1571.76)
[0000][PE] low and high boundaries for proper pairs: (1, 12479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 393.862 CPU sec, 22.031 real sec
[0000] Calling mem_process_seqs.., task: 1588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517953, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 288, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2486)
[0000][PE] mean and std.dev: (450.00, 484.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 394.452 CPU sec, 22.076 real sec
[0000] Calling mem_process_seqs.., task: 1589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518307, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 477, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3094)
[0000][PE] mean and std.dev: (745.31, 770.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.58, 125.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 393.115 CPU sec, 22.010 real sec
[0000] Calling mem_process_seqs.., task: 1590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518263, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (704, 1432, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5030)
[0000][PE] mean and std.dev: (1706.16, 1252.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 394.130 CPU sec, 22.055 real sec
[0000] Calling mem_process_seqs.., task: 1591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518238, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 574, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3926)
[0000][PE] mean and std.dev: (913.88, 805.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 2253, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5589)
[0000][PE] mean and std.dev: (1812.70, 776.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 393.634 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 1592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517838, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 1133, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3261)
[0000][PE] mean and std.dev: (846.31, 458.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.46, 125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 396.775 CPU sec, 22.237 real sec
[0000] Calling mem_process_seqs.., task: 1593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518203, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 479, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4039)
[0000][PE] mean and std.dev: (646.08, 509.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.73, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1086, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2409)
[0000][PE] mean and std.dev: (976.70, 410.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 396.671 CPU sec, 22.201 real sec
[0000] Calling mem_process_seqs.., task: 1594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518707, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (483, 837, 2563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6723)
[0000][PE] mean and std.dev: (1452.00, 1209.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 391.671 CPU sec, 21.884 real sec
[0000] Calling mem_process_seqs.., task: 1595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518121, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 1039, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (882.71, 644.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 395.027 CPU sec, 22.128 real sec
[0000] Calling mem_process_seqs.., task: 1596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518453, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 433, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (720.77, 675.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.88, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 395.040 CPU sec, 22.113 real sec
[0000] Calling mem_process_seqs.., task: 1597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518009, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 610, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3550)
[0000][PE] mean and std.dev: (709.41, 506.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 397.644 CPU sec, 22.220 real sec
[0000] Calling mem_process_seqs.., task: 1598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518345, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 332, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (463.40, 297.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 396.069 CPU sec, 22.160 real sec
[0000] Calling mem_process_seqs.., task: 1599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517978, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 466, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2643)
[0000][PE] mean and std.dev: (796.56, 697.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 395.168 CPU sec, 22.110 real sec
[0000] Calling mem_process_seqs.., task: 1600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518204, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 922, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6731)
[0000][PE] mean and std.dev: (1338.40, 1635.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 393.385 CPU sec, 21.973 real sec
[0000] Calling mem_process_seqs.., task: 1601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518365, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 994, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4690)
[0000][PE] mean and std.dev: (979.75, 855.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.75, 125.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 395.465 CPU sec, 22.099 real sec
[0000] Calling mem_process_seqs.., task: 1602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517645, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 811, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2610)
[0000][PE] mean and std.dev: (533.44, 352.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (668, 1578, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5921)
[0000][PE] mean and std.dev: (1972.47, 1639.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 396.206 CPU sec, 22.173 real sec
[0000] Calling mem_process_seqs.., task: 1603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518141, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 449, 3516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9826)
[0000][PE] mean and std.dev: (1581.07, 1754.67)
[0000][PE] low and high boundaries for proper pairs: (1, 12981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1331, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5089)
[0000][PE] mean and std.dev: (1559.50, 988.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 396.820 CPU sec, 22.233 real sec
[0000] Calling mem_process_seqs.., task: 1604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517903, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (651, 918, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2880)
[0000][PE] mean and std.dev: (839.73, 513.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.64, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1627, 2996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7002)
[0000][PE] mean and std.dev: (1657.73, 1062.38)
[0000][PE] low and high boundaries for proper pairs: (1, 9005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 394.539 CPU sec, 22.042 real sec
[0000] Calling mem_process_seqs.., task: 1605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518459, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 386, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2586)
[0000][PE] mean and std.dev: (619.10, 486.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1947, 2521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5679)
[0000][PE] mean and std.dev: (1560.58, 897.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 398.282 CPU sec, 22.279 real sec
[0000] Calling mem_process_seqs.., task: 1606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518548, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 835, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (656.20, 467.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 394.102 CPU sec, 22.053 real sec
[0000] Calling mem_process_seqs.., task: 1607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518183, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 1218, 3245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9071)
[0000][PE] mean and std.dev: (1621.55, 1502.29)
[0000][PE] low and high boundaries for proper pairs: (1, 11984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.77, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 395.143 CPU sec, 22.089 real sec
[0000] Calling mem_process_seqs.., task: 1608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517791, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 983, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4685)
[0000][PE] mean and std.dev: (911.00, 712.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.41, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 397.355 CPU sec, 22.190 real sec
[0000] Calling mem_process_seqs.., task: 1609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518306, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 1124, 2999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8443)
[0000][PE] mean and std.dev: (1908.83, 2268.96)
[0000][PE] low and high boundaries for proper pairs: (1, 11165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1369, 2755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6193)
[0000][PE] mean and std.dev: (1462.90, 838.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 394.591 CPU sec, 22.138 real sec
[0000] Calling mem_process_seqs.., task: 1610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517995, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 1007, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4015)
[0000][PE] mean and std.dev: (930.31, 702.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.63, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1438, 5539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14643)
[0000][PE] mean and std.dev: (2587.69, 2637.46)
[0000][PE] low and high boundaries for proper pairs: (1, 19195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 391.236 CPU sec, 21.914 real sec
[0000] Calling mem_process_seqs.., task: 1611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518085, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 433, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1306)
[0000][PE] mean and std.dev: (505.67, 312.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 395.465 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 1612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517982, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 555, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6360)
[0000][PE] mean and std.dev: (1176.71, 1178.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 397.587 CPU sec, 22.221 real sec
[0000] Calling mem_process_seqs.., task: 1613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517807, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 384, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5639)
[0000][PE] mean and std.dev: (1098.23, 1330.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.64, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 395.988 CPU sec, 22.123 real sec
[0000] Calling mem_process_seqs.., task: 1614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518465, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 438, 3132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8706)
[0000][PE] mean and std.dev: (1609.47, 2276.84)
[0000][PE] low and high boundaries for proper pairs: (1, 11493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 125.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 393.863 CPU sec, 22.042 real sec
[0000] Calling mem_process_seqs.., task: 1615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518206, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 362, 832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1898)
[0000][PE] mean and std.dev: (417.60, 361.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1372, 1768, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4459)
[0000][PE] mean and std.dev: (1696.75, 787.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 393.707 CPU sec, 22.035 real sec
[0000] Calling mem_process_seqs.., task: 1616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517765, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 390, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3669)
[0000][PE] mean and std.dev: (801.21, 858.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.74, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 399.365 CPU sec, 22.313 real sec
[0000] Calling mem_process_seqs.., task: 1617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517544, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 399, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4194)
[0000][PE] mean and std.dev: (888.12, 903.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.74, 125.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 2025, 3469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8889)
[0000][PE] mean and std.dev: (2266.62, 1668.30)
[0000][PE] low and high boundaries for proper pairs: (1, 11599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 398.000 CPU sec, 22.250 real sec
[0000] Calling mem_process_seqs.., task: 1618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517743, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1254, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3587)
[0000][PE] mean and std.dev: (1136.00, 921.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 397.943 CPU sec, 22.272 real sec
[0000] Calling mem_process_seqs.., task: 1619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517704, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 608, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3175)
[0000][PE] mean and std.dev: (905.21, 666.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1623, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5431)
[0000][PE] mean and std.dev: (1394.64, 1023.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 394.871 CPU sec, 22.080 real sec
[0000] Calling mem_process_seqs.., task: 1620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518138, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 410, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3302)
[0000][PE] mean and std.dev: (820.83, 885.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1376, 2433, 3026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6326)
[0000][PE] mean and std.dev: (2166.00, 941.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 397.637 CPU sec, 22.247 real sec
[0000] Calling mem_process_seqs.., task: 1621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518464, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 649, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6169)
[0000][PE] mean and std.dev: (1270.16, 1117.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 397.001 CPU sec, 22.192 real sec
[0000] Calling mem_process_seqs.., task: 1622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518212, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 696, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4641)
[0000][PE] mean and std.dev: (1268.53, 1248.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.32, 124.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 396.845 CPU sec, 22.222 real sec
[0000] Calling mem_process_seqs.., task: 1623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517967, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 451, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2748)
[0000][PE] mean and std.dev: (446.43, 380.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1650, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4823)
[0000][PE] mean and std.dev: (1467.46, 708.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 393.900 CPU sec, 22.052 real sec
[0000] Calling mem_process_seqs.., task: 1624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517667, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 321, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (484.12, 441.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 125.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1537, 2810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6496)
[0000][PE] mean and std.dev: (1884.88, 1364.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 395.952 CPU sec, 22.206 real sec
[0000] Calling mem_process_seqs.., task: 1625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517839, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 487, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4064)
[0000][PE] mean and std.dev: (716.00, 597.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.64, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 956, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2651)
[0000][PE] mean and std.dev: (769.00, 333.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 394.445 CPU sec, 22.070 real sec
[0000] Calling mem_process_seqs.., task: 1626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518457, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 531, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2421)
[0000][PE] mean and std.dev: (555.50, 534.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.74, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 397.453 CPU sec, 22.210 real sec
[0000] Calling mem_process_seqs.., task: 1627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517887, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 2237, 2832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7882)
[0000][PE] mean and std.dev: (1975.36, 1709.67)
[0000][PE] low and high boundaries for proper pairs: (1, 10407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 391.420 CPU sec, 21.910 real sec
[0000] Calling mem_process_seqs.., task: 1628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517756, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 424, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (704.62, 751.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 394.280 CPU sec, 22.047 real sec
[0000] Calling mem_process_seqs.., task: 1629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517594, 12, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (127, 683, 3069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8953)
[0000][PE] mean and std.dev: (1588.83, 1708.66)
[0000][PE] low and high boundaries for proper pairs: (1, 11895)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 398.266 CPU sec, 22.285 real sec
[0000] Calling mem_process_seqs.., task: 1630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517729, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 386, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3064)
[0000][PE] mean and std.dev: (548.31, 458.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 396.138 CPU sec, 22.177 real sec
[0000] Calling mem_process_seqs.., task: 1631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518259, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 462, 714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1364)
[0000][PE] mean and std.dev: (407.07, 148.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 980, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2831)
[0000][PE] mean and std.dev: (875.70, 512.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 393.326 CPU sec, 22.004 real sec
[0000] Calling mem_process_seqs.., task: 1632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518064, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 552, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2923)
[0000][PE] mean and std.dev: (816.12, 625.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.19, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 397.627 CPU sec, 22.229 real sec
[0000] Calling mem_process_seqs.., task: 1633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518177, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 418, 862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2196)
[0000][PE] mean and std.dev: (541.38, 499.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.91, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 392.801 CPU sec, 21.977 real sec
[0000] Calling mem_process_seqs.., task: 1634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518303, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 617, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2881)
[0000][PE] mean and std.dev: (747.06, 610.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 392.981 CPU sec, 22.045 real sec
[0000] Calling mem_process_seqs.., task: 1635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518111, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 362, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4072)
[0000][PE] mean and std.dev: (833.12, 930.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.46, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1530, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4145)
[0000][PE] mean and std.dev: (1546.15, 756.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 392.861 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 1636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518096, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 346, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4376)
[0000][PE] mean and std.dev: (909.54, 979.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 395.746 CPU sec, 22.120 real sec
[0000] Calling mem_process_seqs.., task: 1637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517925, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 357, 816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2032)
[0000][PE] mean and std.dev: (446.00, 414.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 394.042 CPU sec, 22.031 real sec
[0000] Calling mem_process_seqs.., task: 1638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518348, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 913, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3638)
[0000][PE] mean and std.dev: (791.17, 642.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 395.040 CPU sec, 22.095 real sec
[0000] Calling mem_process_seqs.., task: 1639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517925, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 1239, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5559)
[0000][PE] mean and std.dev: (1104.71, 894.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 603)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 925)
[0000][PE] mean and std.dev: (527.01, 124.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1086)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1364, 1639, 4124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9644)
[0000][PE] mean and std.dev: (2947.64, 2367.31)
[0000][PE] low and high boundaries for proper pairs: (1, 12417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 397.938 CPU sec, 22.351 real sec
[0000] Calling mem_process_seqs.., task: 1640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518114, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 393, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2539)
[0000][PE] mean and std.dev: (527.73, 331.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1918, 3965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9889)
[0000][PE] mean and std.dev: (2312.30, 1832.09)
[0000][PE] low and high boundaries for proper pairs: (1, 12851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 398.847 CPU sec, 22.313 real sec
[0000] Calling mem_process_seqs.., task: 1641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518224, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (483, 1330, 3299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8931)
[0000][PE] mean and std.dev: (1930.17, 2234.19)
[0000][PE] low and high boundaries for proper pairs: (1, 11747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.82, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 395.224 CPU sec, 22.158 real sec
[0000] Calling mem_process_seqs.., task: 1642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518381, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 412, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (812.89, 786.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.40, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1867, 2848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6378)
[0000][PE] mean and std.dev: (1864.90, 1157.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 395.368 CPU sec, 22.129 real sec
[0000] Calling mem_process_seqs.., task: 1643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517906, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 716, 2547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6849)
[0000][PE] mean and std.dev: (1341.84, 1383.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (617, 1093, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5372)
[0000][PE] mean and std.dev: (1420.00, 941.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 396.194 CPU sec, 22.179 real sec
[0000] Calling mem_process_seqs.., task: 1644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518034, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 382, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2937)
[0000][PE] mean and std.dev: (607.21, 464.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.64, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1152, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (1264.12, 939.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 395.299 CPU sec, 22.076 real sec
[0000] Calling mem_process_seqs.., task: 1645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517778, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 601, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2944)
[0000][PE] mean and std.dev: (671.57, 473.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.67, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1284, 2269, 3433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7731)
[0000][PE] mean and std.dev: (2333.67, 1352.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 393.887 CPU sec, 22.021 real sec
[0000] Calling mem_process_seqs.., task: 1646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518181, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 245, 455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 975)
[0000][PE] mean and std.dev: (312.45, 192.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.72, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 395.672 CPU sec, 22.221 real sec
[0000] Calling mem_process_seqs.., task: 1647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205376
	[0000][ M::kt_pipeline] read 1205376 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517848, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 339, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6121)
[0000][PE] mean and std.dev: (1200.42, 1437.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 395.170 CPU sec, 22.156 real sec
[0000] Calling mem_process_seqs.., task: 1648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518146, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 802, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4508)
[0000][PE] mean and std.dev: (1151.00, 1107.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1454, 1793, 3788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8456)
[0000][PE] mean and std.dev: (2567.85, 2040.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205376 reads in 395.874 CPU sec, 22.231 real sec
[0000] Calling mem_process_seqs.., task: 1649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518057, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 385, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4462)
[0000][PE] mean and std.dev: (896.17, 952.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.18, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1314, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5901)
[0000][PE] mean and std.dev: (1418.00, 1047.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 397.160 CPU sec, 22.241 real sec
[0000] Calling mem_process_seqs.., task: 1650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518154, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 462, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5827)
[0000][PE] mean and std.dev: (1334.44, 1411.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 394.167 CPU sec, 22.081 real sec
[0000] Calling mem_process_seqs.., task: 1651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518242, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 1020, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (1029.25, 662.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 394.074 CPU sec, 22.029 real sec
[0000] Calling mem_process_seqs.., task: 1652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517497, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 833, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (999.94, 793.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.03, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 396.365 CPU sec, 22.196 real sec
[0000] Calling mem_process_seqs.., task: 1653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518715, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1268, 1682, 3244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7196)
[0000][PE] mean and std.dev: (2401.45, 1474.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9172)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 392.716 CPU sec, 21.980 real sec
[0000] Calling mem_process_seqs.., task: 1654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517723, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 411, 696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1436)
[0000][PE] mean and std.dev: (375.69, 159.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.46, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1196, 3646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9472)
[0000][PE] mean and std.dev: (2114.20, 2019.39)
[0000][PE] low and high boundaries for proper pairs: (1, 12385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 397.139 CPU sec, 22.219 real sec
[0000] Calling mem_process_seqs.., task: 1655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518086, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 537, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (655.00, 562.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.81, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1703, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3792)
[0000][PE] mean and std.dev: (1636.00, 655.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 395.148 CPU sec, 22.126 real sec
[0000] Calling mem_process_seqs.., task: 1656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517839, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 525, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (728.25, 647.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 399.928 CPU sec, 22.385 real sec
[0000] Calling mem_process_seqs.., task: 1657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517918, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 366, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (594.94, 454.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1362, 2036, 5365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13371)
[0000][PE] mean and std.dev: (2932.46, 2288.95)
[0000][PE] low and high boundaries for proper pairs: (1, 17374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 395.625 CPU sec, 22.180 real sec
[0000] Calling mem_process_seqs.., task: 1658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518288, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 418, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3132)
[0000][PE] mean and std.dev: (493.92, 379.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1049, 4231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10761)
[0000][PE] mean and std.dev: (2672.18, 2979.05)
[0000][PE] low and high boundaries for proper pairs: (1, 14588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 394.671 CPU sec, 22.122 real sec
[0000] Calling mem_process_seqs.., task: 1659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517998, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 389, 573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1057)
[0000][PE] mean and std.dev: (376.60, 195.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1228, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4744)
[0000][PE] mean and std.dev: (1302.13, 722.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 394.636 CPU sec, 22.081 real sec
[0000] Calling mem_process_seqs.., task: 1660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518378, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (476, 868, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5414)
[0000][PE] mean and std.dev: (1061.26, 894.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 393.500 CPU sec, 22.002 real sec
[0000] Calling mem_process_seqs.., task: 1661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518087, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 1061, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6295)
[0000][PE] mean and std.dev: (1176.81, 910.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (379, 1528, 2681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7285)
[0000][PE] mean and std.dev: (1575.33, 1197.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 393.156 CPU sec, 21.985 real sec
[0000] Calling mem_process_seqs.., task: 1662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518126, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (475, 1004, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3625)
[0000][PE] mean and std.dev: (983.58, 601.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1364, 1459, 2970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6182)
[0000][PE] mean and std.dev: (1972.09, 1260.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 393.936 CPU sec, 22.030 real sec
[0000] Calling mem_process_seqs.., task: 1663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518111, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 316, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4656)
[0000][PE] mean and std.dev: (905.27, 876.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.69, 124.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 390.604 CPU sec, 21.899 real sec
[0000] Calling mem_process_seqs.., task: 1664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517639, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 419, 2425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6705)
[0000][PE] mean and std.dev: (1334.36, 1730.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.71, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 395.941 CPU sec, 22.166 real sec
[0000] Calling mem_process_seqs.., task: 1665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518113, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 556, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4487)
[0000][PE] mean and std.dev: (836.42, 856.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 392.269 CPU sec, 21.925 real sec
[0000] Calling mem_process_seqs.., task: 1666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517811, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 821, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (1065.79, 1046.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (649, 766, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2524)
[0000][PE] mean and std.dev: (620.00, 367.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3149)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1898, 3298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7578)
[0000][PE] mean and std.dev: (1801.82, 845.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 394.218 CPU sec, 22.036 real sec
[0000] Calling mem_process_seqs.., task: 1667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518246, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 387, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4890)
[0000][PE] mean and std.dev: (839.15, 1001.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 2079, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5576)
[0000][PE] mean and std.dev: (1710.10, 1017.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 394.553 CPU sec, 22.054 real sec
[0000] Calling mem_process_seqs.., task: 1668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518095, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 817, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4932)
[0000][PE] mean and std.dev: (1200.29, 1265.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1447, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5156)
[0000][PE] mean and std.dev: (1811.60, 956.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 394.166 CPU sec, 22.026 real sec
[0000] Calling mem_process_seqs.., task: 1669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205326
	[0000][ M::kt_pipeline] read 1205326 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518377, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 1133, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6547)
[0000][PE] mean and std.dev: (1507.56, 1404.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.51, 124.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1329, 1575, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (459, 2634)
[0000][PE] mean and std.dev: (1305.67, 394.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 394.163 CPU sec, 22.058 real sec
[0000] Calling mem_process_seqs.., task: 1670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518302, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 396, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5672)
[0000][PE] mean and std.dev: (870.10, 1172.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.25, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205326 reads in 394.648 CPU sec, 22.124 real sec
[0000] Calling mem_process_seqs.., task: 1671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518108, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 437, 3097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8685)
[0000][PE] mean and std.dev: (1317.15, 1341.24)
[0000][PE] low and high boundaries for proper pairs: (1, 11479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.72, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 392.289 CPU sec, 21.949 real sec
[0000] Calling mem_process_seqs.., task: 1672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518574, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 499, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4509)
[0000][PE] mean and std.dev: (1088.07, 975.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.39, 124.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1827, 3007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6765)
[0000][PE] mean and std.dev: (2274.94, 1678.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 392.520 CPU sec, 21.975 real sec
[0000] Calling mem_process_seqs.., task: 1673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518135, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 560, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2754)
[0000][PE] mean and std.dev: (787.95, 599.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1071, 3372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8466)
[0000][PE] mean and std.dev: (1861.08, 1745.31)
[0000][PE] low and high boundaries for proper pairs: (1, 11013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 396.435 CPU sec, 22.148 real sec
[0000] Calling mem_process_seqs.., task: 1674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518078, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 368, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2884)
[0000][PE] mean and std.dev: (597.38, 546.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.70, 125.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 394.575 CPU sec, 22.064 real sec
[0000] Calling mem_process_seqs.., task: 1675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517716, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 494, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1495)
[0000][PE] mean and std.dev: (469.50, 194.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1278, 1552, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (354, 2664)
[0000][PE] mean and std.dev: (1368.50, 249.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 397.165 CPU sec, 22.185 real sec
[0000] Calling mem_process_seqs.., task: 1676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518184, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 878, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3639)
[0000][PE] mean and std.dev: (895.29, 701.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 391.850 CPU sec, 21.930 real sec
[0000] Calling mem_process_seqs.., task: 1677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518181, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 462, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (826.71, 974.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 392.788 CPU sec, 21.954 real sec
[0000] Calling mem_process_seqs.., task: 1678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518292, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 746, 2914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8062)
[0000][PE] mean and std.dev: (1600.58, 1749.18)
[0000][PE] low and high boundaries for proper pairs: (1, 10636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1222, 1647, 2675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5581)
[0000][PE] mean and std.dev: (2039.45, 1314.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 391.882 CPU sec, 21.934 real sec
[0000] Calling mem_process_seqs.., task: 1679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517879, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 493, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5082)
[0000][PE] mean and std.dev: (873.24, 898.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 395.047 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 1680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518328, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (475, 944, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (749.73, 424.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 395.140 CPU sec, 22.131 real sec
[0000] Calling mem_process_seqs.., task: 1681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517927, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 746, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4353)
[0000][PE] mean and std.dev: (1161.87, 1096.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1018, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3015)
[0000][PE] mean and std.dev: (1231.55, 740.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 395.508 CPU sec, 22.133 real sec
[0000] Calling mem_process_seqs.., task: 1682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517914, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 421, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5756)
[0000][PE] mean and std.dev: (999.73, 1070.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1624, 3068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7202)
[0000][PE] mean and std.dev: (2014.79, 1370.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 393.637 CPU sec, 21.993 real sec
[0000] Calling mem_process_seqs.., task: 1683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517767, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 477, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4135)
[0000][PE] mean and std.dev: (734.00, 741.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.42, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1309, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (216, 2576)
[0000][PE] mean and std.dev: (1188.67, 345.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 393.534 CPU sec, 22.029 real sec
[0000] Calling mem_process_seqs.., task: 1684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517899, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 591, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3948)
[0000][PE] mean and std.dev: (947.83, 792.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 392.128 CPU sec, 21.939 real sec
[0000] Calling mem_process_seqs.., task: 1685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517753, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 388, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3216)
[0000][PE] mean and std.dev: (456.40, 412.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1681, 2880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6440)
[0000][PE] mean and std.dev: (2197.54, 1639.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 392.947 CPU sec, 21.974 real sec
[0000] Calling mem_process_seqs.., task: 1686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518117, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 319, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2938)
[0000][PE] mean and std.dev: (685.33, 704.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1109, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (1249.50, 578.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 394.161 CPU sec, 22.053 real sec
[0000] Calling mem_process_seqs.., task: 1687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518445, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 369, 756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1688)
[0000][PE] mean and std.dev: (495.06, 389.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.80, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 393.916 CPU sec, 22.040 real sec
[0000] Calling mem_process_seqs.., task: 1688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517883, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 438, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (791.62, 778.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.80, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (655, 2148, 3455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9055)
[0000][PE] mean and std.dev: (2230.50, 2288.11)
[0000][PE] low and high boundaries for proper pairs: (1, 11855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 395.025 CPU sec, 22.073 real sec
[0000] Calling mem_process_seqs.., task: 1689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517702, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 557, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2421)
[0000][PE] mean and std.dev: (561.81, 343.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.74, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1256, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3788)
[0000][PE] mean and std.dev: (1260.56, 624.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 390.848 CPU sec, 21.862 real sec
[0000] Calling mem_process_seqs.., task: 1690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518140, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 816, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4750)
[0000][PE] mean and std.dev: (1056.73, 1228.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 392.296 CPU sec, 21.934 real sec
[0000] Calling mem_process_seqs.., task: 1691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517914, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 330, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2968)
[0000][PE] mean and std.dev: (522.33, 485.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 395.869 CPU sec, 22.127 real sec
[0000] Calling mem_process_seqs.., task: 1692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 518046, 9, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 397.360 CPU sec, 22.325 real sec
[0000] Calling mem_process_seqs.., task: 1693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517354, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 599, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5792)
[0000][PE] mean and std.dev: (1450.84, 1467.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.55, 125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 396.093 CPU sec, 22.166 real sec
[0000] Calling mem_process_seqs.., task: 1694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518149, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 998, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5900)
[0000][PE] mean and std.dev: (1481.21, 1082.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7616)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 390.375 CPU sec, 21.824 real sec
[0000] Calling mem_process_seqs.., task: 1695
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205408
	[0000][ M::kt_pipeline] read 1205408 sequences (180000102 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517757, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 332, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3998)
[0000][PE] mean and std.dev: (912.71, 960.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1279, 3541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8697)
[0000][PE] mean and std.dev: (2061.55, 1747.79)
[0000][PE] low and high boundaries for proper pairs: (1, 11275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 393.549 CPU sec, 21.999 real sec
[0000] Calling mem_process_seqs.., task: 1696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518103, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 810, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1172.25, 1155.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.86, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (631, 1225, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4330)
[0000][PE] mean and std.dev: (1317.79, 842.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205408 reads in 391.779 CPU sec, 21.884 real sec
[0000] Calling mem_process_seqs.., task: 1697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518022, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 385, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (581.67, 627.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1352, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5929)
[0000][PE] mean and std.dev: (1706.27, 1267.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 391.038 CPU sec, 21.862 real sec
[0000] Calling mem_process_seqs.., task: 1698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518427, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 784, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (992.88, 970.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.81, 125.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1563, 2943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7367)
[0000][PE] mean and std.dev: (1979.73, 1416.78)
[0000][PE] low and high boundaries for proper pairs: (1, 9579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 390.040 CPU sec, 21.867 real sec
[0000] Calling mem_process_seqs.., task: 1699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517967, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 1034, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5585)
[0000][PE] mean and std.dev: (1174.86, 981.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.20, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1141, 1475, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (1414.45, 796.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 389.403 CPU sec, 21.770 real sec
[0000] Calling mem_process_seqs.., task: 1700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518085, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 341, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (649.50, 683.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1392, 1749, 2714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5358)
[0000][PE] mean and std.dev: (1864.18, 1126.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 389.197 CPU sec, 21.775 real sec
[0000] Calling mem_process_seqs.., task: 1701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518096, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 768, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (795.79, 563.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 389.014 CPU sec, 21.744 real sec
[0000] Calling mem_process_seqs.., task: 1702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517926, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 476, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5044)
[0000][PE] mean and std.dev: (720.44, 642.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 395.049 CPU sec, 22.081 real sec
[0000] Calling mem_process_seqs.., task: 1703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517957, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 892, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3921)
[0000][PE] mean and std.dev: (986.91, 825.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 395.802 CPU sec, 22.141 real sec
[0000] Calling mem_process_seqs.., task: 1704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517913, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 397, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2878)
[0000][PE] mean and std.dev: (551.71, 476.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.65, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 393.614 CPU sec, 21.998 real sec
[0000] Calling mem_process_seqs.., task: 1705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 517970, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1654, 2440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5636)
[0000][PE] mean and std.dev: (1360.44, 780.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7234)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 391.775 CPU sec, 21.927 real sec
[0000] Calling mem_process_seqs.., task: 1706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518826, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 296, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3747)
[0000][PE] mean and std.dev: (487.82, 435.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 389.012 CPU sec, 21.781 real sec
[0000] Calling mem_process_seqs.., task: 1707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518241, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 468, 2118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5692)
[0000][PE] mean and std.dev: (1126.65, 1134.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 392.483 CPU sec, 21.949 real sec
[0000] Calling mem_process_seqs.., task: 1708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518469, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 433, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3306)
[0000][PE] mean and std.dev: (812.75, 732.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 392.379 CPU sec, 21.985 real sec
[0000] Calling mem_process_seqs.., task: 1709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518286, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 724, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3763)
[0000][PE] mean and std.dev: (743.06, 573.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 994, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3461)
[0000][PE] mean and std.dev: (1137.27, 687.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 393.049 CPU sec, 22.006 real sec
[0000] Calling mem_process_seqs.., task: 1710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517920, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 707, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5202)
[0000][PE] mean and std.dev: (1236.60, 1372.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 393.006 CPU sec, 21.998 real sec
[0000] Calling mem_process_seqs.., task: 1711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518104, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 457, 2477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6917)
[0000][PE] mean and std.dev: (1058.17, 1198.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 391.685 CPU sec, 21.914 real sec
[0000] Calling mem_process_seqs.., task: 1712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517689, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 362, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2622)
[0000][PE] mean and std.dev: (688.00, 672.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1030, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1742)
[0000][PE] mean and std.dev: (1023.00, 291.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 394.295 CPU sec, 22.114 real sec
[0000] Calling mem_process_seqs.., task: 1713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517419, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 532, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4040)
[0000][PE] mean and std.dev: (742.80, 650.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.29, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1323, 2352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5256)
[0000][PE] mean and std.dev: (1612.93, 879.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 395.011 CPU sec, 22.097 real sec
[0000] Calling mem_process_seqs.., task: 1714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517673, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 300, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (471.94, 452.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 394.731 CPU sec, 22.095 real sec
[0000] Calling mem_process_seqs.., task: 1715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517911, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 764, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4501)
[0000][PE] mean and std.dev: (1057.12, 832.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.76, 124.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1315, 1792, 2855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5935)
[0000][PE] mean and std.dev: (2021.85, 952.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7475)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 393.153 CPU sec, 22.001 real sec
[0000] Calling mem_process_seqs.., task: 1716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518218, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 994, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6371)
[0000][PE] mean and std.dev: (1306.57, 1223.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.22, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 396.368 CPU sec, 22.233 real sec
[0000] Calling mem_process_seqs.., task: 1717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517899, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 413, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3763)
[0000][PE] mean and std.dev: (711.25, 679.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 391.121 CPU sec, 21.871 real sec
[0000] Calling mem_process_seqs.., task: 1718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517555, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 487, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2501)
[0000][PE] mean and std.dev: (366.91, 245.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1560, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5429)
[0000][PE] mean and std.dev: (1355.50, 701.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 395.835 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 1719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517777, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 643, 2753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7549)
[0000][PE] mean and std.dev: (1830.64, 1963.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1203, 2109, 3438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7908)
[0000][PE] mean and std.dev: (2200.83, 1326.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 394.382 CPU sec, 22.087 real sec
[0000] Calling mem_process_seqs.., task: 1720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518091, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 408, 1000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2386)
[0000][PE] mean and std.dev: (586.94, 505.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1342, 1724, 2648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5260)
[0000][PE] mean and std.dev: (1788.33, 800.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 392.828 CPU sec, 21.974 real sec
[0000] Calling mem_process_seqs.., task: 1721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517729, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (485, 962, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5399)
[0000][PE] mean and std.dev: (1146.65, 994.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.41, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 392.786 CPU sec, 21.982 real sec
[0000] Calling mem_process_seqs.., task: 1722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518279, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 650, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (865.77, 645.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 125.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1269, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5454)
[0000][PE] mean and std.dev: (1513.73, 1099.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 391.281 CPU sec, 21.862 real sec
[0000] Calling mem_process_seqs.., task: 1723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518056, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 402, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4887)
[0000][PE] mean and std.dev: (985.00, 1109.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.96, 125.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1362, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2983)
[0000][PE] mean and std.dev: (1331.00, 652.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 390.367 CPU sec, 21.893 real sec
[0000] Calling mem_process_seqs.., task: 1724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 518160, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.39, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 393.828 CPU sec, 22.064 real sec
[0000] Calling mem_process_seqs.., task: 1725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517424, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 659, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2076)
[0000][PE] mean and std.dev: (648.20, 479.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1169, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5394)
[0000][PE] mean and std.dev: (1488.72, 1116.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 393.277 CPU sec, 22.002 real sec
[0000] Calling mem_process_seqs.., task: 1726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518495, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 503, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2707)
[0000][PE] mean and std.dev: (808.87, 626.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1173, 3852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9742)
[0000][PE] mean and std.dev: (2274.15, 2078.72)
[0000][PE] low and high boundaries for proper pairs: (1, 12687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 396.301 CPU sec, 22.138 real sec
[0000] Calling mem_process_seqs.., task: 1727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517759, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 265, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1685)
[0000][PE] mean and std.dev: (326.38, 239.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 390.186 CPU sec, 21.824 real sec
[0000] Calling mem_process_seqs.., task: 1728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518321, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 1258, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5537)
[0000][PE] mean and std.dev: (1332.45, 1490.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1303, 2337, 3353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7453)
[0000][PE] mean and std.dev: (2355.55, 1528.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 394.961 CPU sec, 22.109 real sec
[0000] Calling mem_process_seqs.., task: 1729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518494, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 412, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2621)
[0000][PE] mean and std.dev: (665.69, 626.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 390.151 CPU sec, 21.832 real sec
[0000] Calling mem_process_seqs.., task: 1730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518240, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 323, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (868.47, 917.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 392.341 CPU sec, 21.936 real sec
[0000] Calling mem_process_seqs.., task: 1731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518430, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 399, 2439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6719)
[0000][PE] mean and std.dev: (927.14, 1102.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.69, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1678, 3584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8850)
[0000][PE] mean and std.dev: (2471.08, 1928.66)
[0000][PE] low and high boundaries for proper pairs: (1, 11483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 391.914 CPU sec, 21.941 real sec
[0000] Calling mem_process_seqs.., task: 1732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517585, 0, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 316, 520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1134)
[0000][PE] mean and std.dev: (394.83, 252.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 397.074 CPU sec, 22.219 real sec
[0000] Calling mem_process_seqs.., task: 1733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517780, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 586, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4220)
[0000][PE] mean and std.dev: (912.37, 884.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 394.031 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 1734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518078, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 465, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3199)
[0000][PE] mean and std.dev: (748.19, 637.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 392.270 CPU sec, 21.918 real sec
[0000] Calling mem_process_seqs.., task: 1735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518300, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 967, 4338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12174)
[0000][PE] mean and std.dev: (1950.57, 2260.28)
[0000][PE] low and high boundaries for proper pairs: (1, 16092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1525, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3205)
[0000][PE] mean and std.dev: (1357.67, 799.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 392.138 CPU sec, 21.899 real sec
[0000] Calling mem_process_seqs.., task: 1736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517719, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 694, 2444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6652)
[0000][PE] mean and std.dev: (1474.88, 1592.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.98, 125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1522, 3405, 4866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11554)
[0000][PE] mean and std.dev: (3437.70, 2716.08)
[0000][PE] low and high boundaries for proper pairs: (1, 14898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 394.086 CPU sec, 22.032 real sec
[0000] Calling mem_process_seqs.., task: 1737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518418, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 666, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2706)
[0000][PE] mean and std.dev: (661.17, 332.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1313, 1767, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4310)
[0000][PE] mean and std.dev: (1613.77, 740.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5309)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 391.841 CPU sec, 21.985 real sec
[0000] Calling mem_process_seqs.., task: 1738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517898, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 459, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4171)
[0000][PE] mean and std.dev: (996.00, 899.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 395.314 CPU sec, 22.087 real sec
[0000] Calling mem_process_seqs.., task: 1739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518170, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (564, 799, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2148)
[0000][PE] mean and std.dev: (775.10, 364.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.68, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1378, 1505, 3229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6931)
[0000][PE] mean and std.dev: (1667.75, 1094.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 395.218 CPU sec, 22.118 real sec
[0000] Calling mem_process_seqs.., task: 1740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518074, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 359, 2659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7453)
[0000][PE] mean and std.dev: (1056.00, 1308.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.39, 124.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 396.286 CPU sec, 22.151 real sec
[0000] Calling mem_process_seqs.., task: 1741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517953, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 423, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5739)
[0000][PE] mean and std.dev: (1092.71, 1324.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 393.321 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 1742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518415, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 1329, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6998)
[0000][PE] mean and std.dev: (1233.73, 1169.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.62, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1674, 2827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6149)
[0000][PE] mean and std.dev: (1957.76, 1204.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 393.332 CPU sec, 21.988 real sec
[0000] Calling mem_process_seqs.., task: 1743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518178, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 440, 756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1632)
[0000][PE] mean and std.dev: (374.40, 194.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.73, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 393.049 CPU sec, 22.010 real sec
[0000] Calling mem_process_seqs.., task: 1744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518064, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 553, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3751)
[0000][PE] mean and std.dev: (816.00, 694.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.86, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 2183, 5203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14127)
[0000][PE] mean and std.dev: (2596.67, 2123.78)
[0000][PE] low and high boundaries for proper pairs: (1, 18589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 394.076 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 1745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518249, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 1339, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6307)
[0000][PE] mean and std.dev: (1588.91, 1366.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1583, 2531, 3439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7151)
[0000][PE] mean and std.dev: (2501.53, 1205.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 395.008 CPU sec, 22.068 real sec
[0000] Calling mem_process_seqs.., task: 1746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518369, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 397, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (759.85, 587.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.63, 124.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1242, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5487)
[0000][PE] mean and std.dev: (1719.30, 1214.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 392.776 CPU sec, 21.982 real sec
[0000] Calling mem_process_seqs.., task: 1747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518215, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 860, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6072)
[0000][PE] mean and std.dev: (1383.83, 1447.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.93, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1485, 2465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5083)
[0000][PE] mean and std.dev: (1701.09, 1004.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 392.598 CPU sec, 21.949 real sec
[0000] Calling mem_process_seqs.., task: 1748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518177, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 803, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5757)
[0000][PE] mean and std.dev: (1217.00, 1094.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1283, 1499, 2584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5186)
[0000][PE] mean and std.dev: (1609.70, 722.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 390.409 CPU sec, 21.830 real sec
[0000] Calling mem_process_seqs.., task: 1749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518310, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 683, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4263)
[0000][PE] mean and std.dev: (796.00, 973.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 396.059 CPU sec, 22.168 real sec
[0000] Calling mem_process_seqs.., task: 1750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518179, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 816, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3733)
[0000][PE] mean and std.dev: (815.17, 645.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 392.153 CPU sec, 21.944 real sec
[0000] Calling mem_process_seqs.., task: 1751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518054, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1044, 1636, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (1586.15, 928.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.87, 125.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1128, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3314)
[0000][PE] mean and std.dev: (1131.69, 566.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 393.337 CPU sec, 22.006 real sec
[0000] Calling mem_process_seqs.., task: 1752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517644, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 449, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4237)
[0000][PE] mean and std.dev: (922.43, 1044.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1285, 2673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6257)
[0000][PE] mean and std.dev: (1467.00, 789.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 396.092 CPU sec, 22.199 real sec
[0000] Calling mem_process_seqs.., task: 1753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518530, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 1237, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5065)
[0000][PE] mean and std.dev: (1116.00, 837.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 392.254 CPU sec, 21.981 real sec
[0000] Calling mem_process_seqs.., task: 1754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517584, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (506, 1360, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5096)
[0000][PE] mean and std.dev: (1259.58, 792.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.75, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 2039, 2842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7092)
[0000][PE] mean and std.dev: (1866.44, 1367.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 399.216 CPU sec, 22.334 real sec
[0000] Calling mem_process_seqs.., task: 1755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518011, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 448, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (958.80, 967.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1615, 1662, 3088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6034)
[0000][PE] mean and std.dev: (2041.45, 830.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 394.604 CPU sec, 22.080 real sec
[0000] Calling mem_process_seqs.., task: 1756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517885, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 373, 504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 924)
[0000][PE] mean and std.dev: (320.75, 108.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.80, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1302, 1713, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3288)
[0000][PE] mean and std.dev: (1656.30, 409.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 397.308 CPU sec, 22.217 real sec
[0000] Calling mem_process_seqs.., task: 1757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517812, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 1094, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2916)
[0000][PE] mean and std.dev: (940.77, 737.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.82, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (627, 1167, 2882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7392)
[0000][PE] mean and std.dev: (1682.64, 1427.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 397.967 CPU sec, 22.258 real sec
[0000] Calling mem_process_seqs.., task: 1758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518374, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 776, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4873)
[0000][PE] mean and std.dev: (980.69, 713.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 393.695 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 1759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518068, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 712, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3200)
[0000][PE] mean and std.dev: (734.20, 672.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1313, 3080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7514)
[0000][PE] mean and std.dev: (1817.15, 1235.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 394.427 CPU sec, 22.063 real sec
[0000] Calling mem_process_seqs.., task: 1760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517686, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (466, 587, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3796)
[0000][PE] mean and std.dev: (969.35, 792.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 394.727 CPU sec, 22.056 real sec
[0000] Calling mem_process_seqs.., task: 1761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518037, 6, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 393.972 CPU sec, 22.107 real sec
[0000] Calling mem_process_seqs.., task: 1762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518054, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (554, 1325, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3929)
[0000][PE] mean and std.dev: (1316.40, 890.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 394.919 CPU sec, 22.109 real sec
[0000] Calling mem_process_seqs.., task: 1763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518144, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 994, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (1116.00, 918.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 393.124 CPU sec, 21.970 real sec
[0000] Calling mem_process_seqs.., task: 1764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205384
	[0000][ M::kt_pipeline] read 1205384 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518061, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 416, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3334)
[0000][PE] mean and std.dev: (487.61, 470.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.73, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 1484, 2683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5631)
[0000][PE] mean and std.dev: (1629.50, 847.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 395.415 CPU sec, 22.126 real sec
[0000] Calling mem_process_seqs.., task: 1765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518619, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 432, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 954)
[0000][PE] mean and std.dev: (376.69, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1835, 2604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6064)
[0000][PE] mean and std.dev: (1715.23, 1161.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205384 reads in 391.892 CPU sec, 21.922 real sec
[0000] Calling mem_process_seqs.., task: 1766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518333, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 374, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4458)
[0000][PE] mean and std.dev: (743.64, 857.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 395.770 CPU sec, 22.158 real sec
[0000] Calling mem_process_seqs.., task: 1767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518203, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 538, 4478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12790)
[0000][PE] mean and std.dev: (2039.27, 2603.26)
[0000][PE] low and high boundaries for proper pairs: (1, 16946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.79, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 394.215 CPU sec, 22.068 real sec
[0000] Calling mem_process_seqs.., task: 1768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518393, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 748, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (989.10, 887.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.62, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1230, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (1292.82, 720.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 395.612 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 1769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518159, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 784, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5230)
[0000][PE] mean and std.dev: (1116.95, 1162.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1630, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5148)
[0000][PE] mean and std.dev: (1695.42, 940.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 395.443 CPU sec, 22.122 real sec
[0000] Calling mem_process_seqs.., task: 1770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518508, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (784, 1250, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3694)
[0000][PE] mean and std.dev: (978.73, 546.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1242, 2677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6411)
[0000][PE] mean and std.dev: (1708.33, 1418.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 391.849 CPU sec, 21.903 real sec
[0000] Calling mem_process_seqs.., task: 1771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517659, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (488, 1642, 2492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6500)
[0000][PE] mean and std.dev: (1917.24, 1689.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1519, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3913)
[0000][PE] mean and std.dev: (1533.36, 816.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 396.758 CPU sec, 22.263 real sec
[0000] Calling mem_process_seqs.., task: 1772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518192, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 971, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4028)
[0000][PE] mean and std.dev: (948.20, 704.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.26, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1641, 1979, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (401, 3501)
[0000][PE] mean and std.dev: (1830.93, 375.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 397.495 CPU sec, 22.296 real sec
[0000] Calling mem_process_seqs.., task: 1773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517691, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 623, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3221)
[0000][PE] mean and std.dev: (989.67, 823.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.16, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 394.461 CPU sec, 22.050 real sec
[0000] Calling mem_process_seqs.., task: 1774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517775, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 377, 501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 983)
[0000][PE] mean and std.dev: (334.24, 192.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (569, 1471, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5942)
[0000][PE] mean and std.dev: (1427.85, 930.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 396.252 CPU sec, 22.144 real sec
[0000] Calling mem_process_seqs.., task: 1775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517711, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 1648, 2947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8195)
[0000][PE] mean and std.dev: (1809.12, 1714.11)
[0000][PE] low and high boundaries for proper pairs: (1, 10819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.74, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 398.158 CPU sec, 22.301 real sec
[0000] Calling mem_process_seqs.., task: 1776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518215, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 422, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6472)
[0000][PE] mean and std.dev: (995.46, 1247.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.74, 125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 397.432 CPU sec, 22.247 real sec
[0000] Calling mem_process_seqs.., task: 1777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518295, 7, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.60, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1292, 3122, 5076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12644)
[0000][PE] mean and std.dev: (3440.45, 2338.67)
[0000][PE] low and high boundaries for proper pairs: (1, 16428)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 393.572 CPU sec, 22.010 real sec
[0000] Calling mem_process_seqs.., task: 1778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518121, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 1028, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6122)
[0000][PE] mean and std.dev: (1266.93, 1194.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1256, 1481, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (1671.50, 711.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 394.269 CPU sec, 22.054 real sec
[0000] Calling mem_process_seqs.., task: 1779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518375, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 412, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3931)
[0000][PE] mean and std.dev: (917.72, 967.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1549, 2485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5573)
[0000][PE] mean and std.dev: (1716.33, 1471.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 396.101 CPU sec, 22.168 real sec
[0000] Calling mem_process_seqs.., task: 1780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518118, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 393, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 894)
[0000][PE] mean and std.dev: (388.00, 163.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 394.440 CPU sec, 22.059 real sec
[0000] Calling mem_process_seqs.., task: 1781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518039, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 952, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (810.75, 734.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.63, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1184, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4676)
[0000][PE] mean and std.dev: (1381.30, 671.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 394.893 CPU sec, 22.091 real sec
[0000] Calling mem_process_seqs.., task: 1782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518622, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 259, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2156)
[0000][PE] mean and std.dev: (477.00, 506.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 391.654 CPU sec, 21.926 real sec
[0000] Calling mem_process_seqs.., task: 1783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205438
	[0000][ M::kt_pipeline] read 1205438 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518474, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 571, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5509)
[0000][PE] mean and std.dev: (985.16, 1130.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 125.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 1201, 3377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8741)
[0000][PE] mean and std.dev: (1794.15, 1237.97)
[0000][PE] low and high boundaries for proper pairs: (1, 11423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 399.957 CPU sec, 22.506 real sec
[0000] Calling mem_process_seqs.., task: 1784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518609, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 692, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (967.18, 826.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205438 reads in 389.524 CPU sec, 21.821 real sec
[0000] Calling mem_process_seqs.., task: 1785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518196, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 1408, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5202)
[0000][PE] mean and std.dev: (1358.73, 1264.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1263, 1593, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 2976)
[0000][PE] mean and std.dev: (1505.73, 520.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 395.680 CPU sec, 22.167 real sec
[0000] Calling mem_process_seqs.., task: 1786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518001, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 440, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (742.85, 733.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 398.749 CPU sec, 22.309 real sec
[0000] Calling mem_process_seqs.., task: 1787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517877, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 885, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2268)
[0000][PE] mean and std.dev: (839.40, 500.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 396.202 CPU sec, 22.183 real sec
[0000] Calling mem_process_seqs.., task: 1788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517858, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 794, 2710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7344)
[0000][PE] mean and std.dev: (1505.20, 1772.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.42, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1249, 1845, 2678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5536)
[0000][PE] mean and std.dev: (1889.08, 935.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 398.307 CPU sec, 22.268 real sec
[0000] Calling mem_process_seqs.., task: 1789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518372, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 828, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3909)
[0000][PE] mean and std.dev: (829.00, 669.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 396.546 CPU sec, 22.306 real sec
[0000] Calling mem_process_seqs.., task: 1790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517795, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 386, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5965)
[0000][PE] mean and std.dev: (1407.94, 1512.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 398.134 CPU sec, 22.406 real sec
[0000] Calling mem_process_seqs.., task: 1791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518210, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 400, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5262)
[0000][PE] mean and std.dev: (921.80, 1031.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1439, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5356)
[0000][PE] mean and std.dev: (1372.44, 737.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6792)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 391.561 CPU sec, 21.961 real sec
[0000] Calling mem_process_seqs.., task: 1792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518207, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 1064, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5263)
[0000][PE] mean and std.dev: (1094.00, 917.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.92, 125.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1069, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2255)
[0000][PE] mean and std.dev: (829.67, 366.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 395.920 CPU sec, 22.135 real sec
[0000] Calling mem_process_seqs.., task: 1793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518147, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 1386, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4842)
[0000][PE] mean and std.dev: (1307.88, 1266.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.84, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1787, 2269, 3766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7724)
[0000][PE] mean and std.dev: (3056.58, 2063.49)
[0000][PE] low and high boundaries for proper pairs: (1, 11311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 396.292 CPU sec, 22.196 real sec
[0000] Calling mem_process_seqs.., task: 1794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518104, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 746, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3743)
[0000][PE] mean and std.dev: (761.75, 513.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.82, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1322, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (373, 2343)
[0000][PE] mean and std.dev: (1256.89, 328.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 396.652 CPU sec, 22.174 real sec
[0000] Calling mem_process_seqs.., task: 1795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518030, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 517, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (854.72, 851.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1684, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4472)
[0000][PE] mean and std.dev: (1233.90, 744.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 394.640 CPU sec, 22.073 real sec
[0000] Calling mem_process_seqs.., task: 1796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518412, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 391, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3927)
[0000][PE] mean and std.dev: (842.37, 853.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.82, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1042, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4079)
[0000][PE] mean and std.dev: (1384.64, 892.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 392.707 CPU sec, 21.971 real sec
[0000] Calling mem_process_seqs.., task: 1797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518369, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 548, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3858)
[0000][PE] mean and std.dev: (876.76, 765.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.51, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 394.557 CPU sec, 22.048 real sec
[0000] Calling mem_process_seqs.., task: 1798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517711, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 376, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4262)
[0000][PE] mean and std.dev: (735.06, 784.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1777, 2793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6317)
[0000][PE] mean and std.dev: (1694.33, 1049.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 396.593 CPU sec, 22.209 real sec
[0000] Calling mem_process_seqs.., task: 1799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518249, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (455, 812, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2834)
[0000][PE] mean and std.dev: (763.23, 423.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1276, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4028)
[0000][PE] mean and std.dev: (1299.33, 467.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 392.880 CPU sec, 22.032 real sec
[0000] Calling mem_process_seqs.., task: 1800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518218, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 424, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4889)
[0000][PE] mean and std.dev: (816.18, 754.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 394.027 CPU sec, 22.017 real sec
[0000] Calling mem_process_seqs.., task: 1801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518116, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 317, 3073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8803)
[0000][PE] mean and std.dev: (1225.46, 1419.98)
[0000][PE] low and high boundaries for proper pairs: (1, 11668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1454, 2686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6424)
[0000][PE] mean and std.dev: (1804.23, 1485.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 399.040 CPU sec, 22.317 real sec
[0000] Calling mem_process_seqs.., task: 1802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517648, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 411, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (681.00, 679.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.18, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (631, 1212, 2882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7384)
[0000][PE] mean and std.dev: (1389.78, 991.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 395.483 CPU sec, 22.107 real sec
[0000] Calling mem_process_seqs.., task: 1803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518043, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 848, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4325)
[0000][PE] mean and std.dev: (873.15, 632.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1520, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3889)
[0000][PE] mean and std.dev: (1433.67, 643.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 397.569 CPU sec, 22.248 real sec
[0000] Calling mem_process_seqs.., task: 1804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517642, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 578, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5498)
[0000][PE] mean and std.dev: (1165.81, 1006.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 399.257 CPU sec, 22.316 real sec
[0000] Calling mem_process_seqs.., task: 1805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517884, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 509, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3223)
[0000][PE] mean and std.dev: (784.00, 763.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1416, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (141, 2571)
[0000][PE] mean and std.dev: (1348.80, 392.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 394.145 CPU sec, 22.077 real sec
[0000] Calling mem_process_seqs.., task: 1806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517979, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 1050, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3701)
[0000][PE] mean and std.dev: (897.31, 702.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 394.310 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 1807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518247, 5, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 394.910 CPU sec, 22.083 real sec
[0000] Calling mem_process_seqs.., task: 1808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517931, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 1037, 3112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8428)
[0000][PE] mean and std.dev: (1741.00, 1802.67)
[0000][PE] low and high boundaries for proper pairs: (1, 11086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.72, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 398.344 CPU sec, 22.290 real sec
[0000] Calling mem_process_seqs.., task: 1809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517820, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 435, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3851)
[0000][PE] mean and std.dev: (939.11, 970.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 603)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 925)
[0000][PE] mean and std.dev: (527.14, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1086)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1140, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (1096.58, 690.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5792)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 396.151 CPU sec, 22.145 real sec
[0000] Calling mem_process_seqs.., task: 1810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518556, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 596, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1069.20, 832.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 396.682 CPU sec, 22.219 real sec
[0000] Calling mem_process_seqs.., task: 1811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518083, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 932, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3668)
[0000][PE] mean and std.dev: (944.15, 603.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.69, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 398.308 CPU sec, 22.307 real sec
[0000] Calling mem_process_seqs.., task: 1812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518436, 9, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 395.130 CPU sec, 22.142 real sec
[0000] Calling mem_process_seqs.., task: 1813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205386
	[0000][ M::kt_pipeline] read 1205386 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517808, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 636, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (980.33, 1050.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.86, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 399.983 CPU sec, 22.424 real sec
[0000] Calling mem_process_seqs.., task: 1814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517825, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 384, 819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1861)
[0000][PE] mean and std.dev: (454.64, 364.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205386 reads in 392.243 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 1815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518217, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 294, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4785)
[0000][PE] mean and std.dev: (893.43, 1010.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 125.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1362, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3743)
[0000][PE] mean and std.dev: (1419.78, 494.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 392.139 CPU sec, 21.907 real sec
[0000] Calling mem_process_seqs.., task: 1816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518243, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 1111, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4494)
[0000][PE] mean and std.dev: (1105.80, 741.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1737, 3024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7062)
[0000][PE] mean and std.dev: (2043.46, 1453.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 397.269 CPU sec, 22.289 real sec
[0000] Calling mem_process_seqs.., task: 1817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518214, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 448, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2362)
[0000][PE] mean and std.dev: (569.85, 429.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 394.760 CPU sec, 22.078 real sec
[0000] Calling mem_process_seqs.., task: 1818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518305, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 466, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1989)
[0000][PE] mean and std.dev: (580.62, 457.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.25, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 394.625 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 1819
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 518167, 1, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000216 bp)...
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 395.422 CPU sec, 22.208 real sec
[0000] Calling mem_process_seqs.., task: 1820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517721, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 590, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (781.08, 826.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.69, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 391.493 CPU sec, 21.872 real sec
[0000] Calling mem_process_seqs.., task: 1821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518113, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 797, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2211)
[0000][PE] mean and std.dev: (613.83, 501.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.92, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1028, 2944, 5828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15428)
[0000][PE] mean and std.dev: (2855.70, 2355.82)
[0000][PE] low and high boundaries for proper pairs: (1, 20228)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 393.864 CPU sec, 22.016 real sec
[0000] Calling mem_process_seqs.., task: 1822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517860, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 867, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5275)
[0000][PE] mean and std.dev: (1044.05, 806.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (665, 956, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (1125.42, 795.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 391.482 CPU sec, 21.886 real sec
[0000] Calling mem_process_seqs.., task: 1823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518112, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 502, 909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1929)
[0000][PE] mean and std.dev: (545.94, 348.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 3005, 7058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18994)
[0000][PE] mean and std.dev: (3949.00, 3260.61)
[0000][PE] low and high boundaries for proper pairs: (1, 24962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 391.517 CPU sec, 21.892 real sec
[0000] Calling mem_process_seqs.., task: 1824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518648, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 961, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4399)
[0000][PE] mean and std.dev: (851.91, 595.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 391.092 CPU sec, 21.872 real sec
[0000] Calling mem_process_seqs.., task: 1825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517732, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 975, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (846.55, 657.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 394.004 CPU sec, 22.005 real sec
[0000] Calling mem_process_seqs.., task: 1826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517928, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 626, 963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2357)
[0000][PE] mean and std.dev: (594.38, 425.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 393.476 CPU sec, 22.039 real sec
[0000] Calling mem_process_seqs.., task: 1827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518463, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 943, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5896)
[0000][PE] mean and std.dev: (1193.29, 1052.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 392.867 CPU sec, 21.986 real sec
[0000] Calling mem_process_seqs.., task: 1828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518226, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 844, 2536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7074)
[0000][PE] mean and std.dev: (1261.35, 1405.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.44, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (399, 1545, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5601)
[0000][PE] mean and std.dev: (1489.45, 1437.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 394.413 CPU sec, 22.062 real sec
[0000] Calling mem_process_seqs.., task: 1829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518345, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 381, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2379)
[0000][PE] mean and std.dev: (568.45, 476.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 390.350 CPU sec, 21.811 real sec
[0000] Calling mem_process_seqs.., task: 1830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518373, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 550, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (765.65, 683.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.84, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1609, 2883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6893)
[0000][PE] mean and std.dev: (1957.38, 1411.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 390.928 CPU sec, 21.842 real sec
[0000] Calling mem_process_seqs.., task: 1831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518310, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 711, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3559)
[0000][PE] mean and std.dev: (944.90, 775.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.79, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 395.971 CPU sec, 22.174 real sec
[0000] Calling mem_process_seqs.., task: 1832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518236, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 443, 2570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7236)
[0000][PE] mean and std.dev: (1141.30, 1297.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.92, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1617, 3006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6778)
[0000][PE] mean and std.dev: (1899.56, 1293.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 393.852 CPU sec, 22.049 real sec
[0000] Calling mem_process_seqs.., task: 1833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518009, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (469, 1154, 3289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8929)
[0000][PE] mean and std.dev: (1700.00, 1824.26)
[0000][PE] low and high boundaries for proper pairs: (1, 11749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1400, 2613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6239)
[0000][PE] mean and std.dev: (1701.64, 1301.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 394.774 CPU sec, 22.089 real sec
[0000] Calling mem_process_seqs.., task: 1834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517973, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 416, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3209)
[0000][PE] mean and std.dev: (757.00, 738.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.24, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1198, 3639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9225)
[0000][PE] mean and std.dev: (1834.00, 1528.66)
[0000][PE] low and high boundaries for proper pairs: (1, 12018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 393.124 CPU sec, 21.984 real sec
[0000] Calling mem_process_seqs.., task: 1835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517547, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 504, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3649)
[0000][PE] mean and std.dev: (817.63, 785.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1816, 2598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5840)
[0000][PE] mean and std.dev: (1989.08, 1463.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 392.973 CPU sec, 21.975 real sec
[0000] Calling mem_process_seqs.., task: 1836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517751, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 1108, 2346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6108)
[0000][PE] mean and std.dev: (1432.50, 1368.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.28, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1324, 2550, 3670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8362)
[0000][PE] mean and std.dev: (2462.64, 1502.44)
[0000][PE] low and high boundaries for proper pairs: (1, 10708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 396.397 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 1837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518316, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 527, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2980)
[0000][PE] mean and std.dev: (651.90, 565.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1415, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (1360.00, 642.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 390.591 CPU sec, 21.837 real sec
[0000] Calling mem_process_seqs.., task: 1838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518446, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 593, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4030)
[0000][PE] mean and std.dev: (971.21, 900.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1874, 3215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8195)
[0000][PE] mean and std.dev: (2064.50, 1450.79)
[0000][PE] low and high boundaries for proper pairs: (1, 10685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 390.401 CPU sec, 21.822 real sec
[0000] Calling mem_process_seqs.., task: 1839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518390, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 352, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3976)
[0000][PE] mean and std.dev: (759.45, 705.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1502, 2278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4538)
[0000][PE] mean and std.dev: (1635.10, 660.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 398.072 CPU sec, 22.329 real sec
[0000] Calling mem_process_seqs.., task: 1840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517629, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 660, 2926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8160)
[0000][PE] mean and std.dev: (1890.42, 2105.78)
[0000][PE] low and high boundaries for proper pairs: (1, 10777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.25, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 394.363 CPU sec, 22.160 real sec
[0000] Calling mem_process_seqs.., task: 1841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518376, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 558, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6924)
[0000][PE] mean and std.dev: (977.15, 958.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 394.789 CPU sec, 22.130 real sec
[0000] Calling mem_process_seqs.., task: 1842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 517863, 7, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.83, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1252, 1508, 2485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4951)
[0000][PE] mean and std.dev: (1534.00, 821.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6184)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 396.501 CPU sec, 22.173 real sec
[0000] Calling mem_process_seqs.., task: 1843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517862, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 958, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4485)
[0000][PE] mean and std.dev: (938.31, 751.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 125.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1561, 2547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5815)
[0000][PE] mean and std.dev: (1569.93, 836.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 391.967 CPU sec, 21.950 real sec
[0000] Calling mem_process_seqs.., task: 1844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518056, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 526, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3893)
[0000][PE] mean and std.dev: (825.71, 827.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 1275, 2633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5523)
[0000][PE] mean and std.dev: (1184.56, 660.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 394.512 CPU sec, 22.094 real sec
[0000] Calling mem_process_seqs.., task: 1845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518034, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 376, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4264)
[0000][PE] mean and std.dev: (914.82, 716.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 397.312 CPU sec, 22.308 real sec
[0000] Calling mem_process_seqs.., task: 1846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518192, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 311, 501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1069)
[0000][PE] mean and std.dev: (336.46, 201.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.76, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (169, 1733, 2700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7762)
[0000][PE] mean and std.dev: (1606.56, 1836.68)
[0000][PE] low and high boundaries for proper pairs: (1, 10293)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 1296, 2746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7582)
[0000][PE] mean and std.dev: (1517.67, 1398.50)
[0000][PE] low and high boundaries for proper pairs: (1, 10000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 395.692 CPU sec, 22.297 real sec
[0000] Calling mem_process_seqs.., task: 1847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518116, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 355, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6822)
[0000][PE] mean and std.dev: (679.75, 844.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 395.258 CPU sec, 22.108 real sec
[0000] Calling mem_process_seqs.., task: 1848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518051, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 389, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (692.61, 660.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.71, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (468, 1246, 3151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8517)
[0000][PE] mean and std.dev: (1831.54, 1773.40)
[0000][PE] low and high boundaries for proper pairs: (1, 11200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 395.779 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 1849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517854, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 1021, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3649)
[0000][PE] mean and std.dev: (830.67, 563.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1709, 3711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9155)
[0000][PE] mean and std.dev: (2406.91, 1708.27)
[0000][PE] low and high boundaries for proper pairs: (1, 11877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 395.528 CPU sec, 22.111 real sec
[0000] Calling mem_process_seqs.., task: 1850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517948, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 369, 3419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9781)
[0000][PE] mean and std.dev: (1837.47, 2306.41)
[0000][PE] low and high boundaries for proper pairs: (1, 12962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1680, 4492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11256)
[0000][PE] mean and std.dev: (2680.67, 2438.73)
[0000][PE] low and high boundaries for proper pairs: (1, 14638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 392.929 CPU sec, 22.004 real sec
[0000] Calling mem_process_seqs.., task: 1851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517917, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 413, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5160)
[0000][PE] mean and std.dev: (1056.20, 1203.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 391.139 CPU sec, 21.895 real sec
[0000] Calling mem_process_seqs.., task: 1852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518373, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 743, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4389)
[0000][PE] mean and std.dev: (1087.24, 1067.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 959, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2318)
[0000][PE] mean and std.dev: (844.10, 359.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 395.537 CPU sec, 22.126 real sec
[0000] Calling mem_process_seqs.., task: 1853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518136, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 379, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1148)
[0000][PE] mean and std.dev: (334.25, 141.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 603)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 925)
[0000][PE] mean and std.dev: (526.93, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1086)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1564, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4074)
[0000][PE] mean and std.dev: (1378.58, 610.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 390.482 CPU sec, 21.920 real sec
[0000] Calling mem_process_seqs.., task: 1854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518315, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (455, 714, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3050)
[0000][PE] mean and std.dev: (732.42, 483.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 393.869 CPU sec, 22.044 real sec
[0000] Calling mem_process_seqs.., task: 1855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518182, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 628, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3698)
[0000][PE] mean and std.dev: (820.64, 665.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.22, 125.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 397.602 CPU sec, 22.279 real sec
[0000] Calling mem_process_seqs.., task: 1856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518249, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 383, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2554)
[0000][PE] mean and std.dev: (626.64, 451.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 396.456 CPU sec, 22.170 real sec
[0000] Calling mem_process_seqs.., task: 1857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517723, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 326, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1516)
[0000][PE] mean and std.dev: (477.80, 424.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 395.633 CPU sec, 22.187 real sec
[0000] Calling mem_process_seqs.., task: 1858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517882, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 125.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 394.144 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 1859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518040, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 453, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (908.57, 820.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 125.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 2885, 3032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6962)
[0000][PE] mean and std.dev: (2278.30, 1434.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 394.349 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 1860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517957, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 394, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2846)
[0000][PE] mean and std.dev: (721.38, 816.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 392.715 CPU sec, 21.976 real sec
[0000] Calling mem_process_seqs.., task: 1861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518179, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 405, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2512)
[0000][PE] mean and std.dev: (550.87, 534.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 394.235 CPU sec, 22.018 real sec
[0000] Calling mem_process_seqs.., task: 1862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517868, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 653, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2835)
[0000][PE] mean and std.dev: (552.88, 336.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1077, 1944, 2824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6318)
[0000][PE] mean and std.dev: (1798.00, 906.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 395.026 CPU sec, 22.142 real sec
[0000] Calling mem_process_seqs.., task: 1863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518053, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 659, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (949.13, 861.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 395.648 CPU sec, 22.121 real sec
[0000] Calling mem_process_seqs.., task: 1864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517913, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 354, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5997)
[0000][PE] mean and std.dev: (1255.88, 1523.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.72, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1598, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4730)
[0000][PE] mean and std.dev: (1338.89, 684.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 394.803 CPU sec, 22.090 real sec
[0000] Calling mem_process_seqs.., task: 1865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518012, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 392, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4699)
[0000][PE] mean and std.dev: (778.63, 835.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.22, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 395.053 CPU sec, 22.179 real sec
[0000] Calling mem_process_seqs.., task: 1866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517486, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 316, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2681)
[0000][PE] mean and std.dev: (500.14, 468.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1139, 2666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6252)
[0000][PE] mean and std.dev: (1567.90, 1049.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8045)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 400.377 CPU sec, 22.557 real sec
[0000] Calling mem_process_seqs.., task: 1867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518477, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 388, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2960)
[0000][PE] mean and std.dev: (655.54, 488.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 395.633 CPU sec, 22.123 real sec
[0000] Calling mem_process_seqs.., task: 1868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518030, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 619, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4398)
[0000][PE] mean and std.dev: (976.57, 1097.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.46, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 395.950 CPU sec, 22.141 real sec
[0000] Calling mem_process_seqs.., task: 1869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518081, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 321, 886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2210)
[0000][PE] mean and std.dev: (358.90, 223.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1655, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3775)
[0000][PE] mean and std.dev: (1453.08, 599.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 396.077 CPU sec, 22.219 real sec
[0000] Calling mem_process_seqs.., task: 1870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 518233, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 395.838 CPU sec, 22.222 real sec
[0000] Calling mem_process_seqs.., task: 1871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517936, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 375, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3608)
[0000][PE] mean and std.dev: (866.55, 945.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1422, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2777)
[0000][PE] mean and std.dev: (1231.60, 504.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 397.164 CPU sec, 22.244 real sec
[0000] Calling mem_process_seqs.., task: 1872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517565, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 433, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2066)
[0000][PE] mean and std.dev: (719.10, 579.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.68, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 398.721 CPU sec, 22.298 real sec
[0000] Calling mem_process_seqs.., task: 1873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517720, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 458, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4129)
[0000][PE] mean and std.dev: (874.73, 812.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1188, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4744)
[0000][PE] mean and std.dev: (1728.60, 1236.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 396.715 CPU sec, 22.224 real sec
[0000] Calling mem_process_seqs.., task: 1874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518033, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 737, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2906)
[0000][PE] mean and std.dev: (715.77, 421.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1617, 3277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7839)
[0000][PE] mean and std.dev: (2065.90, 1077.66)
[0000][PE] low and high boundaries for proper pairs: (1, 10120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 393.886 CPU sec, 22.039 real sec
[0000] Calling mem_process_seqs.., task: 1875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518163, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 502, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2733)
[0000][PE] mean and std.dev: (855.00, 757.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 395.475 CPU sec, 22.157 real sec
[0000] Calling mem_process_seqs.., task: 1876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518009, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 769, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (715.77, 491.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.74, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1453, 1732, 2548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4738)
[0000][PE] mean and std.dev: (1779.50, 691.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 398.022 CPU sec, 22.251 real sec
[0000] Calling mem_process_seqs.., task: 1877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518469, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 900, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6358)
[0000][PE] mean and std.dev: (1292.41, 1130.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 125.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1634, 3498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8148)
[0000][PE] mean and std.dev: (2318.25, 2173.15)
[0000][PE] low and high boundaries for proper pairs: (1, 11011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 392.495 CPU sec, 21.955 real sec
[0000] Calling mem_process_seqs.., task: 1878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205406
	[0000][ M::kt_pipeline] read 1205406 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517593, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 576, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2846)
[0000][PE] mean and std.dev: (853.00, 739.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.75, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1821, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6774)
[0000][PE] mean and std.dev: (1892.55, 1306.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 394.876 CPU sec, 22.085 real sec
[0000] Calling mem_process_seqs.., task: 1879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518198, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 642, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (635.50, 493.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (642, 985, 4544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12348)
[0000][PE] mean and std.dev: (1995.00, 2028.37)
[0000][PE] low and high boundaries for proper pairs: (1, 16250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205406 reads in 393.605 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 1880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518266, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 511, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5465)
[0000][PE] mean and std.dev: (979.67, 857.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1731, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (1637.73, 840.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 392.412 CPU sec, 21.933 real sec
[0000] Calling mem_process_seqs.., task: 1881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518138, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 866, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4198)
[0000][PE] mean and std.dev: (956.47, 904.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.73, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1274, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3909)
[0000][PE] mean and std.dev: (1381.20, 837.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 391.827 CPU sec, 21.924 real sec
[0000] Calling mem_process_seqs.., task: 1882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517989, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 512, 829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1835)
[0000][PE] mean and std.dev: (612.00, 511.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 2587, 3009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7217)
[0000][PE] mean and std.dev: (2553.50, 1834.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 395.678 CPU sec, 22.199 real sec
[0000] Calling mem_process_seqs.., task: 1883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518251, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 693, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2397)
[0000][PE] mean and std.dev: (654.91, 433.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.63, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1732, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3839)
[0000][PE] mean and std.dev: (1375.33, 494.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 395.148 CPU sec, 22.139 real sec
[0000] Calling mem_process_seqs.., task: 1884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518116, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 728, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3223)
[0000][PE] mean and std.dev: (605.44, 416.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1049, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4919)
[0000][PE] mean and std.dev: (1225.29, 823.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 395.801 CPU sec, 22.142 real sec
[0000] Calling mem_process_seqs.., task: 1885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517951, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 524, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2063)
[0000][PE] mean and std.dev: (592.25, 333.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 394.694 CPU sec, 22.075 real sec
[0000] Calling mem_process_seqs.., task: 1886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518043, 9, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 389, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1485)
[0000][PE] mean and std.dev: (436.42, 230.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.27, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 394.501 CPU sec, 22.067 real sec
[0000] Calling mem_process_seqs.., task: 1887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517981, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 369, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2974)
[0000][PE] mean and std.dev: (514.00, 402.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.49, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 397.023 CPU sec, 22.233 real sec
[0000] Calling mem_process_seqs.., task: 1888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517865, 11, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 456, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5759)
[0000][PE] mean and std.dev: (1073.33, 1055.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 125.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (926, 3205, 5966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16046)
[0000][PE] mean and std.dev: (3313.91, 2674.21)
[0000][PE] low and high boundaries for proper pairs: (1, 21086)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 394.156 CPU sec, 22.052 real sec
[0000] Calling mem_process_seqs.., task: 1889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518259, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 480, 3325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9207)
[0000][PE] mean and std.dev: (1708.11, 2166.15)
[0000][PE] low and high boundaries for proper pairs: (1, 12148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.71, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 896, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1909)
[0000][PE] mean and std.dev: (740.67, 277.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 393.943 CPU sec, 22.096 real sec
[0000] Calling mem_process_seqs.., task: 1890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517085, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 1096, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5948)
[0000][PE] mean and std.dev: (1371.67, 1115.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.71, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1427, 1909, 2420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4406)
[0000][PE] mean and std.dev: (1992.36, 631.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 399.766 CPU sec, 22.367 real sec
[0000] Calling mem_process_seqs.., task: 1891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205394
	[0000][ M::kt_pipeline] read 1205394 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518168, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 1094, 2815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7713)
[0000][PE] mean and std.dev: (1929.23, 2256.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.73, 124.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 395.014 CPU sec, 22.099 real sec
[0000] Calling mem_process_seqs.., task: 1892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518351, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 983, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6225)
[0000][PE] mean and std.dev: (1204.14, 1021.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.27, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205394 reads in 393.390 CPU sec, 21.973 real sec
[0000] Calling mem_process_seqs.., task: 1893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518092, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 464, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3140)
[0000][PE] mean and std.dev: (726.67, 543.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1417, 2536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5436)
[0000][PE] mean and std.dev: (1689.20, 880.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 397.030 CPU sec, 22.178 real sec
[0000] Calling mem_process_seqs.., task: 1894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518007, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 691, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (1074.24, 1102.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.21, 124.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (975, 2355, 4743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12279)
[0000][PE] mean and std.dev: (2898.80, 2388.46)
[0000][PE] low and high boundaries for proper pairs: (1, 16047)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (395, 1345, 3014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8252)
[0000][PE] mean and std.dev: (1707.30, 1416.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 397.630 CPU sec, 22.236 real sec
[0000] Calling mem_process_seqs.., task: 1895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517680, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 339, 1133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3045)
[0000][PE] mean and std.dev: (657.86, 748.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 2050, 4103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10219)
[0000][PE] mean and std.dev: (2286.92, 1412.51)
[0000][PE] low and high boundaries for proper pairs: (1, 13277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 398.113 CPU sec, 22.276 real sec
[0000] Calling mem_process_seqs.., task: 1896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517635, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 624, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4775)
[0000][PE] mean and std.dev: (885.19, 894.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1206, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5271)
[0000][PE] mean and std.dev: (1318.67, 761.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 394.914 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 1897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518273, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (831, 1265, 2610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6168)
[0000][PE] mean and std.dev: (1612.92, 1191.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.64, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 395.105 CPU sec, 22.168 real sec
[0000] Calling mem_process_seqs.., task: 1898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517555, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 1396, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5555)
[0000][PE] mean and std.dev: (1292.43, 1010.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 397.569 CPU sec, 22.198 real sec
[0000] Calling mem_process_seqs.., task: 1899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518480, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 418, 782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1660)
[0000][PE] mean and std.dev: (474.11, 283.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.72, 125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 395.259 CPU sec, 22.085 real sec
[0000] Calling mem_process_seqs.., task: 1900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517922, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 446, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (805.47, 739.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.67, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 398.845 CPU sec, 22.290 real sec
[0000] Calling mem_process_seqs.., task: 1901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 518450, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1427, 2028, 2656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5114)
[0000][PE] mean and std.dev: (1741.70, 704.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6343)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 394.881 CPU sec, 22.090 real sec
[0000] Calling mem_process_seqs.., task: 1902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518279, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 481, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3371)
[0000][PE] mean and std.dev: (611.25, 542.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 909, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 2061)
[0000][PE] mean and std.dev: (1001.80, 307.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 394.785 CPU sec, 22.080 real sec
[0000] Calling mem_process_seqs.., task: 1903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518040, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 378, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4135)
[0000][PE] mean and std.dev: (827.88, 906.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 125.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 396.908 CPU sec, 22.249 real sec
[0000] Calling mem_process_seqs.., task: 1904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518098, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 402, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3753)
[0000][PE] mean and std.dev: (695.35, 545.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 396.145 CPU sec, 22.131 real sec
[0000] Calling mem_process_seqs.., task: 1905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205380
	[0000][ M::kt_pipeline] read 1205380 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517654, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 317, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3798)
[0000][PE] mean and std.dev: (587.35, 570.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 393.244 CPU sec, 22.013 real sec
[0000] Calling mem_process_seqs.., task: 1906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518260, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 404, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 991)
[0000][PE] mean and std.dev: (324.21, 123.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.63, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205380 reads in 392.979 CPU sec, 21.949 real sec
[0000] Calling mem_process_seqs.., task: 1907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518309, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 398, 999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2587)
[0000][PE] mean and std.dev: (603.30, 629.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.94, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1044, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5600)
[0000][PE] mean and std.dev: (1701.82, 1403.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 393.274 CPU sec, 22.004 real sec
[0000] Calling mem_process_seqs.., task: 1908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518071, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 298, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5618)
[0000][PE] mean and std.dev: (950.76, 1204.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1456, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (83, 2743)
[0000][PE] mean and std.dev: (1298.33, 385.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 392.810 CPU sec, 21.956 real sec
[0000] Calling mem_process_seqs.., task: 1909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 518030, 5, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1999, 4215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10859)
[0000][PE] mean and std.dev: (2500.06, 2053.62)
[0000][PE] low and high boundaries for proper pairs: (1, 14181)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 396.677 CPU sec, 22.211 real sec
[0000] Calling mem_process_seqs.., task: 1910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517733, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (966, 1315, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4458)
[0000][PE] mean and std.dev: (1407.23, 729.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 397.877 CPU sec, 22.265 real sec
[0000] Calling mem_process_seqs.., task: 1911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517963, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (492, 1121, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5982)
[0000][PE] mean and std.dev: (1337.00, 938.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1768, 2934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6372)
[0000][PE] mean and std.dev: (1924.15, 1044.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 399.354 CPU sec, 22.318 real sec
[0000] Calling mem_process_seqs.., task: 1912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518337, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (449, 619, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6230)
[0000][PE] mean and std.dev: (1410.15, 1347.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1344, 2347, 2882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5958)
[0000][PE] mean and std.dev: (2225.71, 1249.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 393.444 CPU sec, 21.981 real sec
[0000] Calling mem_process_seqs.., task: 1913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518198, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 357, 489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 941)
[0000][PE] mean and std.dev: (334.54, 160.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 396.643 CPU sec, 22.181 real sec
[0000] Calling mem_process_seqs.., task: 1914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518218, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 388, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4799)
[0000][PE] mean and std.dev: (850.56, 941.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 396.176 CPU sec, 22.145 real sec
[0000] Calling mem_process_seqs.., task: 1915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518335, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 360, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1644)
[0000][PE] mean and std.dev: (547.64, 462.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1450, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1338.92, 609.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 393.196 CPU sec, 21.955 real sec
[0000] Calling mem_process_seqs.., task: 1916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517786, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 476, 2687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7681)
[0000][PE] mean and std.dev: (1433.54, 2022.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1544, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3663)
[0000][PE] mean and std.dev: (1469.86, 667.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 396.804 CPU sec, 22.184 real sec
[0000] Calling mem_process_seqs.., task: 1917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518127, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 765, 2428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6904)
[0000][PE] mean and std.dev: (1315.59, 1397.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.64, 124.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1667, 3201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7575)
[0000][PE] mean and std.dev: (2057.43, 1636.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 395.847 CPU sec, 22.149 real sec
[0000] Calling mem_process_seqs.., task: 1918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518332, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 521, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6432)
[0000][PE] mean and std.dev: (1339.28, 1466.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 397.996 CPU sec, 22.256 real sec
[0000] Calling mem_process_seqs.., task: 1919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517497, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 385, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (860.50, 892.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.22, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 395.085 CPU sec, 22.141 real sec
[0000] Calling mem_process_seqs.., task: 1920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 518110, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 1243, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5456)
[0000][PE] mean and std.dev: (1380.86, 839.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7048)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 390.743 CPU sec, 21.801 real sec
[0000] Calling mem_process_seqs.., task: 1921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518319, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 509, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6268)
[0000][PE] mean and std.dev: (1244.54, 1288.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.22, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 395.207 CPU sec, 22.080 real sec
[0000] Calling mem_process_seqs.., task: 1922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517765, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 287, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3858)
[0000][PE] mean and std.dev: (615.14, 893.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 395.131 CPU sec, 22.104 real sec
[0000] Calling mem_process_seqs.., task: 1923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517725, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 521, 3817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11051)
[0000][PE] mean and std.dev: (2010.10, 2522.38)
[0000][PE] low and high boundaries for proper pairs: (1, 14668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.69, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 397.897 CPU sec, 22.261 real sec
[0000] Calling mem_process_seqs.., task: 1924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517998, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 575, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3032)
[0000][PE] mean and std.dev: (801.06, 689.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1115, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2533)
[0000][PE] mean and std.dev: (1035.79, 458.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 396.849 CPU sec, 22.199 real sec
[0000] Calling mem_process_seqs.., task: 1925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518250, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 735, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (757.76, 625.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.58, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 396.189 CPU sec, 22.169 real sec
[0000] Calling mem_process_seqs.., task: 1926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517757, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 855, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2783)
[0000][PE] mean and std.dev: (836.25, 532.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.14, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 398.924 CPU sec, 22.290 real sec
[0000] Calling mem_process_seqs.., task: 1927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518422, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (571, 1055, 1892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4534)
[0000][PE] mean and std.dev: (1088.80, 711.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 394.342 CPU sec, 22.077 real sec
[0000] Calling mem_process_seqs.., task: 1928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518459, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 1184, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4765)
[0000][PE] mean and std.dev: (884.79, 690.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1645, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (1654.86, 961.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 392.716 CPU sec, 21.946 real sec
[0000] Calling mem_process_seqs.., task: 1929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518125, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 619, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2082)
[0000][PE] mean and std.dev: (463.70, 258.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1589, 3366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7886)
[0000][PE] mean and std.dev: (2105.88, 1416.48)
[0000][PE] low and high boundaries for proper pairs: (1, 10146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 392.539 CPU sec, 21.953 real sec
[0000] Calling mem_process_seqs.., task: 1930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518190, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 896, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4192)
[0000][PE] mean and std.dev: (1164.00, 1130.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.19, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 397.618 CPU sec, 22.240 real sec
[0000] Calling mem_process_seqs.., task: 1931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517870, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 344, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5466)
[0000][PE] mean and std.dev: (994.41, 1238.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.76, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 394.373 CPU sec, 22.100 real sec
[0000] Calling mem_process_seqs.., task: 1932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518574, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 871, 2637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7173)
[0000][PE] mean and std.dev: (1504.92, 1727.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.76, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1831, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5216)
[0000][PE] mean and std.dev: (1701.83, 1102.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 395.500 CPU sec, 22.105 real sec
[0000] Calling mem_process_seqs.., task: 1933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517931, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 956, 2719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7423)
[0000][PE] mean and std.dev: (1584.92, 1593.63)
[0000][PE] low and high boundaries for proper pairs: (1, 9775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 395.976 CPU sec, 22.155 real sec
[0000] Calling mem_process_seqs.., task: 1934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518549, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 896, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4970)
[0000][PE] mean and std.dev: (1238.25, 1258.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.78, 125.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 4265, 6623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17663)
[0000][PE] mean and std.dev: (3764.82, 3079.67)
[0000][PE] low and high boundaries for proper pairs: (1, 23183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 393.954 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 1935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205428
	[0000][ M::kt_pipeline] read 1205428 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517884, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 897, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2850)
[0000][PE] mean and std.dev: (915.21, 763.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1629, 2917, 4748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10986)
[0000][PE] mean and std.dev: (3184.90, 1663.34)
[0000][PE] low and high boundaries for proper pairs: (1, 14105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 397.565 CPU sec, 22.258 real sec
[0000] Calling mem_process_seqs.., task: 1936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518014, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 474, 2843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7779)
[0000][PE] mean and std.dev: (1445.38, 1612.54)
[0000][PE] low and high boundaries for proper pairs: (1, 10247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1474, 3206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7442)
[0000][PE] mean and std.dev: (1987.92, 1571.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205428 reads in 394.763 CPU sec, 22.051 real sec
[0000] Calling mem_process_seqs.., task: 1937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518256, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 657, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3378)
[0000][PE] mean and std.dev: (876.80, 774.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1596, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4332)
[0000][PE] mean and std.dev: (1554.94, 984.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 394.998 CPU sec, 22.065 real sec
[0000] Calling mem_process_seqs.., task: 1938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518060, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (645, 1074, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3291)
[0000][PE] mean and std.dev: (903.60, 457.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 394.930 CPU sec, 22.097 real sec
[0000] Calling mem_process_seqs.., task: 1939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517999, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 562, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4619)
[0000][PE] mean and std.dev: (775.38, 670.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.26, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 393.847 CPU sec, 22.011 real sec
[0000] Calling mem_process_seqs.., task: 1940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518166, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 931, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3641)
[0000][PE] mean and std.dev: (892.88, 731.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (669, 1042, 3717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9813)
[0000][PE] mean and std.dev: (1993.81, 1847.66)
[0000][PE] low and high boundaries for proper pairs: (1, 12861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 395.934 CPU sec, 22.129 real sec
[0000] Calling mem_process_seqs.., task: 1941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518007, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 421, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (845.27, 887.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 398.328 CPU sec, 22.254 real sec
[0000] Calling mem_process_seqs.., task: 1942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517879, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 405, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5139)
[0000][PE] mean and std.dev: (1106.32, 1330.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1762, 2440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5228)
[0000][PE] mean and std.dev: (1900.24, 1225.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 395.946 CPU sec, 22.125 real sec
[0000] Calling mem_process_seqs.., task: 1943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518288, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 465, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6228)
[0000][PE] mean and std.dev: (1498.05, 1957.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.64, 125.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 396.470 CPU sec, 22.206 real sec
[0000] Calling mem_process_seqs.., task: 1944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517655, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (488, 1127, 2627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6905)
[0000][PE] mean and std.dev: (1381.80, 1368.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (607, 1462, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (1506.00, 958.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 397.107 CPU sec, 22.216 real sec
[0000] Calling mem_process_seqs.., task: 1945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518459, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 521, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2480)
[0000][PE] mean and std.dev: (697.44, 491.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 395.420 CPU sec, 22.126 real sec
[0000] Calling mem_process_seqs.., task: 1946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518289, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (428, 544, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2597)
[0000][PE] mean and std.dev: (803.87, 642.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 396.945 CPU sec, 22.232 real sec
[0000] Calling mem_process_seqs.., task: 1947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518070, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 724, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2329)
[0000][PE] mean and std.dev: (607.81, 360.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1507, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (1528.31, 852.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 399.311 CPU sec, 22.380 real sec
[0000] Calling mem_process_seqs.., task: 1948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517886, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 393.469 CPU sec, 22.016 real sec
[0000] Calling mem_process_seqs.., task: 1949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518262, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 963, 3557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10095)
[0000][PE] mean and std.dev: (1897.69, 2174.49)
[0000][PE] low and high boundaries for proper pairs: (1, 13364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.80, 124.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (412, 1312, 2604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6988)
[0000][PE] mean and std.dev: (1969.12, 1952.54)
[0000][PE] low and high boundaries for proper pairs: (1, 9779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 395.248 CPU sec, 22.128 real sec
[0000] Calling mem_process_seqs.., task: 1950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518170, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (950, 1500, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (1385.38, 835.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.94, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 393.621 CPU sec, 22.002 real sec
[0000] Calling mem_process_seqs.., task: 1951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517487, 9, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 522, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3083)
[0000][PE] mean and std.dev: (550.30, 370.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 398.401 CPU sec, 22.269 real sec
[0000] Calling mem_process_seqs.., task: 1952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518560, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 503, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3216)
[0000][PE] mean and std.dev: (649.62, 451.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.83, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 396.720 CPU sec, 22.248 real sec
[0000] Calling mem_process_seqs.., task: 1953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518034, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 1005, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3426)
[0000][PE] mean and std.dev: (922.77, 672.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 395.799 CPU sec, 22.141 real sec
[0000] Calling mem_process_seqs.., task: 1954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517848, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 661, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3820)
[0000][PE] mean and std.dev: (924.85, 792.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 398.406 CPU sec, 22.259 real sec
[0000] Calling mem_process_seqs.., task: 1955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517527, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 400, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4782)
[0000][PE] mean and std.dev: (859.85, 978.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.50, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 397.800 CPU sec, 22.258 real sec
[0000] Calling mem_process_seqs.., task: 1956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518025, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 458, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2270)
[0000][PE] mean and std.dev: (563.12, 486.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 1839, 3009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8431)
[0000][PE] mean and std.dev: (2094.30, 2051.63)
[0000][PE] low and high boundaries for proper pairs: (1, 11142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 398.228 CPU sec, 22.277 real sec
[0000] Calling mem_process_seqs.., task: 1957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517753, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 520, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2354)
[0000][PE] mean and std.dev: (669.24, 525.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1322, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (1389.23, 465.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 396.416 CPU sec, 22.157 real sec
[0000] Calling mem_process_seqs.., task: 1958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518063, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 965, 3110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8404)
[0000][PE] mean and std.dev: (1727.53, 1870.62)
[0000][PE] low and high boundaries for proper pairs: (1, 11051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.70, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1953, 2338, 3667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7095)
[0000][PE] mean and std.dev: (2768.09, 1784.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 394.590 CPU sec, 22.069 real sec
[0000] Calling mem_process_seqs.., task: 1959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518255, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 519, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (883.00, 760.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.85, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 398.885 CPU sec, 22.329 real sec
[0000] Calling mem_process_seqs.., task: 1960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518129, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 729, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2516)
[0000][PE] mean and std.dev: (782.30, 665.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 396.685 CPU sec, 22.177 real sec
[0000] Calling mem_process_seqs.., task: 1961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517944, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 388, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (698.67, 685.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.59, 125.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1575, 1741, 2585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4605)
[0000][PE] mean and std.dev: (1739.50, 804.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 395.812 CPU sec, 22.138 real sec
[0000] Calling mem_process_seqs.., task: 1962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 518136, 7, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.77, 125.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 395.075 CPU sec, 22.099 real sec
[0000] Calling mem_process_seqs.., task: 1963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518267, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 1713, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6504)
[0000][PE] mean and std.dev: (1525.67, 1204.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.86, 125.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1077, 2115, 3169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7353)
[0000][PE] mean and std.dev: (2153.70, 1085.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 395.681 CPU sec, 22.138 real sec
[0000] Calling mem_process_seqs.., task: 1964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518057, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 353, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6496)
[0000][PE] mean and std.dev: (855.45, 946.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (571, 685, 6278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17692)
[0000][PE] mean and std.dev: (2705.36, 2923.65)
[0000][PE] low and high boundaries for proper pairs: (1, 23399)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1562, 2679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5927)
[0000][PE] mean and std.dev: (1768.42, 1009.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 394.814 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 1965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518140, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 472, 806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1728)
[0000][PE] mean and std.dev: (476.55, 168.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 125.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1274, 3146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7754)
[0000][PE] mean and std.dev: (1754.29, 1386.07)
[0000][PE] low and high boundaries for proper pairs: (1, 10058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 396.113 CPU sec, 22.129 real sec
[0000] Calling mem_process_seqs.., task: 1966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517900, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 534, 3326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9126)
[0000][PE] mean and std.dev: (1833.47, 2319.39)
[0000][PE] low and high boundaries for proper pairs: (1, 12026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.18, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 394.356 CPU sec, 22.059 real sec
[0000] Calling mem_process_seqs.., task: 1967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517804, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 523, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4578)
[0000][PE] mean and std.dev: (1078.50, 1064.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1364, 2154, 3217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6923)
[0000][PE] mean and std.dev: (2121.80, 1127.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 397.429 CPU sec, 22.262 real sec
[0000] Calling mem_process_seqs.., task: 1968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205436
	[0000][ M::kt_pipeline] read 1205436 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518020, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 813, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4967)
[0000][PE] mean and std.dev: (1162.87, 1075.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.62, 125.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1167, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3009)
[0000][PE] mean and std.dev: (1088.00, 500.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 394.100 CPU sec, 22.064 real sec
[0000] Calling mem_process_seqs.., task: 1969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518109, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 411, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (623.17, 577.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.48, 124.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1763, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4501)
[0000][PE] mean and std.dev: (1715.86, 1116.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205436 reads in 392.788 CPU sec, 21.981 real sec
[0000] Calling mem_process_seqs.., task: 1970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518157, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 495, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6037)
[0000][PE] mean and std.dev: (744.28, 679.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 125.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (901, 1832, 3877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9829)
[0000][PE] mean and std.dev: (2561.90, 2362.94)
[0000][PE] low and high boundaries for proper pairs: (1, 12805)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1503, 3478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8596)
[0000][PE] mean and std.dev: (2001.17, 1951.37)
[0000][PE] low and high boundaries for proper pairs: (1, 11155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 392.409 CPU sec, 21.917 real sec
[0000] Calling mem_process_seqs.., task: 1971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 518181, 1, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.45, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 393.219 CPU sec, 22.016 real sec
[0000] Calling mem_process_seqs.., task: 1972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518344, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 762, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (931.14, 784.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 394.813 CPU sec, 22.076 real sec
[0000] Calling mem_process_seqs.., task: 1973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517482, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 579, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5149)
[0000][PE] mean and std.dev: (1055.75, 1147.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.42, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 396.037 CPU sec, 22.157 real sec
[0000] Calling mem_process_seqs.., task: 1974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518136, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 495, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (775.20, 766.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 2935, 3966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9976)
[0000][PE] mean and std.dev: (2428.20, 1405.39)
[0000][PE] low and high boundaries for proper pairs: (1, 12981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 394.922 CPU sec, 22.112 real sec
[0000] Calling mem_process_seqs.., task: 1975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518341, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 539, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2324)
[0000][PE] mean and std.dev: (522.15, 365.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 394.408 CPU sec, 22.158 real sec
[0000] Calling mem_process_seqs.., task: 1976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517868, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 928, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5297)
[0000][PE] mean and std.dev: (1203.42, 1045.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.48, 124.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1452, 2353, 3106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6414)
[0000][PE] mean and std.dev: (2176.33, 1253.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 394.934 CPU sec, 22.109 real sec
[0000] Calling mem_process_seqs.., task: 1977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518039, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 594, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4577)
[0000][PE] mean and std.dev: (855.39, 799.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 955, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3248)
[0000][PE] mean and std.dev: (1108.33, 613.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 394.046 CPU sec, 22.013 real sec
[0000] Calling mem_process_seqs.., task: 1978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518414, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 348, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1269)
[0000][PE] mean and std.dev: (254.07, 155.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 878, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (1341.80, 959.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5416)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 393.682 CPU sec, 22.061 real sec
[0000] Calling mem_process_seqs.., task: 1979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517676, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 343, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6343)
[0000][PE] mean and std.dev: (970.15, 1031.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.54, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 396.715 CPU sec, 22.199 real sec
[0000] Calling mem_process_seqs.., task: 1980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518606, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 640, 3291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8993)
[0000][PE] mean and std.dev: (1650.17, 2350.93)
[0000][PE] low and high boundaries for proper pairs: (1, 11844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.69, 125.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 396.050 CPU sec, 22.159 real sec
[0000] Calling mem_process_seqs.., task: 1981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517914, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 795, 3045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8481)
[0000][PE] mean and std.dev: (1549.25, 1671.95)
[0000][PE] low and high boundaries for proper pairs: (1, 11199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.72, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 397.407 CPU sec, 22.251 real sec
[0000] Calling mem_process_seqs.., task: 1982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517926, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 454, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (767.50, 732.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.83, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 2258, 4265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10655)
[0000][PE] mean and std.dev: (3032.81, 2814.27)
[0000][PE] low and high boundaries for proper pairs: (1, 14290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 396.676 CPU sec, 22.184 real sec
[0000] Calling mem_process_seqs.., task: 1983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518696, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 347, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4857)
[0000][PE] mean and std.dev: (678.50, 659.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (528.04, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1712, 3012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6820)
[0000][PE] mean and std.dev: (2206.28, 1577.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 392.633 CPU sec, 21.963 real sec
[0000] Calling mem_process_seqs.., task: 1984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518236, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 697, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4964)
[0000][PE] mean and std.dev: (853.36, 828.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1277, 2121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4101)
[0000][PE] mean and std.dev: (1326.90, 609.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 396.267 CPU sec, 22.164 real sec
[0000] Calling mem_process_seqs.., task: 1985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518126, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 373, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3219)
[0000][PE] mean and std.dev: (619.18, 560.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1792, 2987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7491)
[0000][PE] mean and std.dev: (1872.62, 1465.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 393.586 CPU sec, 22.042 real sec
[0000] Calling mem_process_seqs.., task: 1986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518459, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 830, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4860)
[0000][PE] mean and std.dev: (953.21, 849.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1266, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4143)
[0000][PE] mean and std.dev: (1343.12, 931.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 394.675 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 1987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518014, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 367, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (708.44, 715.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.81, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 392.886 CPU sec, 21.947 real sec
[0000] Calling mem_process_seqs.., task: 1988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517550, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 842, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4904)
[0000][PE] mean and std.dev: (1264.89, 1361.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1407, 4653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11525)
[0000][PE] mean and std.dev: (2436.08, 2402.04)
[0000][PE] low and high boundaries for proper pairs: (1, 14961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 397.240 CPU sec, 22.216 real sec
[0000] Calling mem_process_seqs.., task: 1989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517980, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 825, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4151)
[0000][PE] mean and std.dev: (1034.29, 1054.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1489, 1797, 3605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7837)
[0000][PE] mean and std.dev: (1923.10, 1115.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 393.442 CPU sec, 22.001 real sec
[0000] Calling mem_process_seqs.., task: 1990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517909, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 435, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3710)
[0000][PE] mean and std.dev: (682.67, 587.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1618, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3600)
[0000][PE] mean and std.dev: (1253.25, 508.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 394.776 CPU sec, 22.108 real sec
[0000] Calling mem_process_seqs.., task: 1991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517913, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 849, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3828)
[0000][PE] mean and std.dev: (968.07, 850.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 2118, 2713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6753)
[0000][PE] mean and std.dev: (1855.10, 1249.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 394.057 CPU sec, 22.032 real sec
[0000] Calling mem_process_seqs.., task: 1992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517825, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 430, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (764.58, 817.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.47, 124.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1500, 3356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7676)
[0000][PE] mean and std.dev: (2304.50, 1852.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 395.392 CPU sec, 22.073 real sec
[0000] Calling mem_process_seqs.., task: 1993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518271, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 459, 904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2080)
[0000][PE] mean and std.dev: (618.23, 507.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.12, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 394.585 CPU sec, 22.076 real sec
[0000] Calling mem_process_seqs.., task: 1994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518062, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 463, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2559)
[0000][PE] mean and std.dev: (679.17, 670.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.82, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 394.323 CPU sec, 22.072 real sec
[0000] Calling mem_process_seqs.., task: 1995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517956, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 623, 2924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8146)
[0000][PE] mean and std.dev: (1782.54, 2263.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.43, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1297, 1532, 3209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7033)
[0000][PE] mean and std.dev: (1917.93, 1146.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 391.172 CPU sec, 21.914 real sec
[0000] Calling mem_process_seqs.., task: 1996
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000238 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518155, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 449, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3479)
[0000][PE] mean and std.dev: (552.94, 463.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 394.134 CPU sec, 22.093 real sec
[0000] Calling mem_process_seqs.., task: 1997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517824, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 747, 2609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7095)
[0000][PE] mean and std.dev: (1163.47, 1274.98)
[0000][PE] low and high boundaries for proper pairs: (1, 9338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.37, 124.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1491, 3358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8092)
[0000][PE] mean and std.dev: (2098.25, 1592.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 393.119 CPU sec, 21.963 real sec
[0000] Calling mem_process_seqs.., task: 1998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517962, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 720, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (690.53, 509.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 393.544 CPU sec, 22.010 real sec
[0000] Calling mem_process_seqs.., task: 1999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205462
	[0000][ M::kt_pipeline] read 1205462 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518328, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 1091, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4638)
[0000][PE] mean and std.dev: (882.55, 574.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.69, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1207, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3292)
[0000][PE] mean and std.dev: (1162.45, 434.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 390.227 CPU sec, 21.869 real sec
[0000] Calling mem_process_seqs.., task: 2000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518284, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 395, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5336)
[0000][PE] mean and std.dev: (923.91, 967.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.54, 125.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 2252, 3622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8978)
[0000][PE] mean and std.dev: (2755.80, 2241.55)
[0000][PE] low and high boundaries for proper pairs: (1, 11722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205462 reads in 391.061 CPU sec, 21.904 real sec
[0000] Calling mem_process_seqs.., task: 2001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518238, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 645, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (784.42, 568.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 2187, 4592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11904)
[0000][PE] mean and std.dev: (2509.46, 1925.60)
[0000][PE] low and high boundaries for proper pairs: (1, 15560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 393.082 CPU sec, 22.013 real sec
[0000] Calling mem_process_seqs.., task: 2002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517991, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 898, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (945.36, 830.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.30, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1616, 2482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5172)
[0000][PE] mean and std.dev: (1682.13, 1100.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 393.571 CPU sec, 22.014 real sec
[0000] Calling mem_process_seqs.., task: 2003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518261, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 1394, 2592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6958)
[0000][PE] mean and std.dev: (1620.33, 1259.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 388.984 CPU sec, 21.812 real sec
[0000] Calling mem_process_seqs.., task: 2004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518059, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (819, 1193, 3435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8667)
[0000][PE] mean and std.dev: (1969.09, 1923.65)
[0000][PE] low and high boundaries for proper pairs: (1, 11283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.90, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 393.924 CPU sec, 22.021 real sec
[0000] Calling mem_process_seqs.., task: 2005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518171, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 464, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (778.40, 986.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1347, 3424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8858)
[0000][PE] mean and std.dev: (2300.12, 2165.18)
[0000][PE] low and high boundaries for proper pairs: (1, 11575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 388.300 CPU sec, 21.735 real sec
[0000] Calling mem_process_seqs.., task: 2006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517939, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 1205, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5440)
[0000][PE] mean and std.dev: (1132.27, 1029.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.84, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1355, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4820)
[0000][PE] mean and std.dev: (1593.38, 843.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 395.072 CPU sec, 22.102 real sec
[0000] Calling mem_process_seqs.., task: 2007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205396
	[0000][ M::kt_pipeline] read 1205396 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517909, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 551, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2187)
[0000][PE] mean and std.dev: (570.19, 317.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 392.458 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 2008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518394, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 349, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1683)
[0000][PE] mean and std.dev: (417.42, 255.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1536, 2971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6553)
[0000][PE] mean and std.dev: (2034.85, 1308.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205396 reads in 390.439 CPU sec, 21.831 real sec
[0000] Calling mem_process_seqs.., task: 2009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518055, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 368, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3442)
[0000][PE] mean and std.dev: (667.32, 612.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 390.726 CPU sec, 21.892 real sec
[0000] Calling mem_process_seqs.., task: 2010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518072, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1114, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6833)
[0000][PE] mean and std.dev: (1260.29, 1141.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 392.074 CPU sec, 21.937 real sec
[0000] Calling mem_process_seqs.., task: 2011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 517981, 1, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1417, 1572, 3348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7210)
[0000][PE] mean and std.dev: (2219.08, 1377.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9141)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 391.655 CPU sec, 21.943 real sec
[0000] Calling mem_process_seqs.., task: 2012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518276, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.49, 125.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1340, 4840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12834)
[0000][PE] mean and std.dev: (2382.92, 2235.38)
[0000][PE] low and high boundaries for proper pairs: (1, 16831)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 392.424 CPU sec, 21.914 real sec
[0000] Calling mem_process_seqs.., task: 2013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518157, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 499, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6305)
[0000][PE] mean and std.dev: (1126.77, 1272.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.48, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1320, 1928, 2882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6006)
[0000][PE] mean and std.dev: (1980.27, 1125.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 391.999 CPU sec, 21.932 real sec
[0000] Calling mem_process_seqs.., task: 2014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518092, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 679, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4044)
[0000][PE] mean and std.dev: (695.29, 606.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 395.869 CPU sec, 22.128 real sec
[0000] Calling mem_process_seqs.., task: 2015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205420
	[0000][ M::kt_pipeline] read 1205420 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518039, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 457, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3233)
[0000][PE] mean and std.dev: (700.22, 584.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 125.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 392.108 CPU sec, 21.940 real sec
[0000] Calling mem_process_seqs.., task: 2016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518048, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 486, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3435)
[0000][PE] mean and std.dev: (855.39, 807.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.69, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205420 reads in 392.731 CPU sec, 21.962 real sec
[0000] Calling mem_process_seqs.., task: 2017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518186, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 439, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5035)
[0000][PE] mean and std.dev: (1108.47, 1178.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 392.250 CPU sec, 21.940 real sec
[0000] Calling mem_process_seqs.., task: 2018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518309, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 838, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3848)
[0000][PE] mean and std.dev: (863.07, 605.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.63, 125.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (668, 1281, 2275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5489)
[0000][PE] mean and std.dev: (1379.15, 872.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 395.788 CPU sec, 22.171 real sec
[0000] Calling mem_process_seqs.., task: 2019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518525, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 1056, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5602)
[0000][PE] mean and std.dev: (1125.46, 1043.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.12, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 390.267 CPU sec, 21.830 real sec
[0000] Calling mem_process_seqs.., task: 2020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 517541, 10, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.51, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (119, 1617, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4898)
[0000][PE] mean and std.dev: (1318.80, 1280.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6491)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 395.939 CPU sec, 22.146 real sec
[0000] Calling mem_process_seqs.., task: 2021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518015, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 720, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4225)
[0000][PE] mean and std.dev: (936.40, 673.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 396.604 CPU sec, 22.238 real sec
[0000] Calling mem_process_seqs.., task: 2022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517612, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 305, 502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1142)
[0000][PE] mean and std.dev: (336.00, 232.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 393.334 CPU sec, 22.017 real sec
[0000] Calling mem_process_seqs.., task: 2023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517811, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 455, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1084)
[0000][PE] mean and std.dev: (480.25, 208.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.88, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 394.057 CPU sec, 22.096 real sec
[0000] Calling mem_process_seqs.., task: 2024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518053, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 566, 845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1851)
[0000][PE] mean and std.dev: (647.43, 425.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1216, 1999, 2961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6451)
[0000][PE] mean and std.dev: (2115.70, 1289.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 395.088 CPU sec, 22.086 real sec
[0000] Calling mem_process_seqs.., task: 2025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205444
	[0000][ M::kt_pipeline] read 1205444 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517528, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 353, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2780)
[0000][PE] mean and std.dev: (605.42, 561.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 394.684 CPU sec, 22.114 real sec
[0000] Calling mem_process_seqs.., task: 2026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518393, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.86, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205444 reads in 393.118 CPU sec, 21.967 real sec
[0000] Calling mem_process_seqs.., task: 2027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518076, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 947, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5363)
[0000][PE] mean and std.dev: (995.71, 829.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.52, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1560, 2500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5098)
[0000][PE] mean and std.dev: (1666.50, 630.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 392.366 CPU sec, 21.962 real sec
[0000] Calling mem_process_seqs.., task: 2028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517445, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (554, 1418, 3344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8924)
[0000][PE] mean and std.dev: (1929.56, 2118.81)
[0000][PE] low and high boundaries for proper pairs: (1, 11714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.58, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 396.665 CPU sec, 22.187 real sec
[0000] Calling mem_process_seqs.., task: 2029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518031, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (579, 1350, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4908)
[0000][PE] mean and std.dev: (1523.93, 1059.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.64, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 392.972 CPU sec, 21.987 real sec
[0000] Calling mem_process_seqs.., task: 2030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518646, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 1001, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4167)
[0000][PE] mean and std.dev: (1191.93, 932.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1155, 2189, 2614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5532)
[0000][PE] mean and std.dev: (1729.30, 944.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 392.031 CPU sec, 21.979 real sec
[0000] Calling mem_process_seqs.., task: 2031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517704, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 459, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5440)
[0000][PE] mean and std.dev: (936.90, 887.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.62, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1661, 1796, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (2053.00, 846.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 395.845 CPU sec, 22.156 real sec
[0000] Calling mem_process_seqs.., task: 2032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518155, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 316, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1239)
[0000][PE] mean and std.dev: (363.12, 191.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.61, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1673, 2436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4988)
[0000][PE] mean and std.dev: (1538.00, 840.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 392.778 CPU sec, 21.951 real sec
[0000] Calling mem_process_seqs.., task: 2033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205404
	[0000][ M::kt_pipeline] read 1205404 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518254, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 620, 2547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7217)
[0000][PE] mean and std.dev: (1564.93, 1813.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 921, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (59, 1784)
[0000][PE] mean and std.dev: (859.38, 145.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 391.529 CPU sec, 21.903 real sec
[0000] Calling mem_process_seqs.., task: 2034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517954, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 669, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5600)
[0000][PE] mean and std.dev: (1074.38, 956.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205404 reads in 394.647 CPU sec, 22.067 real sec
[0000] Calling mem_process_seqs.., task: 2035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517906, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 1014, 4503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12981)
[0000][PE] mean and std.dev: (2366.70, 2545.15)
[0000][PE] low and high boundaries for proper pairs: (1, 17220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 394.622 CPU sec, 22.080 real sec
[0000] Calling mem_process_seqs.., task: 2036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 517785, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.75, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1578, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5719)
[0000][PE] mean and std.dev: (1661.75, 1182.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7347)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 394.268 CPU sec, 22.031 real sec
[0000] Calling mem_process_seqs.., task: 2037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518009, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 371, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3510)
[0000][PE] mean and std.dev: (634.35, 605.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 395.547 CPU sec, 22.138 real sec
[0000] Calling mem_process_seqs.., task: 2038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517763, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 1045, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4326)
[0000][PE] mean and std.dev: (1180.27, 1152.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (474, 1434, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5862)
[0000][PE] mean and std.dev: (1444.55, 1074.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 395.318 CPU sec, 22.108 real sec
[0000] Calling mem_process_seqs.., task: 2039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205354
	[0000][ M::kt_pipeline] read 1205354 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517807, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 1287, 2932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8088)
[0000][PE] mean and std.dev: (1701.77, 1929.54)
[0000][PE] low and high boundaries for proper pairs: (1, 10666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.56, 124.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 393.701 CPU sec, 22.014 real sec
[0000] Calling mem_process_seqs.., task: 2040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518472, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 854, 1046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2560)
[0000][PE] mean and std.dev: (619.22, 352.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (547, 1568, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (1312.11, 790.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205354 reads in 393.049 CPU sec, 21.989 real sec
[0000] Calling mem_process_seqs.., task: 2041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205418
	[0000][ M::kt_pipeline] read 1205418 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517815, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 376, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4504)
[0000][PE] mean and std.dev: (872.12, 954.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1198, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (1298.55, 456.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 392.922 CPU sec, 21.964 real sec
[0000] Calling mem_process_seqs.., task: 2042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518161, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (475, 1149, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4267)
[0000][PE] mean and std.dev: (1056.28, 944.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205418 reads in 392.320 CPU sec, 21.934 real sec
[0000] Calling mem_process_seqs.., task: 2043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517831, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 745, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3869)
[0000][PE] mean and std.dev: (1063.05, 1011.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1325, 1615, 3922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9116)
[0000][PE] mean and std.dev: (2611.46, 2161.94)
[0000][PE] low and high boundaries for proper pairs: (1, 11713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 392.962 CPU sec, 21.959 real sec
[0000] Calling mem_process_seqs.., task: 2044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518315, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 420, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (846.78, 679.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 391.867 CPU sec, 21.944 real sec
[0000] Calling mem_process_seqs.., task: 2045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517692, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 389, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1259)
[0000][PE] mean and std.dev: (368.53, 181.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1248, 1947, 2935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6309)
[0000][PE] mean and std.dev: (1971.22, 1123.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 392.658 CPU sec, 21.970 real sec
[0000] Calling mem_process_seqs.., task: 2046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518161, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 423, 2642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7510)
[0000][PE] mean and std.dev: (1214.06, 1475.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 394.998 CPU sec, 22.095 real sec
[0000] Calling mem_process_seqs.., task: 2047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517684, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 361, 2441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6873)
[0000][PE] mean and std.dev: (1054.00, 1074.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.67, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (683, 2094, 3582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9380)
[0000][PE] mean and std.dev: (2086.92, 1401.43)
[0000][PE] low and high boundaries for proper pairs: (1, 12279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 392.642 CPU sec, 21.957 real sec
[0000] Calling mem_process_seqs.., task: 2048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205474
	[0000][ M::kt_pipeline] read 1205474 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517932, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 439, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (792.68, 660.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (536, 2614, 5099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14225)
[0000][PE] mean and std.dev: (2735.70, 2243.38)
[0000][PE] low and high boundaries for proper pairs: (1, 18788)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1538, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2759)
[0000][PE] mean and std.dev: (1232.73, 455.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 394.680 CPU sec, 22.049 real sec
[0000] Calling mem_process_seqs.., task: 2049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517912, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 935, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5442)
[0000][PE] mean and std.dev: (1218.72, 1228.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1207, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4446)
[0000][PE] mean and std.dev: (1278.58, 621.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205474 reads in 392.452 CPU sec, 21.918 real sec
[0000] Calling mem_process_seqs.., task: 2050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205426
	[0000][ M::kt_pipeline] read 1205426 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517951, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 779, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3871)
[0000][PE] mean and std.dev: (1006.44, 796.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.47, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1431, 3893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9889)
[0000][PE] mean and std.dev: (2149.08, 1892.70)
[0000][PE] low and high boundaries for proper pairs: (1, 12887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 394.418 CPU sec, 22.067 real sec
[0000] Calling mem_process_seqs.., task: 2051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517949, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 415, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7087)
[0000][PE] mean and std.dev: (1108.60, 1325.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205426 reads in 391.164 CPU sec, 21.876 real sec
[0000] Calling mem_process_seqs.., task: 2052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517968, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 938, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6127)
[0000][PE] mean and std.dev: (1354.05, 1228.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 395.502 CPU sec, 22.138 real sec
[0000] Calling mem_process_seqs.., task: 2053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518402, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 375, 693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1603)
[0000][PE] mean and std.dev: (466.00, 309.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (721, 1340, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5044)
[0000][PE] mean and std.dev: (1518.67, 1195.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 391.709 CPU sec, 21.915 real sec
[0000] Calling mem_process_seqs.., task: 2054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518022, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 386, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (652.82, 599.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.70, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1520, 3806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9768)
[0000][PE] mean and std.dev: (1837.00, 1399.67)
[0000][PE] low and high boundaries for proper pairs: (1, 12749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 393.291 CPU sec, 22.007 real sec
[0000] Calling mem_process_seqs.., task: 2055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517930, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 1276, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5239)
[0000][PE] mean and std.dev: (1269.32, 1237.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.86, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 394.672 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 2056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205494
	[0000][ M::kt_pipeline] read 1205494 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518307, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 338, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2956)
[0000][PE] mean and std.dev: (649.93, 503.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.22, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 393.027 CPU sec, 21.990 real sec
[0000] Calling mem_process_seqs.., task: 2057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517713, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 649, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (973.12, 928.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205494 reads in 396.012 CPU sec, 22.228 real sec
[0000] Calling mem_process_seqs.., task: 2058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517868, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 608, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4010)
[0000][PE] mean and std.dev: (828.78, 716.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.65, 125.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 392.937 CPU sec, 21.948 real sec
[0000] Calling mem_process_seqs.., task: 2059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517865, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 354, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5121)
[0000][PE] mean and std.dev: (846.62, 1054.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1702, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (1381.73, 746.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 394.991 CPU sec, 22.135 real sec
[0000] Calling mem_process_seqs.., task: 2060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 517943, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.48, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 396.842 CPU sec, 22.195 real sec
[0000] Calling mem_process_seqs.., task: 2061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205416
	[0000][ M::kt_pipeline] read 1205416 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517960, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (448, 618, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2896)
[0000][PE] mean and std.dev: (929.50, 722.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 393.488 CPU sec, 22.025 real sec
[0000] Calling mem_process_seqs.., task: 2062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205464
	[0000][ M::kt_pipeline] read 1205464 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517996, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 367, 3121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8859)
[0000][PE] mean and std.dev: (1218.24, 1417.54)
[0000][PE] low and high boundaries for proper pairs: (1, 11728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.79, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205416 reads in 391.625 CPU sec, 21.900 real sec
[0000] Calling mem_process_seqs.., task: 2063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518121, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 394, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2886)
[0000][PE] mean and std.dev: (672.87, 713.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.60, 125.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1644, 1951, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (244, 3744)
[0000][PE] mean and std.dev: (1729.38, 680.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205464 reads in 393.174 CPU sec, 22.001 real sec
[0000] Calling mem_process_seqs.., task: 2064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518352, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 440, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1057)
[0000][PE] mean and std.dev: (413.85, 233.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.90, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 392.934 CPU sec, 21.974 real sec
[0000] Calling mem_process_seqs.., task: 2065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518009, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 432, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2881)
[0000][PE] mean and std.dev: (544.42, 379.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.34, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 942, 4172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11286)
[0000][PE] mean and std.dev: (2373.60, 2499.44)
[0000][PE] low and high boundaries for proper pairs: (1, 14843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 393.757 CPU sec, 22.065 real sec
[0000] Calling mem_process_seqs.., task: 2066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205402
	[0000][ M::kt_pipeline] read 1205402 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518093, 5, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.71, 124.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (401, 748, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3296)
[0000][PE] mean and std.dev: (831.07, 705.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4261)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 394.062 CPU sec, 22.024 real sec
[0000] Calling mem_process_seqs.., task: 2067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517990, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 1313, 2700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7516)
[0000][PE] mean and std.dev: (1234.69, 1071.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205402 reads in 392.183 CPU sec, 21.936 real sec
[0000] Calling mem_process_seqs.., task: 2068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518190, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 376, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7060)
[0000][PE] mean and std.dev: (855.30, 933.62)
[0000][PE] low and high boundaries for proper pairs: (1, 9329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1493, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (1577.92, 676.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 394.013 CPU sec, 22.040 real sec
[0000] Calling mem_process_seqs.., task: 2069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517631, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 904, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3602)
[0000][PE] mean and std.dev: (778.00, 573.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.27, 124.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1193, 1782, 3305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7529)
[0000][PE] mean and std.dev: (2080.17, 999.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 393.750 CPU sec, 22.011 real sec
[0000] Calling mem_process_seqs.., task: 2070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205430
	[0000][ M::kt_pipeline] read 1205430 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518047, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 510, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2620)
[0000][PE] mean and std.dev: (595.31, 400.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.25, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 392.133 CPU sec, 21.915 real sec
[0000] Calling mem_process_seqs.., task: 2071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518255, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 660, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4724)
[0000][PE] mean and std.dev: (1199.92, 1265.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1540, 2633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5965)
[0000][PE] mean and std.dev: (1772.62, 1374.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205430 reads in 389.894 CPU sec, 21.825 real sec
[0000] Calling mem_process_seqs.., task: 2072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517756, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 727, 2550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7312)
[0000][PE] mean and std.dev: (1175.21, 1190.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 396.415 CPU sec, 22.231 real sec
[0000] Calling mem_process_seqs.., task: 2073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518472, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 396, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2708)
[0000][PE] mean and std.dev: (593.08, 474.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1342, 2477, 4874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11938)
[0000][PE] mean and std.dev: (2732.85, 1637.55)
[0000][PE] low and high boundaries for proper pairs: (1, 15470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 392.907 CPU sec, 21.970 real sec
[0000] Calling mem_process_seqs.., task: 2074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517667, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 1030, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4833)
[0000][PE] mean and std.dev: (990.92, 642.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.69, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (449, 1097, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4274)
[0000][PE] mean and std.dev: (1079.40, 905.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5549)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 395.979 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 2075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517522, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 377, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4975)
[0000][PE] mean and std.dev: (883.14, 959.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1348, 1891, 2605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5119)
[0000][PE] mean and std.dev: (1984.73, 971.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 396.222 CPU sec, 22.209 real sec
[0000] Calling mem_process_seqs.., task: 2076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205412
	[0000][ M::kt_pipeline] read 1205412 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518273, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 367, 420)
[0000][PE] low and high boundaries for computing mean and std.dev: (45, 670)
[0000][PE] mean and std.dev: (332.11, 90.95)
[0000][PE] low and high boundaries for proper pairs: (1, 795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 394.918 CPU sec, 22.126 real sec
[0000] Calling mem_process_seqs.., task: 2077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 517812, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 624, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2807)
[0000][PE] mean and std.dev: (898.60, 697.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 125.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (590, 1602, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5318)
[0000][PE] mean and std.dev: (1552.67, 1427.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205412 reads in 394.157 CPU sec, 22.088 real sec
[0000] Calling mem_process_seqs.., task: 2078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517955, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 372, 866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1992)
[0000][PE] mean and std.dev: (435.56, 310.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (354, 1089, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (1140.17, 876.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 393.260 CPU sec, 22.010 real sec
[0000] Calling mem_process_seqs.., task: 2079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518398, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 605, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4633)
[0000][PE] mean and std.dev: (961.85, 964.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.70, 124.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1883, 4213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10767)
[0000][PE] mean and std.dev: (2532.85, 2121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 14044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 394.945 CPU sec, 22.114 real sec
[0000] Calling mem_process_seqs.., task: 2080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518438, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 450, 3066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8484)
[0000][PE] mean and std.dev: (1461.15, 1873.93)
[0000][PE] low and high boundaries for proper pairs: (1, 11193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1392, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5356)
[0000][PE] mean and std.dev: (1458.89, 668.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 394.883 CPU sec, 22.075 real sec
[0000] Calling mem_process_seqs.., task: 2081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518236, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 418, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3821)
[0000][PE] mean and std.dev: (799.69, 804.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.11, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (460, 1318, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (1295.10, 741.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 391.146 CPU sec, 21.900 real sec
[0000] Calling mem_process_seqs.., task: 2082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517587, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 440, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5824)
[0000][PE] mean and std.dev: (857.18, 1061.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.86, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1502, 4186, 6044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15128)
[0000][PE] mean and std.dev: (3920.30, 2592.05)
[0000][PE] low and high boundaries for proper pairs: (1, 19670)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 2295, 2973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7225)
[0000][PE] mean and std.dev: (1835.89, 892.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 393.902 CPU sec, 22.051 real sec
[0000] Calling mem_process_seqs.., task: 2083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517687, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 628, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3941)
[0000][PE] mean and std.dev: (830.27, 604.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1332, 2489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5423)
[0000][PE] mean and std.dev: (1667.91, 1101.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 398.415 CPU sec, 22.285 real sec
[0000] Calling mem_process_seqs.., task: 2084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517964, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 814, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3543)
[0000][PE] mean and std.dev: (738.82, 529.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.34, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1518, 1841, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4689)
[0000][PE] mean and std.dev: (1692.30, 838.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 393.884 CPU sec, 22.049 real sec
[0000] Calling mem_process_seqs.., task: 2085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517481, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 492, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5289)
[0000][PE] mean and std.dev: (1059.83, 1007.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1153, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2707)
[0000][PE] mean and std.dev: (1086.40, 376.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 395.734 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 2086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518259, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1287, 3480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9702)
[0000][PE] mean and std.dev: (1847.30, 1700.08)
[0000][PE] low and high boundaries for proper pairs: (1, 12813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 390.119 CPU sec, 21.818 real sec
[0000] Calling mem_process_seqs.., task: 2087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518263, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 726, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (740.53, 514.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.39, 125.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 393.188 CPU sec, 21.973 real sec
[0000] Calling mem_process_seqs.., task: 2088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518147, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 627, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (1005.17, 1032.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 395.190 CPU sec, 22.142 real sec
[0000] Calling mem_process_seqs.., task: 2089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518181, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 349, 892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2256)
[0000][PE] mean and std.dev: (455.41, 448.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 393.353 CPU sec, 22.003 real sec
[0000] Calling mem_process_seqs.., task: 2090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518050, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 1169, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (916.50, 548.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.16, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 393.596 CPU sec, 22.009 real sec
[0000] Calling mem_process_seqs.., task: 2091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517844, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (937, 1749, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5494)
[0000][PE] mean and std.dev: (1522.19, 843.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.68, 124.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 396.525 CPU sec, 22.180 real sec
[0000] Calling mem_process_seqs.., task: 2092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518142, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 402, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3108)
[0000][PE] mean and std.dev: (692.92, 691.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 397.083 CPU sec, 22.222 real sec
[0000] Calling mem_process_seqs.., task: 2093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205452
	[0000][ M::kt_pipeline] read 1205452 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518399, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 1192, 3113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8909)
[0000][PE] mean and std.dev: (1432.31, 1476.57)
[0000][PE] low and high boundaries for proper pairs: (1, 11807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.40, 125.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 914, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4485)
[0000][PE] mean and std.dev: (1211.64, 850.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 393.964 CPU sec, 22.050 real sec
[0000] Calling mem_process_seqs.., task: 2094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518087, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 940, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3417)
[0000][PE] mean and std.dev: (791.19, 610.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.29, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1543, 2383, 3045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6049)
[0000][PE] mean and std.dev: (2252.62, 903.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205452 reads in 393.449 CPU sec, 22.012 real sec
[0000] Calling mem_process_seqs.., task: 2095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205392
	[0000][ M::kt_pipeline] read 1205392 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517723, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 347, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (643.88, 723.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 394.865 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 2096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518410, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 436, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (774.29, 837.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.76, 125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205392 reads in 390.184 CPU sec, 21.792 real sec
[0000] Calling mem_process_seqs.., task: 2097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517637, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 309, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4558)
[0000][PE] mean and std.dev: (616.69, 674.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1615, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3072)
[0000][PE] mean and std.dev: (1198.00, 585.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 397.248 CPU sec, 22.216 real sec
[0000] Calling mem_process_seqs.., task: 2098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518298, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (529, 717, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (1020.50, 839.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.55, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (583, 1152, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4870)
[0000][PE] mean and std.dev: (1405.00, 974.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 393.831 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 2099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518229, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 993, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4195)
[0000][PE] mean and std.dev: (948.20, 757.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 394.368 CPU sec, 22.041 real sec
[0000] Calling mem_process_seqs.., task: 2100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205400
	[0000][ M::kt_pipeline] read 1205400 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518034, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 762, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3266)
[0000][PE] mean and std.dev: (1050.50, 876.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.77, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1627, 4489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11561)
[0000][PE] mean and std.dev: (2680.31, 2484.59)
[0000][PE] low and high boundaries for proper pairs: (1, 15097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 395.118 CPU sec, 22.068 real sec
[0000] Calling mem_process_seqs.., task: 2101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 518342, 8, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1610, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4369)
[0000][PE] mean and std.dev: (1469.17, 690.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5484)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205400 reads in 391.470 CPU sec, 21.926 real sec
[0000] Calling mem_process_seqs.., task: 2102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517953, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 512, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2258)
[0000][PE] mean and std.dev: (677.69, 470.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1477, 2312, 3028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6130)
[0000][PE] mean and std.dev: (2331.42, 1396.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 394.910 CPU sec, 22.093 real sec
[0000] Calling mem_process_seqs.., task: 2103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518057, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 393, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (937.64, 1020.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 125.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 393.512 CPU sec, 21.991 real sec
[0000] Calling mem_process_seqs.., task: 2104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518090, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 469, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5687)
[0000][PE] mean and std.dev: (1183.62, 1344.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.22, 124.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1328, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5482)
[0000][PE] mean and std.dev: (1679.82, 1159.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 394.762 CPU sec, 22.051 real sec
[0000] Calling mem_process_seqs.., task: 2105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518472, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 542, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2524)
[0000][PE] mean and std.dev: (647.25, 433.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 391.560 CPU sec, 21.931 real sec
[0000] Calling mem_process_seqs.., task: 2106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517923, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 855, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4319)
[0000][PE] mean and std.dev: (1028.89, 1056.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 394.893 CPU sec, 22.068 real sec
[0000] Calling mem_process_seqs.., task: 2107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517792, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 870, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5655)
[0000][PE] mean and std.dev: (915.44, 846.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.37, 124.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 393.669 CPU sec, 22.008 real sec
[0000] Calling mem_process_seqs.., task: 2108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518311, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 295, 3809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11079)
[0000][PE] mean and std.dev: (1532.31, 2229.61)
[0000][PE] low and high boundaries for proper pairs: (1, 14714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.74, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 396.484 CPU sec, 22.183 real sec
[0000] Calling mem_process_seqs.., task: 2109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518233, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 419, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5069)
[0000][PE] mean and std.dev: (1031.35, 1011.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 1532, 3043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7693)
[0000][PE] mean and std.dev: (1881.00, 1723.17)
[0000][PE] low and high boundaries for proper pairs: (1, 10018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 396.594 CPU sec, 22.176 real sec
[0000] Calling mem_process_seqs.., task: 2110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205478
	[0000][ M::kt_pipeline] read 1205478 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518734, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 501, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5654)
[0000][PE] mean and std.dev: (927.08, 1104.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.82, 125.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1328, 1999, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5708)
[0000][PE] mean and std.dev: (1902.25, 1124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 391.410 CPU sec, 21.863 real sec
[0000] Calling mem_process_seqs.., task: 2111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205440
	[0000][ M::kt_pipeline] read 1205440 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518081, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 479, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3341)
[0000][PE] mean and std.dev: (735.56, 616.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 2580, 3381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7863)
[0000][PE] mean and std.dev: (2300.00, 1110.43)
[0000][PE] low and high boundaries for proper pairs: (1, 10104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205478 reads in 394.139 CPU sec, 22.061 real sec
[0000] Calling mem_process_seqs.., task: 2112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517983, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 635, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (1081.50, 1081.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.72, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1439, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5163)
[0000][PE] mean and std.dev: (1579.92, 1049.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205440 reads in 393.879 CPU sec, 22.063 real sec
[0000] Calling mem_process_seqs.., task: 2113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517686, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 501, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1981)
[0000][PE] mean and std.dev: (551.77, 357.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.33, 124.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1266, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (1349.11, 368.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 397.561 CPU sec, 22.250 real sec
[0000] Calling mem_process_seqs.., task: 2114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518379, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (636, 983, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4938)
[0000][PE] mean and std.dev: (1334.75, 1277.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.44, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 389.679 CPU sec, 21.768 real sec
[0000] Calling mem_process_seqs.., task: 2115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 518016, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 1147, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (924.90, 782.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.55, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 2100, 3120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7068)
[0000][PE] mean and std.dev: (2435.30, 1715.14)
[0000][PE] low and high boundaries for proper pairs: (1, 9296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 392.961 CPU sec, 21.969 real sec
[0000] Calling mem_process_seqs.., task: 2116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518055, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 370, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3419)
[0000][PE] mean and std.dev: (845.59, 830.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.36, 124.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1742, 3024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7388)
[0000][PE] mean and std.dev: (2099.67, 1799.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 392.924 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 2117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517843, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1010, 2576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6990)
[0000][PE] mean and std.dev: (1218.08, 1118.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.53, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 396.476 CPU sec, 22.227 real sec
[0000] Calling mem_process_seqs.., task: 2118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518208, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 391, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (622.36, 482.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.66, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (704, 1669, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4490)
[0000][PE] mean and std.dev: (1431.25, 898.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 393.847 CPU sec, 22.042 real sec
[0000] Calling mem_process_seqs.., task: 2119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205476
	[0000][ M::kt_pipeline] read 1205476 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 518047, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.80, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 2054, 2945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6949)
[0000][PE] mean and std.dev: (1919.67, 1255.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8951)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 395.046 CPU sec, 22.119 real sec
[0000] Calling mem_process_seqs.., task: 2120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517855, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 899, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4769)
[0000][PE] mean and std.dev: (972.00, 878.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.53, 124.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1339, 2096, 2535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4927)
[0000][PE] mean and std.dev: (1895.60, 553.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205476 reads in 396.061 CPU sec, 22.154 real sec
[0000] Calling mem_process_seqs.., task: 2121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518319, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 521, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3160)
[0000][PE] mean and std.dev: (608.62, 476.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.31, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1252, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5414)
[0000][PE] mean and std.dev: (1402.80, 792.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 394.896 CPU sec, 22.098 real sec
[0000] Calling mem_process_seqs.., task: 2122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518199, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 413, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5487)
[0000][PE] mean and std.dev: (681.93, 789.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.68, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1525, 3667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8629)
[0000][PE] mean and std.dev: (2017.08, 1277.10)
[0000][PE] low and high boundaries for proper pairs: (1, 11110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 395.610 CPU sec, 22.086 real sec
[0000] Calling mem_process_seqs.., task: 2123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517841, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 446, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6274)
[0000][PE] mean and std.dev: (1315.78, 1481.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 397.228 CPU sec, 22.221 real sec
[0000] Calling mem_process_seqs.., task: 2124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517992, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 446, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4324)
[0000][PE] mean and std.dev: (982.19, 792.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.57, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1345, 2787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6449)
[0000][PE] mean and std.dev: (1843.36, 1566.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 393.651 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 2125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517755, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 465, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2650)
[0000][PE] mean and std.dev: (413.43, 297.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.60, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1418, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4461)
[0000][PE] mean and std.dev: (1613.30, 595.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 398.465 CPU sec, 22.304 real sec
[0000] Calling mem_process_seqs.., task: 2126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205422
	[0000][ M::kt_pipeline] read 1205422 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517940, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 792, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4147)
[0000][PE] mean and std.dev: (840.24, 572.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.41, 124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1303, 1957, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3970)
[0000][PE] mean and std.dev: (1666.09, 701.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 396.868 CPU sec, 22.184 real sec
[0000] Calling mem_process_seqs.., task: 2127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205466
	[0000][ M::kt_pipeline] read 1205466 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518287, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 1180, 2647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7115)
[0000][PE] mean and std.dev: (1057.64, 787.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.54, 124.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1366, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (1283.29, 622.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205422 reads in 393.894 CPU sec, 22.061 real sec
[0000] Calling mem_process_seqs.., task: 2128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518473, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 458, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2332)
[0000][PE] mean and std.dev: (513.57, 323.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.38, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1106, 2770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6784)
[0000][PE] mean and std.dev: (1635.23, 1365.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205466 reads in 394.813 CPU sec, 22.063 real sec
[0000] Calling mem_process_seqs.., task: 2129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518101, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 422, 949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2219)
[0000][PE] mean and std.dev: (570.87, 472.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.61, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 395.604 CPU sec, 22.126 real sec
[0000] Calling mem_process_seqs.., task: 2130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517775, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 432, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (638.43, 555.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.88, 125.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 395.873 CPU sec, 22.126 real sec
[0000] Calling mem_process_seqs.., task: 2131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518551, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (497, 786, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3641)
[0000][PE] mean and std.dev: (965.94, 652.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 392.455 CPU sec, 22.025 real sec
[0000] Calling mem_process_seqs.., task: 2132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518407, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 483, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4278)
[0000][PE] mean and std.dev: (820.83, 748.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (607, 1269, 3056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7954)
[0000][PE] mean and std.dev: (1771.18, 1515.27)
[0000][PE] low and high boundaries for proper pairs: (1, 10403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 393.539 CPU sec, 22.009 real sec
[0000] Calling mem_process_seqs.., task: 2133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517911, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 883, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3936)
[0000][PE] mean and std.dev: (754.27, 493.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.46, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 393.546 CPU sec, 22.045 real sec
[0000] Calling mem_process_seqs.., task: 2134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518187, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 437, 3631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10441)
[0000][PE] mean and std.dev: (1699.54, 1744.37)
[0000][PE] low and high boundaries for proper pairs: (1, 13846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.20, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 393.749 CPU sec, 22.009 real sec
[0000] Calling mem_process_seqs.., task: 2135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 517927, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.98, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 393.618 CPU sec, 22.045 real sec
[0000] Calling mem_process_seqs.., task: 2136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205336
	[0000][ M::kt_pipeline] read 1205336 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517980, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 581, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5909)
[0000][PE] mean and std.dev: (1504.07, 1599.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.52, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 395.460 CPU sec, 22.119 real sec
[0000] Calling mem_process_seqs.., task: 2137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518279, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 325, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2423)
[0000][PE] mean and std.dev: (509.61, 508.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 1650, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (15, 3000)
[0000][PE] mean and std.dev: (1440.25, 457.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205336 reads in 391.258 CPU sec, 21.885 real sec
[0000] Calling mem_process_seqs.., task: 2138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517986, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 431, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6546)
[0000][PE] mean and std.dev: (1062.17, 1216.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.56, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1512, 2943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7271)
[0000][PE] mean and std.dev: (1855.54, 1139.00)
[0000][PE] low and high boundaries for proper pairs: (1, 9435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 395.636 CPU sec, 22.163 real sec
[0000] Calling mem_process_seqs.., task: 2139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 517840, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.50, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1191, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4540)
[0000][PE] mean and std.dev: (1206.70, 738.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5778)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 395.415 CPU sec, 22.167 real sec
[0000] Calling mem_process_seqs.., task: 2140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518112, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 546, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5562)
[0000][PE] mean and std.dev: (1122.50, 1016.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.22, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 394.087 CPU sec, 22.077 real sec
[0000] Calling mem_process_seqs.., task: 2141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517929, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 474, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4030)
[0000][PE] mean and std.dev: (824.00, 866.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1264, 1537, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (1533.09, 584.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 395.448 CPU sec, 22.189 real sec
[0000] Calling mem_process_seqs.., task: 2142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205446
	[0000][ M::kt_pipeline] read 1205446 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518001, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 334, 844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2014)
[0000][PE] mean and std.dev: (457.09, 336.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.49, 124.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (708, 1501, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5595)
[0000][PE] mean and std.dev: (1695.82, 1230.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 396.425 CPU sec, 22.180 real sec
[0000] Calling mem_process_seqs.., task: 2143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518053, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 433, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2836)
[0000][PE] mean and std.dev: (613.52, 538.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.90, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (425, 1054, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (970.62, 767.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205446 reads in 392.569 CPU sec, 21.915 real sec
[0000] Calling mem_process_seqs.., task: 2144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517954, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 900, 2821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7943)
[0000][PE] mean and std.dev: (1536.82, 1595.85)
[0000][PE] low and high boundaries for proper pairs: (1, 10504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.42, 124.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1997, 3050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6850)
[0000][PE] mean and std.dev: (2069.60, 1686.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 395.287 CPU sec, 22.152 real sec
[0000] Calling mem_process_seqs.., task: 2145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518313, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 918, 2791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7429)
[0000][PE] mean and std.dev: (1405.06, 1149.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.76, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 393.540 CPU sec, 22.002 real sec
[0000] Calling mem_process_seqs.., task: 2146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518034, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 459, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2382)
[0000][PE] mean and std.dev: (637.83, 474.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.26, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1187, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4940)
[0000][PE] mean and std.dev: (1328.45, 938.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 397.180 CPU sec, 22.239 real sec
[0000] Calling mem_process_seqs.., task: 2147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518467, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 808, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4143)
[0000][PE] mean and std.dev: (1049.12, 1009.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.51, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1241, 2694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6076)
[0000][PE] mean and std.dev: (1837.13, 1346.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 391.017 CPU sec, 21.888 real sec
[0000] Calling mem_process_seqs.., task: 2148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517963, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (502, 754, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (934.36, 615.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.35, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 394.381 CPU sec, 22.083 real sec
[0000] Calling mem_process_seqs.., task: 2149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517964, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 791, 2661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7331)
[0000][PE] mean and std.dev: (1320.08, 1296.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.63, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (276, 626, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3291)
[0000][PE] mean and std.dev: (817.22, 907.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4446)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1156, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3575)
[0000][PE] mean and std.dev: (1182.20, 449.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 392.296 CPU sec, 21.954 real sec
[0000] Calling mem_process_seqs.., task: 2150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518272, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 417, 3780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10842)
[0000][PE] mean and std.dev: (1660.00, 2087.63)
[0000][PE] low and high boundaries for proper pairs: (1, 14373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.45, 124.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1726, 2140, 5369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12655)
[0000][PE] mean and std.dev: (3180.31, 2336.72)
[0000][PE] low and high boundaries for proper pairs: (1, 16298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 389.511 CPU sec, 21.786 real sec
[0000] Calling mem_process_seqs.., task: 2151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517978, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (530, 1189, 2646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6878)
[0000][PE] mean and std.dev: (1361.67, 1355.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.18, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 2137, 2336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4710)
[0000][PE] mean and std.dev: (1699.33, 802.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 394.311 CPU sec, 22.131 real sec
[0000] Calling mem_process_seqs.., task: 2152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518003, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 1145, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4528)
[0000][PE] mean and std.dev: (1002.86, 805.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.68, 124.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 395.259 CPU sec, 22.144 real sec
[0000] Calling mem_process_seqs.., task: 2153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205358
	[0000][ M::kt_pipeline] read 1205358 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517994, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 429, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2938)
[0000][PE] mean and std.dev: (618.71, 600.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1552, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5024)
[0000][PE] mean and std.dev: (1914.40, 1062.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 394.865 CPU sec, 22.126 real sec
[0000] Calling mem_process_seqs.., task: 2154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518295, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (490, 1325, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5272)
[0000][PE] mean and std.dev: (1329.88, 1130.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.32, 124.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1963, 2691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5955)
[0000][PE] mean and std.dev: (2053.92, 1210.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205358 reads in 394.010 CPU sec, 22.038 real sec
[0000] Calling mem_process_seqs.., task: 2155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517787, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 436, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2506)
[0000][PE] mean and std.dev: (506.18, 455.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.57, 124.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 1964, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4518)
[0000][PE] mean and std.dev: (1682.10, 693.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 393.967 CPU sec, 22.047 real sec
[0000] Calling mem_process_seqs.., task: 2156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 518014, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1116, 1609, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4599)
[0000][PE] mean and std.dev: (1606.82, 1179.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 889, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2277)
[0000][PE] mean and std.dev: (1031.82, 548.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 395.992 CPU sec, 22.164 real sec
[0000] Calling mem_process_seqs.., task: 2157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518328, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 573, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (795.92, 828.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.43, 124.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 1560, 4697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11737)
[0000][PE] mean and std.dev: (2872.25, 2771.68)
[0000][PE] low and high boundaries for proper pairs: (1, 15257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 393.425 CPU sec, 22.024 real sec
[0000] Calling mem_process_seqs.., task: 2158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518352, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 676, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (894.48, 890.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.65, 124.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1230, 2064, 3440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7860)
[0000][PE] mean and std.dev: (2327.29, 1291.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 394.097 CPU sec, 22.058 real sec
[0000] Calling mem_process_seqs.., task: 2159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518066, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 1214, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4076)
[0000][PE] mean and std.dev: (1146.14, 687.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.32, 124.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 392.749 CPU sec, 21.968 real sec
[0000] Calling mem_process_seqs.., task: 2160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518080, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 443, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (777.76, 753.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.19, 124.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1272, 3973, 5812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14892)
[0000][PE] mean and std.dev: (3846.70, 2680.06)
[0000][PE] low and high boundaries for proper pairs: (1, 19432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 392.400 CPU sec, 21.987 real sec
[0000] Calling mem_process_seqs.., task: 2161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518139, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 374, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (632.35, 587.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.59, 125.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1495, 1711, 2415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4255)
[0000][PE] mean and std.dev: (1942.67, 779.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 392.945 CPU sec, 21.960 real sec
[0000] Calling mem_process_seqs.., task: 2162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518066, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 431, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3647)
[0000][PE] mean and std.dev: (674.05, 549.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.78, 125.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1846, 2824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6474)
[0000][PE] mean and std.dev: (1880.08, 1365.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 398.399 CPU sec, 22.284 real sec
[0000] Calling mem_process_seqs.., task: 2163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518106, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 540, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2076)
[0000][PE] mean and std.dev: (577.23, 331.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 931)
[0000][PE] mean and std.dev: (527.59, 125.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1436, 1943, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4580)
[0000][PE] mean and std.dev: (1814.77, 748.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 396.969 CPU sec, 22.212 real sec
[0000] Calling mem_process_seqs.., task: 2164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205482
	[0000][ M::kt_pipeline] read 1205482 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518124, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 499, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4664)
[0000][PE] mean and std.dev: (802.62, 842.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.59, 124.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (142, 798, 3173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9235)
[0000][PE] mean and std.dev: (1925.60, 2070.68)
[0000][PE] low and high boundaries for proper pairs: (1, 12266)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 2177, 4807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12071)
[0000][PE] mean and std.dev: (2896.06, 2504.10)
[0000][PE] low and high boundaries for proper pairs: (1, 15703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 392.874 CPU sec, 21.962 real sec
[0000] Calling mem_process_seqs.., task: 2165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518308, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 1132, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6004)
[0000][PE] mean and std.dev: (1041.17, 796.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.55, 124.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1774, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5274)
[0000][PE] mean and std.dev: (1952.00, 1103.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205482 reads in 393.863 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 2166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517878, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 478, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3581)
[0000][PE] mean and std.dev: (855.00, 806.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.62, 124.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 397.550 CPU sec, 22.284 real sec
[0000] Calling mem_process_seqs.., task: 2167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 518454, 3, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 484, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4917)
[0000][PE] mean and std.dev: (1102.38, 1240.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.60, 124.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 394.168 CPU sec, 22.055 real sec
[0000] Calling mem_process_seqs.., task: 2168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518269, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 628, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4757)
[0000][PE] mean and std.dev: (1182.87, 1291.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.85, 124.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 391.926 CPU sec, 21.940 real sec
[0000] Calling mem_process_seqs.., task: 2169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205500
	[0000][ M::kt_pipeline] read 1205500 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518022, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 386, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2925)
[0000][PE] mean and std.dev: (594.11, 567.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 521, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 929)
[0000][PE] mean and std.dev: (527.79, 125.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 397.017 CPU sec, 22.213 real sec
[0000] Calling mem_process_seqs.., task: 2170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 72002864, nseq: 482118
	[0000][ M::kt_pipeline] read 482118 sequences (72002864 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517197, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 515, 4371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12501)
[0000][PE] mean and std.dev: (1986.38, 2401.17)
[0000][PE] low and high boundaries for proper pairs: (1, 16566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (442, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 928)
[0000][PE] mean and std.dev: (527.28, 124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1090)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1224, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2828)
[0000][PE] mean and std.dev: (1230.30, 427.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205500 reads in 397.005 CPU sec, 22.236 real sec
[0000] Calling mem_process_seqs.., task: 2171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 482118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 207181, 2, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 520, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 926)
[0000][PE] mean and std.dev: (527.50, 124.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 482118 reads in 158.284 CPU sec, 8.891 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.140596 MHz
Runtime profile:

	Time taken for main_mem function: 48000.10 sec

	IO times (sec) :
	Reading IO time (reads) avg: 2256.40, (2256.40, 2256.40)
	Writing IO time (SAM) avg: 3699.77, (3699.77, 3699.77)
	Reading IO time (Reference Genome) avg: 15.16, (15.16, 15.16)
	Index read time avg: 34.80, (34.80, 34.80)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 47949.91
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 47939.45, (47939.45, 47939.45)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 20057.92, (20057.92, 20057.92)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 27674.56, (27674.56, 27674.56)
		SMEM compute avg: 8718.67, (8722.38, 8713.93)
		SAL compute avg: 3593.34, (3595.46, 3590.65)
				MEM_SA avg: 1595.60, (1596.49, 1594.80)

		BSW time, avg: 11340.00, (11342.37, 11333.28)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
