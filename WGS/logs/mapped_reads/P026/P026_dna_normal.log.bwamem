Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204206
	[0000][ M::kt_pipeline] read 1204206 sequences (180000288 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1204212
	[0000][ M::kt_pipeline] read 1204212 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 521085, 4, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.90, 71.25)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 633, 838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1958)
[0000][PE] mean and std.dev: (601.69, 397.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2518)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204206 reads in 318.312 CPU sec, 20.571 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204276
	[0000][ M::kt_pipeline] read 1204276 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521303, 2, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.03, 71.31)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 586, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3500)
[0000][PE] mean and std.dev: (854.71, 778.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4596)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204212 reads in 306.639 CPU sec, 17.611 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204192
	[0000][ M::kt_pipeline] read 1204192 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521343, 0, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 194, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2637)
[0000][PE] mean and std.dev: (284.70, 247.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.75, 71.20)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204276 reads in 306.802 CPU sec, 17.842 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204400
	[0000][ M::kt_pipeline] read 1204400 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520707, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 418, 712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1704)
[0000][PE] mean and std.dev: (404.73, 246.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.35, 71.14)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 870, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3560)
[0000][PE] mean and std.dev: (1229.07, 894.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204192 reads in 307.820 CPU sec, 17.919 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1204250
	[0000][ M::kt_pipeline] read 1204250 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521067, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 353, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1953)
[0000][PE] mean and std.dev: (595.58, 485.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.47, 71.20)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 512, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3953)
[0000][PE] mean and std.dev: (706.88, 584.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204400 reads in 306.160 CPU sec, 17.838 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204254
	[0000][ M::kt_pipeline] read 1204254 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521139, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 437, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2351)
[0000][PE] mean and std.dev: (463.38, 349.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.58, 71.34)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 987, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2808)
[0000][PE] mean and std.dev: (1093.75, 463.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204250 reads in 306.024 CPU sec, 17.630 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000283, nseq: 1204266
	[0000][ M::kt_pipeline] read 1204266 sequences (180000283 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 521270, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 658, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2715)
[0000][PE] mean and std.dev: (668.67, 379.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.53, 71.27)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204254 reads in 303.627 CPU sec, 17.565 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1204286
	[0000][ M::kt_pipeline] read 1204286 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520859, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 319, 766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1784)
[0000][PE] mean and std.dev: (446.90, 296.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.26, 71.43)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 812, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2566)
[0000][PE] mean and std.dev: (731.83, 406.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3312)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204266 reads in 307.154 CPU sec, 17.767 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1204224
	[0000][ M::kt_pipeline] read 1204224 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520611, 0, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.93, 71.37)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204286 reads in 308.572 CPU sec, 18.056 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1204192
	[0000][ M::kt_pipeline] read 1204192 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521155, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 535, 862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2018)
[0000][PE] mean and std.dev: (533.64, 403.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.74, 71.41)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 246, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1580)
[0000][PE] mean and std.dev: (365.78, 287.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2031)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204224 reads in 303.433 CPU sec, 17.390 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1204200
	[0000][ M::kt_pipeline] read 1204200 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520838, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 412, 2865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7977)
[0000][PE] mean and std.dev: (1666.46, 2057.31)
[0000][PE] low and high boundaries for proper pairs: (1, 10533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.64, 71.34)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (390, 1313, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3459)
[0000][PE] mean and std.dev: (1000.92, 534.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204192 reads in 305.541 CPU sec, 17.633 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1204326
	[0000][ M::kt_pipeline] read 1204326 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520984, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.45, 71.33)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (315, 355, 889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2037)
[0000][PE] mean and std.dev: (476.83, 446.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2611)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204200 reads in 303.918 CPU sec, 17.543 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204128
	[0000][ M::kt_pipeline] read 1204128 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521063, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 455, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3312)
[0000][PE] mean and std.dev: (630.50, 666.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.14, 71.39)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204326 reads in 308.953 CPU sec, 17.433 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204346
	[0000][ M::kt_pipeline] read 1204346 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 521010, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.11, 71.44)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (168, 325, 455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1029)
[0000][PE] mean and std.dev: (251.00, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1316)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204128 reads in 297.658 CPU sec, 16.683 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1204234
	[0000][ M::kt_pipeline] read 1204234 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520976, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 308, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3600)
[0000][PE] mean and std.dev: (872.64, 996.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.73, 71.02)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204346 reads in 303.695 CPU sec, 17.076 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204330
	[0000][ M::kt_pipeline] read 1204330 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520230, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.83, 71.21)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 408, 634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1410)
[0000][PE] mean and std.dev: (474.33, 295.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1798)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204234 reads in 307.189 CPU sec, 17.211 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204192
	[0000][ M::kt_pipeline] read 1204192 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521187, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 351, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3930)
[0000][PE] mean and std.dev: (775.91, 645.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.47, 71.21)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204330 reads in 304.332 CPU sec, 17.081 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1204184
	[0000][ M::kt_pipeline] read 1204184 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520937, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 610, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5966)
[0000][PE] mean and std.dev: (861.50, 762.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.46, 71.35)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 315, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3433)
[0000][PE] mean and std.dev: (751.58, 879.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204192 reads in 302.361 CPU sec, 17.026 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204206
	[0000][ M::kt_pipeline] read 1204206 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521522, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 251, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 775)
[0000][PE] mean and std.dev: (288.00, 148.53)
[0000][PE] low and high boundaries for proper pairs: (1, 972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.27, 71.29)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 845, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3960)
[0000][PE] mean and std.dev: (920.27, 761.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204184 reads in 302.384 CPU sec, 16.930 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1204294
	[0000][ M::kt_pipeline] read 1204294 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520803, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 386, 746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1668)
[0000][PE] mean and std.dev: (496.53, 314.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.22, 71.49)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 414, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2327)
[0000][PE] mean and std.dev: (540.31, 335.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204206 reads in 305.623 CPU sec, 17.164 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204140
	[0000][ M::kt_pipeline] read 1204140 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521106, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 1733, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5776)
[0000][PE] mean and std.dev: (1422.00, 1083.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.18, 71.32)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 464, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2857)
[0000][PE] mean and std.dev: (644.50, 518.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204294 reads in 306.459 CPU sec, 17.197 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1204354
	[0000][ M::kt_pipeline] read 1204354 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521034, 7, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.37, 71.32)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 405, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2357)
[0000][PE] mean and std.dev: (521.09, 360.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3045)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204140 reads in 301.086 CPU sec, 16.863 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1204248
	[0000][ M::kt_pipeline] read 1204248 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521366, 2, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.72, 71.14)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 800, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2374)
[0000][PE] mean and std.dev: (676.06, 440.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3076)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204354 reads in 300.427 CPU sec, 16.821 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1204156
	[0000][ M::kt_pipeline] read 1204156 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520633, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.81, 71.20)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 534, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3315)
[0000][PE] mean and std.dev: (906.29, 829.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4325)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204248 reads in 302.206 CPU sec, 16.948 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204236
	[0000][ M::kt_pipeline] read 1204236 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 521088, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 251, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3399)
[0000][PE] mean and std.dev: (711.47, 727.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.41, 71.21)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 379, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1956)
[0000][PE] mean and std.dev: (497.80, 326.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204156 reads in 305.026 CPU sec, 17.141 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1204258
	[0000][ M::kt_pipeline] read 1204258 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 521010, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 508, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4346)
[0000][PE] mean and std.dev: (854.44, 705.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.35, 71.26)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204236 reads in 304.991 CPU sec, 17.183 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204044
	[0000][ M::kt_pipeline] read 1204044 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521170, 3, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.17, 71.30)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 808, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3662)
[0000][PE] mean and std.dev: (911.94, 736.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4774)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204258 reads in 304.875 CPU sec, 17.085 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204254
	[0000][ M::kt_pipeline] read 1204254 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521437, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 904, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2582)
[0000][PE] mean and std.dev: (793.33, 633.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.99, 71.35)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204044 reads in 304.485 CPU sec, 17.078 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1204354
	[0000][ M::kt_pipeline] read 1204354 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520967, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 412, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2443)
[0000][PE] mean and std.dev: (392.22, 266.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.61, 71.41)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (463, 783, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5014)
[0000][PE] mean and std.dev: (1306.25, 1250.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204254 reads in 311.154 CPU sec, 17.513 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1204296
	[0000][ M::kt_pipeline] read 1204296 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520332, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 500, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4568)
[0000][PE] mean and std.dev: (831.36, 786.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 360, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.68, 71.35)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 1112, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5466)
[0000][PE] mean and std.dev: (1075.62, 746.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204354 reads in 310.671 CPU sec, 17.404 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204268
	[0000][ M::kt_pipeline] read 1204268 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 521518, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 792, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3036)
[0000][PE] mean and std.dev: (927.39, 724.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.83, 71.38)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204296 reads in 302.090 CPU sec, 16.944 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1204250
	[0000][ M::kt_pipeline] read 1204250 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521078, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 788, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5124)
[0000][PE] mean and std.dev: (1184.42, 1225.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.34, 71.32)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 332, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1312)
[0000][PE] mean and std.dev: (427.89, 325.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204268 reads in 301.815 CPU sec, 16.903 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1204302
	[0000][ M::kt_pipeline] read 1204302 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521125, 4, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.39, 71.24)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 549, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3584)
[0000][PE] mean and std.dev: (890.40, 749.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4684)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204250 reads in 305.124 CPU sec, 17.120 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204166
	[0000][ M::kt_pipeline] read 1204166 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 521382, 3, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.25, 71.29)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 638, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2254)
[0000][PE] mean and std.dev: (711.75, 561.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2958)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204302 reads in 299.344 CPU sec, 16.785 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1204266
	[0000][ M::kt_pipeline] read 1204266 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521470, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.47, 71.23)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (269, 724, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3767)
[0000][PE] mean and std.dev: (767.43, 548.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4933)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204166 reads in 303.065 CPU sec, 16.978 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1204332
	[0000][ M::kt_pipeline] read 1204332 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520948, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 634, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2070)
[0000][PE] mean and std.dev: (531.77, 291.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.59, 71.14)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204266 reads in 301.961 CPU sec, 16.952 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1204222
	[0000][ M::kt_pipeline] read 1204222 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 521188, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 558, 857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2105)
[0000][PE] mean and std.dev: (563.53, 386.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.98, 71.17)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 690, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2355)
[0000][PE] mean and std.dev: (675.00, 486.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204332 reads in 301.274 CPU sec, 16.969 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1204152
	[0000][ M::kt_pipeline] read 1204152 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520943, 4, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.09, 71.33)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 359, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4083)
[0000][PE] mean and std.dev: (942.20, 993.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5347)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204222 reads in 300.873 CPU sec, 16.871 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1204236
	[0000][ M::kt_pipeline] read 1204236 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521349, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 324, 602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1390)
[0000][PE] mean and std.dev: (375.69, 185.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.45, 71.30)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (299, 336, 866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2000)
[0000][PE] mean and std.dev: (562.40, 381.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204152 reads in 305.276 CPU sec, 17.156 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1204212
	[0000][ M::kt_pipeline] read 1204212 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520924, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 700, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5540)
[0000][PE] mean and std.dev: (994.58, 802.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.20, 71.31)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 530, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2470)
[0000][PE] mean and std.dev: (655.21, 423.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204236 reads in 305.093 CPU sec, 17.109 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204252
	[0000][ M::kt_pipeline] read 1204252 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520610, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.30, 71.33)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 690, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2871)
[0000][PE] mean and std.dev: (728.70, 440.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3711)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204212 reads in 305.314 CPU sec, 17.174 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204310
	[0000][ M::kt_pipeline] read 1204310 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520658, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 347, 887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2299)
[0000][PE] mean and std.dev: (569.62, 477.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.54, 71.37)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 1047, 3260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9264)
[0000][PE] mean and std.dev: (1864.81, 2024.56)
[0000][PE] low and high boundaries for proper pairs: (1, 12266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204252 reads in 300.836 CPU sec, 16.865 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204246
	[0000][ M::kt_pipeline] read 1204246 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521113, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 373, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1247)
[0000][PE] mean and std.dev: (474.00, 314.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.49, 71.43)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204310 reads in 301.771 CPU sec, 16.907 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204332
	[0000][ M::kt_pipeline] read 1204332 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 521228, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 662, 822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1862)
[0000][PE] mean and std.dev: (557.16, 303.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.89, 71.34)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204246 reads in 300.211 CPU sec, 16.803 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1204370
	[0000][ M::kt_pipeline] read 1204370 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520918, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 290, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 664)
[0000][PE] mean and std.dev: (291.80, 145.23)
[0000][PE] low and high boundaries for proper pairs: (1, 873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.01, 71.32)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 522, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1995)
[0000][PE] mean and std.dev: (551.31, 292.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204332 reads in 302.886 CPU sec, 16.995 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204354
	[0000][ M::kt_pipeline] read 1204354 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520505, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 1324, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4421)
[0000][PE] mean and std.dev: (909.72, 614.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.23, 71.43)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1621, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5469)
[0000][PE] mean and std.dev: (1349.00, 815.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204370 reads in 310.912 CPU sec, 17.471 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204258
	[0000][ M::kt_pipeline] read 1204258 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520853, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 704, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (861.40, 671.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.71, 71.48)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204354 reads in 305.638 CPU sec, 17.242 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1204104
	[0000][ M::kt_pipeline] read 1204104 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 521407, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.79, 71.25)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 571, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (729.64, 789.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4531)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204258 reads in 304.077 CPU sec, 17.169 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1204232
	[0000][ M::kt_pipeline] read 1204232 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520350, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 246, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (399.75, 353.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.79, 71.18)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204104 reads in 304.918 CPU sec, 17.071 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204266
	[0000][ M::kt_pipeline] read 1204266 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520737, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 467, 741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1661)
[0000][PE] mean and std.dev: (526.67, 327.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.40, 71.32)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 464, 952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2350)
[0000][PE] mean and std.dev: (646.11, 471.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204232 reads in 306.480 CPU sec, 17.279 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1204320
	[0000][ M::kt_pipeline] read 1204320 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521208, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 438, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2884)
[0000][PE] mean and std.dev: (711.50, 742.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.78, 71.16)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (368, 620, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4175)
[0000][PE] mean and std.dev: (864.60, 692.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5444)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204266 reads in 300.679 CPU sec, 16.920 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204266
	[0000][ M::kt_pipeline] read 1204266 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521578, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 265, 411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 927)
[0000][PE] mean and std.dev: (287.00, 185.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.43, 71.27)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204320 reads in 306.682 CPU sec, 17.238 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1204208
	[0000][ M::kt_pipeline] read 1204208 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 521441, 0, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.72, 71.19)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 611, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3539)
[0000][PE] mean and std.dev: (925.85, 826.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4637)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204266 reads in 302.836 CPU sec, 16.995 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204336
	[0000][ M::kt_pipeline] read 1204336 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520768, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 400, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2951)
[0000][PE] mean and std.dev: (556.65, 410.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.53, 71.22)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1239, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4239)
[0000][PE] mean and std.dev: (1269.70, 652.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204208 reads in 302.347 CPU sec, 16.963 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1204226
	[0000][ M::kt_pipeline] read 1204226 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521283, 0, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.73, 71.23)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (364, 607, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3304)
[0000][PE] mean and std.dev: (864.85, 809.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204336 reads in 303.044 CPU sec, 16.968 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1204248
	[0000][ M::kt_pipeline] read 1204248 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520701, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.43, 71.31)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 778, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (688.62, 567.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3872)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204226 reads in 304.754 CPU sec, 17.077 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1204240
	[0000][ M::kt_pipeline] read 1204240 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521168, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 333, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1141)
[0000][PE] mean and std.dev: (267.25, 124.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.43, 71.28)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 376, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1246)
[0000][PE] mean and std.dev: (427.12, 228.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1564)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204248 reads in 307.312 CPU sec, 17.241 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1204184
	[0000][ M::kt_pipeline] read 1204184 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520963, 9, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.18, 71.45)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204240 reads in 305.357 CPU sec, 17.144 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1204264
	[0000][ M::kt_pipeline] read 1204264 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521448, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 304, 784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1886)
[0000][PE] mean and std.dev: (426.70, 316.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.21, 71.37)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 357, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3153)
[0000][PE] mean and std.dev: (711.40, 503.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204184 reads in 304.586 CPU sec, 17.086 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204230
	[0000][ M::kt_pipeline] read 1204230 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521394, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 290, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 695)
[0000][PE] mean and std.dev: (226.88, 74.73)
[0000][PE] low and high boundaries for proper pairs: (1, 864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.18, 71.24)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204264 reads in 304.802 CPU sec, 17.166 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204246
	[0000][ M::kt_pipeline] read 1204246 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521135, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 211, 750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1894)
[0000][PE] mean and std.dev: (405.00, 361.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.33, 71.41)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 324, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2451)
[0000][PE] mean and std.dev: (605.08, 478.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204230 reads in 306.952 CPU sec, 17.197 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204242
	[0000][ M::kt_pipeline] read 1204242 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521123, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.46, 71.39)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (217, 273, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3091)
[0000][PE] mean and std.dev: (553.00, 525.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4049)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204246 reads in 306.178 CPU sec, 17.178 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1204354
	[0000][ M::kt_pipeline] read 1204354 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521049, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 226, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3579)
[0000][PE] mean and std.dev: (485.54, 505.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.75, 71.26)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 1325, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5327)
[0000][PE] mean and std.dev: (1634.08, 1299.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204242 reads in 307.970 CPU sec, 17.304 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204232
	[0000][ M::kt_pipeline] read 1204232 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521092, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.48, 71.35)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204354 reads in 301.745 CPU sec, 16.898 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1204258
	[0000][ M::kt_pipeline] read 1204258 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521022, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 349, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2782)
[0000][PE] mean and std.dev: (578.38, 501.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.50, 71.37)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 377, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (644.82, 497.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204232 reads in 303.685 CPU sec, 17.067 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204394
	[0000][ M::kt_pipeline] read 1204394 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520645, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.52, 71.42)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204258 reads in 298.919 CPU sec, 16.814 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204216
	[0000][ M::kt_pipeline] read 1204216 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 521157, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 557, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (758.31, 601.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.43, 71.35)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (490, 748, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3385)
[0000][PE] mean and std.dev: (882.25, 772.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204394 reads in 300.943 CPU sec, 16.874 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1204278
	[0000][ M::kt_pipeline] read 1204278 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520899, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 351, 426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 794)
[0000][PE] mean and std.dev: (291.20, 101.65)
[0000][PE] low and high boundaries for proper pairs: (1, 978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.94, 71.40)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 973, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 2127)
[0000][PE] mean and std.dev: (918.00, 389.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204216 reads in 297.089 CPU sec, 16.675 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1204458
	[0000][ M::kt_pipeline] read 1204458 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 521275, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.02, 71.29)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (386, 598, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2612)
[0000][PE] mean and std.dev: (792.00, 554.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3354)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204278 reads in 299.190 CPU sec, 16.808 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204334
	[0000][ M::kt_pipeline] read 1204334 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520478, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 782, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2363)
[0000][PE] mean and std.dev: (608.36, 374.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.61, 71.35)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 266, 795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1961)
[0000][PE] mean and std.dev: (428.55, 356.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204458 reads in 300.558 CPU sec, 16.811 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204268
	[0000][ M::kt_pipeline] read 1204268 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520841, 5, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.86, 71.64)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204334 reads in 302.274 CPU sec, 16.993 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204378
	[0000][ M::kt_pipeline] read 1204378 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521230, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (500, 870, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2378)
[0000][PE] mean and std.dev: (764.80, 357.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.52, 71.34)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 550, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5552)
[0000][PE] mean and std.dev: (1117.59, 1139.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204268 reads in 308.412 CPU sec, 17.425 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204220
	[0000][ M::kt_pipeline] read 1204220 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520925, 5, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.89, 71.45)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (389, 1013, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3371)
[0000][PE] mean and std.dev: (812.47, 473.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4365)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204378 reads in 300.068 CPU sec, 16.807 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204374
	[0000][ M::kt_pipeline] read 1204374 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 521593, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.97, 71.34)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (172, 293, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2965)
[0000][PE] mean and std.dev: (650.90, 546.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3896)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204220 reads in 302.800 CPU sec, 17.000 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204168
	[0000][ M::kt_pipeline] read 1204168 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521057, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 585, 877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2237)
[0000][PE] mean and std.dev: (591.58, 484.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.14, 71.44)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (540, 881, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6063)
[0000][PE] mean and std.dev: (1444.82, 1543.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204374 reads in 304.024 CPU sec, 17.063 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204282
	[0000][ M::kt_pipeline] read 1204282 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521114, 3, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.19, 71.42)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (372, 998, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3918)
[0000][PE] mean and std.dev: (962.11, 568.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5100)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204168 reads in 300.610 CPU sec, 16.853 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1204190
	[0000][ M::kt_pipeline] read 1204190 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521131, 6, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.96, 71.54)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (597, 886, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2739)
[0000][PE] mean and std.dev: (901.13, 538.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3453)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204282 reads in 300.705 CPU sec, 16.885 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1204252
	[0000][ M::kt_pipeline] read 1204252 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521508, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 697, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3845)
[0000][PE] mean and std.dev: (1046.75, 1148.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.11, 71.36)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204190 reads in 299.107 CPU sec, 16.799 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1204230
	[0000][ M::kt_pipeline] read 1204230 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521805, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 322, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3854)
[0000][PE] mean and std.dev: (479.09, 416.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.71, 71.37)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 940, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2627)
[0000][PE] mean and std.dev: (757.30, 553.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204252 reads in 300.203 CPU sec, 16.828 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1204252
	[0000][ M::kt_pipeline] read 1204252 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521710, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 1015, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3180)
[0000][PE] mean and std.dev: (946.91, 701.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.51, 71.23)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (701, 1178, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4430)
[0000][PE] mean and std.dev: (983.78, 563.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204230 reads in 298.451 CPU sec, 16.727 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204162
	[0000][ M::kt_pipeline] read 1204162 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521757, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 452, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3371)
[0000][PE] mean and std.dev: (644.79, 523.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.58, 71.42)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204252 reads in 298.692 CPU sec, 16.782 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1204088
	[0000][ M::kt_pipeline] read 1204088 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520956, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 256, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 653)
[0000][PE] mean and std.dev: (260.42, 138.45)
[0000][PE] low and high boundaries for proper pairs: (1, 814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.50, 71.35)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 368, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3668)
[0000][PE] mean and std.dev: (632.64, 594.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204162 reads in 302.332 CPU sec, 16.929 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204096
	[0000][ M::kt_pipeline] read 1204096 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521144, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 258, 780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1948)
[0000][PE] mean and std.dev: (462.70, 408.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.44, 71.43)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 603, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2763)
[0000][PE] mean and std.dev: (571.67, 352.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204088 reads in 298.429 CPU sec, 16.729 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204236
	[0000][ M::kt_pipeline] read 1204236 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520613, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 337, 479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1077)
[0000][PE] mean and std.dev: (341.85, 239.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.10, 71.33)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204096 reads in 303.090 CPU sec, 17.023 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204476
	[0000][ M::kt_pipeline] read 1204476 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520969, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.31, 71.41)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (329, 432, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2840)
[0000][PE] mean and std.dev: (758.07, 539.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3677)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204236 reads in 301.868 CPU sec, 16.931 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204216
	[0000][ M::kt_pipeline] read 1204216 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520988, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 870, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3731)
[0000][PE] mean and std.dev: (889.30, 694.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.27, 71.40)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 326, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (72, 587)
[0000][PE] mean and std.dev: (305.33, 56.03)
[0000][PE] low and high boundaries for proper pairs: (1, 690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204476 reads in 303.698 CPU sec, 17.044 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1204200
	[0000][ M::kt_pipeline] read 1204200 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 520607, 2, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.79, 71.69)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (217, 378, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2944)
[0000][PE] mean and std.dev: (692.77, 647.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3853)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204216 reads in 300.410 CPU sec, 16.840 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1204132
	[0000][ M::kt_pipeline] read 1204132 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520734, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 355, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2225)
[0000][PE] mean and std.dev: (359.55, 253.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.00, 71.49)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 630, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (675.57, 573.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204200 reads in 303.720 CPU sec, 17.059 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1204336
	[0000][ M::kt_pipeline] read 1204336 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521298, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.53, 71.47)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 691, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (895.10, 837.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5522)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204132 reads in 297.218 CPU sec, 16.671 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1204174
	[0000][ M::kt_pipeline] read 1204174 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521169, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.46, 71.39)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204336 reads in 304.132 CPU sec, 17.171 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1204236
	[0000][ M::kt_pipeline] read 1204236 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520885, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.08, 71.30)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (299, 433, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2162)
[0000][PE] mean and std.dev: (454.55, 300.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2783)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204174 reads in 299.976 CPU sec, 16.828 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1204306
	[0000][ M::kt_pipeline] read 1204306 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 521839, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.17, 71.36)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (371, 912, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (987.92, 598.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4883)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204236 reads in 298.666 CPU sec, 16.794 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1204300
	[0000][ M::kt_pipeline] read 1204300 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520679, 4, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.05, 71.49)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (501, 845, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2073)
[0000][PE] mean and std.dev: (773.25, 380.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2597)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204306 reads in 304.496 CPU sec, 17.164 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1204332
	[0000][ M::kt_pipeline] read 1204332 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520882, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 284, 434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 954)
[0000][PE] mean and std.dev: (274.00, 137.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.00, 71.32)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 764, 965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2279)
[0000][PE] mean and std.dev: (739.50, 479.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204300 reads in 298.769 CPU sec, 16.741 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204228
	[0000][ M::kt_pipeline] read 1204228 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520720, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 434, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4683)
[0000][PE] mean and std.dev: (792.38, 761.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.97, 71.32)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 890, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3587)
[0000][PE] mean and std.dev: (881.20, 463.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204332 reads in 303.754 CPU sec, 17.038 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204176
	[0000][ M::kt_pipeline] read 1204176 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521039, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 377, 717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1743)
[0000][PE] mean and std.dev: (375.00, 214.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.98, 71.45)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (401, 784, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2555)
[0000][PE] mean and std.dev: (751.00, 426.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204228 reads in 298.736 CPU sec, 16.757 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1204326
	[0000][ M::kt_pipeline] read 1204326 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521243, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 293, 776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1776)
[0000][PE] mean and std.dev: (411.31, 320.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.16, 71.29)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 571, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2700)
[0000][PE] mean and std.dev: (678.88, 424.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204176 reads in 298.090 CPU sec, 16.708 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204284
	[0000][ M::kt_pipeline] read 1204284 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521566, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 616, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3907)
[0000][PE] mean and std.dev: (778.47, 601.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.49, 71.42)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 778, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3099)
[0000][PE] mean and std.dev: (728.80, 460.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204326 reads in 301.599 CPU sec, 16.945 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1204334
	[0000][ M::kt_pipeline] read 1204334 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520754, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 347, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2283)
[0000][PE] mean and std.dev: (497.29, 393.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.60, 71.48)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204284 reads in 304.405 CPU sec, 17.118 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1204098
	[0000][ M::kt_pipeline] read 1204098 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521194, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 354, 818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1866)
[0000][PE] mean and std.dev: (440.23, 237.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.76, 71.39)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204334 reads in 302.307 CPU sec, 17.056 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1204308
	[0000][ M::kt_pipeline] read 1204308 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521174, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 593, 752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1850)
[0000][PE] mean and std.dev: (609.77, 524.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.43, 71.46)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 920, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (1027.79, 755.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204098 reads in 297.852 CPU sec, 16.744 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1204202
	[0000][ M::kt_pipeline] read 1204202 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520987, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.41, 71.61)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (453, 860, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2670)
[0000][PE] mean and std.dev: (848.29, 620.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3409)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204308 reads in 302.290 CPU sec, 16.969 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204148
	[0000][ M::kt_pipeline] read 1204148 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520652, 7, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.10, 71.47)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 303, 423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 861)
[0000][PE] mean and std.dev: (253.50, 99.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1080)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204202 reads in 300.436 CPU sec, 16.819 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1204122
	[0000][ M::kt_pipeline] read 1204122 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521478, 2, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.87, 71.52)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 651, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3238)
[0000][PE] mean and std.dev: (701.12, 477.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4206)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204148 reads in 298.550 CPU sec, 16.733 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204182
	[0000][ M::kt_pipeline] read 1204182 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521358, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.67, 71.30)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 300, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2670)
[0000][PE] mean and std.dev: (685.00, 625.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3468)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204122 reads in 297.764 CPU sec, 16.701 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1204210
	[0000][ M::kt_pipeline] read 1204210 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521274, 2, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.17, 71.34)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 326, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1456)
[0000][PE] mean and std.dev: (414.80, 246.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1859)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204182 reads in 297.487 CPU sec, 16.675 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1204218
	[0000][ M::kt_pipeline] read 1204218 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520822, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 322, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2434)
[0000][PE] mean and std.dev: (470.92, 394.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.70, 71.26)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 1255, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5225)
[0000][PE] mean and std.dev: (1188.07, 1096.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204210 reads in 297.834 CPU sec, 16.723 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1204216
	[0000][ M::kt_pipeline] read 1204216 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520657, 1, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.35, 71.43)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204218 reads in 298.488 CPU sec, 16.737 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204262
	[0000][ M::kt_pipeline] read 1204262 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521498, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 830, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2829)
[0000][PE] mean and std.dev: (691.80, 472.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.95, 71.43)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 853, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (660.33, 400.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204216 reads in 299.575 CPU sec, 16.794 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1204210
	[0000][ M::kt_pipeline] read 1204210 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521258, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 267, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (581.50, 578.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.65, 71.34)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204262 reads in 303.756 CPU sec, 17.072 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204034
	[0000][ M::kt_pipeline] read 1204034 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521122, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 455, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2967)
[0000][PE] mean and std.dev: (800.35, 647.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.03, 71.51)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 317, 938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2298)
[0000][PE] mean and std.dev: (602.92, 392.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204210 reads in 301.808 CPU sec, 16.944 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204232
	[0000][ M::kt_pipeline] read 1204232 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521217, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 1032, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (915.44, 573.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.50, 71.35)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (164, 432, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (555.92, 462.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204034 reads in 299.983 CPU sec, 16.903 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1204166
	[0000][ M::kt_pipeline] read 1204166 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 521388, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 596, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3156)
[0000][PE] mean and std.dev: (664.73, 541.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.25, 71.19)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 278, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (665.50, 600.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204232 reads in 297.993 CPU sec, 16.697 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1204228
	[0000][ M::kt_pipeline] read 1204228 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520904, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 839, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2900)
[0000][PE] mean and std.dev: (846.67, 561.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.37, 71.43)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (404, 708, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2699)
[0000][PE] mean and std.dev: (736.15, 568.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204166 reads in 299.742 CPU sec, 16.841 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204262
	[0000][ M::kt_pipeline] read 1204262 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520550, 6, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.85, 71.26)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (336, 747, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3564)
[0000][PE] mean and std.dev: (1066.71, 941.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4833)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204228 reads in 302.584 CPU sec, 17.016 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204156
	[0000][ M::kt_pipeline] read 1204156 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520404, 1, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.30, 71.47)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (162, 339, 629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1563)
[0000][PE] mean and std.dev: (369.85, 238.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2030)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204262 reads in 312.464 CPU sec, 17.523 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1204330
	[0000][ M::kt_pipeline] read 1204330 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520979, 5, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.80, 71.11)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 495, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (730.44, 796.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5439)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204156 reads in 311.420 CPU sec, 17.528 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1204100
	[0000][ M::kt_pipeline] read 1204100 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521631, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 347, 715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1651)
[0000][PE] mean and std.dev: (503.46, 443.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.34, 71.40)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (370, 1114, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3565)
[0000][PE] mean and std.dev: (917.33, 530.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204330 reads in 305.832 CPU sec, 17.188 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1204220
	[0000][ M::kt_pipeline] read 1204220 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520764, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 537, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4282)
[0000][PE] mean and std.dev: (723.42, 596.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.52, 71.35)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204100 reads in 303.709 CPU sec, 17.002 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1204240
	[0000][ M::kt_pipeline] read 1204240 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521373, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 501, 773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1855)
[0000][PE] mean and std.dev: (515.79, 331.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.56, 71.13)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (399, 748, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (763.80, 348.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204220 reads in 300.929 CPU sec, 16.897 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204230
	[0000][ M::kt_pipeline] read 1204230 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521198, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 366, 713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1847)
[0000][PE] mean and std.dev: (407.27, 324.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.82, 71.10)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 681, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2606)
[0000][PE] mean and std.dev: (688.08, 479.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204240 reads in 299.778 CPU sec, 16.834 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1204168
	[0000][ M::kt_pipeline] read 1204168 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 521614, 4, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.48, 71.28)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204230 reads in 301.837 CPU sec, 16.968 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204186
	[0000][ M::kt_pipeline] read 1204186 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521443, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 305, 871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2221)
[0000][PE] mean and std.dev: (488.91, 492.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.62, 71.22)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (345, 966, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3081)
[0000][PE] mean and std.dev: (864.10, 430.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204168 reads in 298.467 CPU sec, 16.751 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1204090
	[0000][ M::kt_pipeline] read 1204090 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521026, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 470, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (751.10, 503.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.49, 71.32)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 864, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5085)
[0000][PE] mean and std.dev: (826.22, 676.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204186 reads in 306.032 CPU sec, 17.300 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1204262
	[0000][ M::kt_pipeline] read 1204262 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520891, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.58, 71.43)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204090 reads in 300.478 CPU sec, 16.831 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1204188
	[0000][ M::kt_pipeline] read 1204188 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521106, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (492, 845, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2391)
[0000][PE] mean and std.dev: (888.40, 633.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.83, 71.39)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (385, 738, 2556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6898)
[0000][PE] mean and std.dev: (1388.62, 1020.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204262 reads in 298.442 CPU sec, 16.736 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204328
	[0000][ M::kt_pipeline] read 1204328 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521092, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 297, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1080)
[0000][PE] mean and std.dev: (262.33, 102.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.03, 71.47)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 405, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2266)
[0000][PE] mean and std.dev: (627.18, 468.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204188 reads in 297.197 CPU sec, 16.677 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204170
	[0000][ M::kt_pipeline] read 1204170 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521187, 2, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.86, 71.22)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 940, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3190)
[0000][PE] mean and std.dev: (798.00, 576.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4172)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204328 reads in 301.730 CPU sec, 16.933 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204088
	[0000][ M::kt_pipeline] read 1204088 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521576, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 913, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (828.31, 522.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.66, 71.22)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204170 reads in 298.191 CPU sec, 16.715 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1204198
	[0000][ M::kt_pipeline] read 1204198 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521338, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.96, 71.49)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 314, 743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1715)
[0000][PE] mean and std.dev: (534.53, 408.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2201)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204088 reads in 300.167 CPU sec, 16.829 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204208
	[0000][ M::kt_pipeline] read 1204208 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521352, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.23, 71.62)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 344, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3202)
[0000][PE] mean and std.dev: (650.25, 670.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4191)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204198 reads in 299.372 CPU sec, 16.781 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1204192
	[0000][ M::kt_pipeline] read 1204192 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521587, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.28, 71.39)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 296, 397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 819)
[0000][PE] mean and std.dev: (243.25, 83.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204208 reads in 300.929 CPU sec, 16.963 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1204124
	[0000][ M::kt_pipeline] read 1204124 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520726, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 596, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2477)
[0000][PE] mean and std.dev: (616.57, 464.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.12, 71.61)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (399, 450, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2901)
[0000][PE] mean and std.dev: (649.00, 393.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204192 reads in 299.916 CPU sec, 16.800 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204372
	[0000][ M::kt_pipeline] read 1204372 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 521088, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 580, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3192)
[0000][PE] mean and std.dev: (538.67, 390.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.10, 71.59)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 336, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (860.82, 843.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204124 reads in 300.876 CPU sec, 16.877 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1204072
	[0000][ M::kt_pipeline] read 1204072 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520786, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 332, 764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1786)
[0000][PE] mean and std.dev: (414.20, 281.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.05, 71.39)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 457, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1657)
[0000][PE] mean and std.dev: (481.14, 235.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204372 reads in 301.659 CPU sec, 16.987 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204214
	[0000][ M::kt_pipeline] read 1204214 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521453, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 673, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2436)
[0000][PE] mean and std.dev: (609.56, 324.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.65, 71.35)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (412, 1198, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5362)
[0000][PE] mean and std.dev: (1762.60, 1859.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204072 reads in 300.376 CPU sec, 16.869 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1204238
	[0000][ M::kt_pipeline] read 1204238 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521321, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 253, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (550.82, 465.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.61, 71.46)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 350, 911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2269)
[0000][PE] mean and std.dev: (521.80, 376.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204214 reads in 302.240 CPU sec, 17.037 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204196
	[0000][ M::kt_pipeline] read 1204196 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521060, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 222, 807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2171)
[0000][PE] mean and std.dev: (534.10, 605.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.47, 71.54)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (174, 366, 531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1245)
[0000][PE] mean and std.dev: (402.35, 274.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204238 reads in 303.536 CPU sec, 17.013 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1204232
	[0000][ M::kt_pipeline] read 1204232 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521293, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.73, 71.69)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204196 reads in 303.919 CPU sec, 17.048 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1204212
	[0000][ M::kt_pipeline] read 1204212 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520671, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 570, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (682.20, 468.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.52, 71.44)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (144, 852, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (635.90, 423.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204232 reads in 303.671 CPU sec, 17.030 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204176
	[0000][ M::kt_pipeline] read 1204176 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521667, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 339, 701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1601)
[0000][PE] mean and std.dev: (449.46, 318.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.37, 71.48)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (374, 920, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3323)
[0000][PE] mean and std.dev: (842.39, 621.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204212 reads in 301.721 CPU sec, 16.966 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1204066
	[0000][ M::kt_pipeline] read 1204066 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520809, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.45, 71.46)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 366, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2414)
[0000][PE] mean and std.dev: (639.50, 452.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3111)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204176 reads in 303.566 CPU sec, 17.037 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1204310
	[0000][ M::kt_pipeline] read 1204310 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 521158, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 238, 731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1911)
[0000][PE] mean and std.dev: (358.12, 367.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.89, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (225, 979, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (776.42, 574.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204066 reads in 301.029 CPU sec, 16.918 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1204388
	[0000][ M::kt_pipeline] read 1204388 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520920, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.61, 71.35)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 1074, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (983.00, 714.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5084)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204310 reads in 301.768 CPU sec, 16.932 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1204248
	[0000][ M::kt_pipeline] read 1204248 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520974, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 374, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2237)
[0000][PE] mean and std.dev: (455.00, 315.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.65, 71.23)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 542, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2844)
[0000][PE] mean and std.dev: (702.33, 504.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204388 reads in 303.796 CPU sec, 17.055 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1204320
	[0000][ M::kt_pipeline] read 1204320 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521553, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 633, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2490)
[0000][PE] mean and std.dev: (684.58, 478.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.68, 71.31)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 632, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2732)
[0000][PE] mean and std.dev: (574.06, 389.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204248 reads in 301.266 CPU sec, 16.920 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1204220
	[0000][ M::kt_pipeline] read 1204220 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 520954, 7, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.60, 71.43)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 416, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5648)
[0000][PE] mean and std.dev: (764.42, 809.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7435)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204320 reads in 298.501 CPU sec, 16.745 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1204290
	[0000][ M::kt_pipeline] read 1204290 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521080, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 577, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1728)
[0000][PE] mean and std.dev: (450.56, 231.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.47, 71.30)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 280, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3522)
[0000][PE] mean and std.dev: (654.17, 743.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204220 reads in 299.907 CPU sec, 16.826 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1204268
	[0000][ M::kt_pipeline] read 1204268 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521024, 7, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.60, 71.38)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204290 reads in 301.719 CPU sec, 16.972 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1204406
	[0000][ M::kt_pipeline] read 1204406 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521138, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 758, 900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2192)
[0000][PE] mean and std.dev: (563.18, 337.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.36, 71.47)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 412, 725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1707)
[0000][PE] mean and std.dev: (454.20, 261.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204268 reads in 298.943 CPU sec, 16.761 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204372
	[0000][ M::kt_pipeline] read 1204372 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520915, 4, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.16, 71.37)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204406 reads in 303.508 CPU sec, 17.052 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1204392
	[0000][ M::kt_pipeline] read 1204392 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520762, 0, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.07, 71.42)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204372 reads in 307.541 CPU sec, 17.478 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1204276
	[0000][ M::kt_pipeline] read 1204276 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520514, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.15, 71.42)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 628, 941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2159)
[0000][PE] mean and std.dev: (641.08, 399.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2768)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204392 reads in 302.808 CPU sec, 16.964 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1204262
	[0000][ M::kt_pipeline] read 1204262 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520829, 2, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 590)
[0000][PE] mean and std.dev: (357.84, 71.54)
[0000][PE] low and high boundaries for proper pairs: (32, 683)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204276 reads in 304.746 CPU sec, 17.141 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1204294
	[0000][ M::kt_pipeline] read 1204294 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521318, 8, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.67, 71.28)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204262 reads in 300.808 CPU sec, 16.882 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1204266
	[0000][ M::kt_pipeline] read 1204266 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521696, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 425, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2818)
[0000][PE] mean and std.dev: (670.64, 553.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.75, 71.30)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204294 reads in 295.548 CPU sec, 16.573 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1204278
	[0000][ M::kt_pipeline] read 1204278 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520994, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 456, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1618)
[0000][PE] mean and std.dev: (451.30, 228.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.23, 71.34)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204266 reads in 304.242 CPU sec, 17.067 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204434
	[0000][ M::kt_pipeline] read 1204434 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520859, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 295, 765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1791)
[0000][PE] mean and std.dev: (473.10, 361.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.68, 71.47)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 362, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1965)
[0000][PE] mean and std.dev: (502.53, 381.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204278 reads in 305.887 CPU sec, 17.235 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204202
	[0000][ M::kt_pipeline] read 1204202 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521245, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 560, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3722)
[0000][PE] mean and std.dev: (835.38, 875.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.68, 71.73)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 522, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2904)
[0000][PE] mean and std.dev: (645.18, 471.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204434 reads in 311.953 CPU sec, 17.686 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204210
	[0000][ M::kt_pipeline] read 1204210 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 521494, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 295, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3898)
[0000][PE] mean and std.dev: (693.00, 653.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.52, 71.48)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 293, 867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2217)
[0000][PE] mean and std.dev: (299.22, 210.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204202 reads in 301.297 CPU sec, 16.906 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1204204
	[0000][ M::kt_pipeline] read 1204204 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 521088, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (697, 1041, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (1077.94, 632.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.37, 71.47)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (442, 692, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2167)
[0000][PE] mean and std.dev: (573.11, 294.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204210 reads in 301.510 CPU sec, 16.881 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204208
	[0000][ M::kt_pipeline] read 1204208 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521213, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.06, 71.51)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 303, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2034)
[0000][PE] mean and std.dev: (491.08, 297.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2621)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204204 reads in 301.390 CPU sec, 16.910 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204334
	[0000][ M::kt_pipeline] read 1204334 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 521528, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 861, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3947)
[0000][PE] mean and std.dev: (1022.88, 1005.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.67, 71.42)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 795, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3645)
[0000][PE] mean and std.dev: (947.74, 836.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204208 reads in 306.970 CPU sec, 17.323 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1204380
	[0000][ M::kt_pipeline] read 1204380 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520782, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 204, 244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 446)
[0000][PE] mean and std.dev: (166.89, 63.26)
[0000][PE] low and high boundaries for proper pairs: (1, 547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.68, 71.51)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204334 reads in 301.874 CPU sec, 17.027 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1204216
	[0000][ M::kt_pipeline] read 1204216 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521022, 3, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.17, 71.58)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (661, 831, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2518)
[0000][PE] mean and std.dev: (889.69, 468.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3137)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204380 reads in 306.342 CPU sec, 17.279 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204190
	[0000][ M::kt_pipeline] read 1204190 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 521303, 2, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.37, 71.47)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204216 reads in 302.539 CPU sec, 16.997 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1204300
	[0000][ M::kt_pipeline] read 1204300 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521517, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 610, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2872)
[0000][PE] mean and std.dev: (697.23, 420.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.04, 71.46)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 395, 707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1543)
[0000][PE] mean and std.dev: (506.79, 376.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204190 reads in 302.992 CPU sec, 16.996 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1204318
	[0000][ M::kt_pipeline] read 1204318 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521511, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 257, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3101)
[0000][PE] mean and std.dev: (829.00, 839.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.79, 71.50)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (409, 1044, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3481)
[0000][PE] mean and std.dev: (848.92, 512.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204300 reads in 301.118 CPU sec, 16.882 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1204224
	[0000][ M::kt_pipeline] read 1204224 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521172, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.48, 71.40)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204318 reads in 302.998 CPU sec, 17.001 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1204284
	[0000][ M::kt_pipeline] read 1204284 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521383, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.44, 71.41)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204224 reads in 300.152 CPU sec, 16.827 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000137, nseq: 1204320
	[0000][ M::kt_pipeline] read 1204320 sequences (180000137 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521254, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 729, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (818.00, 754.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.49, 71.33)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204284 reads in 301.128 CPU sec, 16.945 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1204324
	[0000][ M::kt_pipeline] read 1204324 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521148, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 416, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4677)
[0000][PE] mean and std.dev: (1070.13, 1215.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.10, 71.43)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204320 reads in 308.811 CPU sec, 17.348 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204252
	[0000][ M::kt_pipeline] read 1204252 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520755, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 1732, 2902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8258)
[0000][PE] mean and std.dev: (1685.77, 1280.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.10, 71.48)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 342, 634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1402)
[0000][PE] mean and std.dev: (448.69, 326.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204324 reads in 307.804 CPU sec, 17.296 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1204210
	[0000][ M::kt_pipeline] read 1204210 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520953, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.74, 71.58)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 428, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3927)
[0000][PE] mean and std.dev: (571.82, 564.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204252 reads in 305.822 CPU sec, 17.162 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1204134
	[0000][ M::kt_pipeline] read 1204134 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520724, 3, 24)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.97, 71.49)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 437, 835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1969)
[0000][PE] mean and std.dev: (572.33, 410.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2536)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204210 reads in 307.779 CPU sec, 17.297 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1204090
	[0000][ M::kt_pipeline] read 1204090 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521042, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 823, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2581)
[0000][PE] mean and std.dev: (795.00, 588.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.17, 71.33)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 800, 1069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2717)
[0000][PE] mean and std.dev: (685.50, 558.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204134 reads in 307.069 CPU sec, 17.217 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1204200
	[0000][ M::kt_pipeline] read 1204200 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 521017, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 315, 475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1019)
[0000][PE] mean and std.dev: (297.33, 174.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.49, 71.32)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 322, 738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1748)
[0000][PE] mean and std.dev: (514.00, 428.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204090 reads in 307.296 CPU sec, 17.220 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1204134
	[0000][ M::kt_pipeline] read 1204134 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521369, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 1010, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4449)
[0000][PE] mean and std.dev: (834.10, 606.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.50, 71.54)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204200 reads in 303.188 CPU sec, 16.978 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1204174
	[0000][ M::kt_pipeline] read 1204174 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521354, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.42, 71.24)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (449, 818, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5588)
[0000][PE] mean and std.dev: (1138.54, 756.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7301)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204134 reads in 305.395 CPU sec, 17.189 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1204212
	[0000][ M::kt_pipeline] read 1204212 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520765, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 510, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2526)
[0000][PE] mean and std.dev: (579.70, 396.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.52, 71.56)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 555, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (865.11, 775.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204174 reads in 307.334 CPU sec, 17.243 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1204142
	[0000][ M::kt_pipeline] read 1204142 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520968, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 208, 512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1138)
[0000][PE] mean and std.dev: (262.00, 158.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.62, 71.47)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 254, 294)
[0000][PE] low and high boundaries for computing mean and std.dev: (18, 478)
[0000][PE] mean and std.dev: (239.23, 55.35)
[0000][PE] low and high boundaries for proper pairs: (1, 570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204212 reads in 305.153 CPU sec, 17.098 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204272
	[0000][ M::kt_pipeline] read 1204272 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520765, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 417, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1353)
[0000][PE] mean and std.dev: (405.00, 266.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.65, 71.29)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 638, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2409)
[0000][PE] mean and std.dev: (710.69, 469.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204142 reads in 300.296 CPU sec, 16.836 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1204294
	[0000][ M::kt_pipeline] read 1204294 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 521148, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.88, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (146, 245, 503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1217)
[0000][PE] mean and std.dev: (322.62, 268.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1574)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204272 reads in 305.097 CPU sec, 17.132 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204002
	[0000][ M::kt_pipeline] read 1204002 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520641, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 927, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5552)
[0000][PE] mean and std.dev: (1211.31, 1131.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.77, 71.36)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 720, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2210)
[0000][PE] mean and std.dev: (613.64, 353.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204294 reads in 305.941 CPU sec, 17.147 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1204308
	[0000][ M::kt_pipeline] read 1204308 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521356, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 453, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2517)
[0000][PE] mean and std.dev: (722.80, 676.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.90, 71.31)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (418, 767, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4420)
[0000][PE] mean and std.dev: (1006.67, 746.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204002 reads in 299.709 CPU sec, 16.818 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1204186
	[0000][ M::kt_pipeline] read 1204186 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520857, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.64, 71.21)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (422, 909, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2822)
[0000][PE] mean and std.dev: (813.00, 472.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3622)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204308 reads in 306.162 CPU sec, 17.164 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1204172
	[0000][ M::kt_pipeline] read 1204172 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520967, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 281, 777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1907)
[0000][PE] mean and std.dev: (364.25, 217.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.93, 71.62)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 595, 863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1895)
[0000][PE] mean and std.dev: (655.90, 315.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204186 reads in 303.698 CPU sec, 17.103 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204218
	[0000][ M::kt_pipeline] read 1204218 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520968, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 420, 618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1400)
[0000][PE] mean and std.dev: (316.10, 155.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.92, 71.42)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (366, 816, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2907)
[0000][PE] mean and std.dev: (811.53, 505.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204172 reads in 306.240 CPU sec, 17.304 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204150
	[0000][ M::kt_pipeline] read 1204150 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521317, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 344, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (803.92, 983.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.92, 71.49)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (557, 788, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4043)
[0000][PE] mean and std.dev: (1011.08, 706.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204218 reads in 301.157 CPU sec, 16.886 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204226
	[0000][ M::kt_pipeline] read 1204226 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520761, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (473, 473, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (632.60, 437.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.96, 71.63)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (269, 297, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3035)
[0000][PE] mean and std.dev: (721.75, 718.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204150 reads in 302.717 CPU sec, 17.023 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1204238
	[0000][ M::kt_pipeline] read 1204238 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521227, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.66, 71.37)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 797, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2885)
[0000][PE] mean and std.dev: (763.91, 505.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3759)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204226 reads in 305.074 CPU sec, 17.300 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1204194
	[0000][ M::kt_pipeline] read 1204194 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520928, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 320, 1059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2817)
[0000][PE] mean and std.dev: (553.53, 542.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.66, 71.35)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (372, 909, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3117)
[0000][PE] mean and std.dev: (903.50, 582.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204238 reads in 300.507 CPU sec, 16.875 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204156
	[0000][ M::kt_pipeline] read 1204156 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521073, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 215, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2681)
[0000][PE] mean and std.dev: (551.92, 620.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.86, 71.76)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (317, 770, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3062)
[0000][PE] mean and std.dev: (777.58, 568.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204194 reads in 303.718 CPU sec, 17.061 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1204204
	[0000][ M::kt_pipeline] read 1204204 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521212, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 230, 800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2102)
[0000][PE] mean and std.dev: (446.21, 456.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.93, 71.57)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (380, 795, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3668)
[0000][PE] mean and std.dev: (986.56, 691.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204156 reads in 306.998 CPU sec, 17.253 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204282
	[0000][ M::kt_pipeline] read 1204282 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521541, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 346, 788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1868)
[0000][PE] mean and std.dev: (503.50, 362.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.71, 71.33)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 388, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3340)
[0000][PE] mean and std.dev: (644.17, 529.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204204 reads in 306.510 CPU sec, 17.239 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1204194
	[0000][ M::kt_pipeline] read 1204194 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521121, 4, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.86, 71.22)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204282 reads in 306.050 CPU sec, 17.198 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204188
	[0000][ M::kt_pipeline] read 1204188 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 521193, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 531, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1437)
[0000][PE] mean and std.dev: (431.87, 197.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.85, 71.08)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (165, 889, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2724)
[0000][PE] mean and std.dev: (836.60, 644.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204194 reads in 302.726 CPU sec, 16.982 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204096
	[0000][ M::kt_pipeline] read 1204096 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521154, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 592, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2517)
[0000][PE] mean and std.dev: (688.25, 509.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.13, 71.44)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (313, 575, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4327)
[0000][PE] mean and std.dev: (933.21, 768.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204188 reads in 304.070 CPU sec, 17.091 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1204130
	[0000][ M::kt_pipeline] read 1204130 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520973, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 316, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (474.73, 471.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.09, 71.47)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 953, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4046)
[0000][PE] mean and std.dev: (866.00, 683.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204096 reads in 302.982 CPU sec, 16.994 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1204042
	[0000][ M::kt_pipeline] read 1204042 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520975, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.22, 71.44)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204130 reads in 308.279 CPU sec, 17.367 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1204288
	[0000][ M::kt_pipeline] read 1204288 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521118, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 691, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (752.69, 562.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.00, 71.44)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 2071, 3689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10373)
[0000][PE] mean and std.dev: (1832.90, 1367.70)
[0000][PE] low and high boundaries for proper pairs: (1, 13715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204042 reads in 298.116 CPU sec, 16.699 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204226
	[0000][ M::kt_pipeline] read 1204226 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521169, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 490, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2470)
[0000][PE] mean and std.dev: (659.45, 367.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.99, 71.40)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204288 reads in 308.936 CPU sec, 17.412 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204262
	[0000][ M::kt_pipeline] read 1204262 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520925, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 554, 676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1496)
[0000][PE] mean and std.dev: (532.60, 363.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.96, 71.34)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (316, 712, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2878)
[0000][PE] mean and std.dev: (807.45, 738.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204226 reads in 302.543 CPU sec, 16.960 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1204292
	[0000][ M::kt_pipeline] read 1204292 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 521332, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 964, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2875)
[0000][PE] mean and std.dev: (860.75, 623.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.34, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 505, 800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1926)
[0000][PE] mean and std.dev: (488.25, 316.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204262 reads in 303.302 CPU sec, 16.998 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1204282
	[0000][ M::kt_pipeline] read 1204282 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 521388, 4, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.28, 71.60)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 354, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2046)
[0000][PE] mean and std.dev: (506.71, 393.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2662)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204292 reads in 302.867 CPU sec, 16.995 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1204258
	[0000][ M::kt_pipeline] read 1204258 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521107, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 243, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2097)
[0000][PE] mean and std.dev: (414.23, 288.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.85, 71.42)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (364, 816, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5470)
[0000][PE] mean and std.dev: (1028.50, 901.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204282 reads in 302.868 CPU sec, 16.980 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1204316
	[0000][ M::kt_pipeline] read 1204316 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521297, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.06, 71.40)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 341, 925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2311)
[0000][PE] mean and std.dev: (507.92, 361.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3004)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204258 reads in 305.649 CPU sec, 17.178 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1204184
	[0000][ M::kt_pipeline] read 1204184 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520973, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 851, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4156)
[0000][PE] mean and std.dev: (1097.90, 1057.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.94, 71.62)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204316 reads in 308.567 CPU sec, 17.370 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204196
	[0000][ M::kt_pipeline] read 1204196 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521077, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 849, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2819)
[0000][PE] mean and std.dev: (804.50, 718.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.86, 71.56)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 330, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2983)
[0000][PE] mean and std.dev: (592.47, 646.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204184 reads in 299.849 CPU sec, 16.795 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1204362
	[0000][ M::kt_pipeline] read 1204362 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521213, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 357, 862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2038)
[0000][PE] mean and std.dev: (483.50, 299.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.84, 71.52)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204196 reads in 305.760 CPU sec, 17.238 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1204304
	[0000][ M::kt_pipeline] read 1204304 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520632, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.48, 71.41)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204362 reads in 305.991 CPU sec, 17.184 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1204234
	[0000][ M::kt_pipeline] read 1204234 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520832, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 577, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2175)
[0000][PE] mean and std.dev: (530.20, 342.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.17, 71.37)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 450, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2296)
[0000][PE] mean and std.dev: (557.92, 425.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204304 reads in 303.977 CPU sec, 17.033 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1204140
	[0000][ M::kt_pipeline] read 1204140 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520627, 1, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.22, 71.60)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 357, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (597.50, 516.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5403)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204234 reads in 303.056 CPU sec, 17.008 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1204270
	[0000][ M::kt_pipeline] read 1204270 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521185, 6, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.06, 71.41)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (373, 760, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2866)
[0000][PE] mean and std.dev: (782.07, 445.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3697)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204140 reads in 298.502 CPU sec, 16.772 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204208
	[0000][ M::kt_pipeline] read 1204208 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521042, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 774, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3006)
[0000][PE] mean and std.dev: (678.62, 409.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.00, 71.56)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 713, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2362)
[0000][PE] mean and std.dev: (687.06, 342.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204270 reads in 304.918 CPU sec, 17.214 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1204126
	[0000][ M::kt_pipeline] read 1204126 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521349, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 853, 919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2181)
[0000][PE] mean and std.dev: (703.40, 484.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.16, 71.61)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (372, 669, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6642)
[0000][PE] mean and std.dev: (824.13, 825.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204208 reads in 304.930 CPU sec, 17.153 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1203968
	[0000][ M::kt_pipeline] read 1203968 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 521525, 0, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.48, 71.41)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 945, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2110)
[0000][PE] mean and std.dev: (833.00, 418.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2543)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204126 reads in 299.154 CPU sec, 16.858 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204162
	[0000][ M::kt_pipeline] read 1204162 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521136, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.99, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 777, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (743.42, 582.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4981)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203968 reads in 302.620 CPU sec, 16.988 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204280
	[0000][ M::kt_pipeline] read 1204280 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520672, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 287, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1186)
[0000][PE] mean and std.dev: (278.50, 137.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.11, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 467, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2722)
[0000][PE] mean and std.dev: (670.20, 510.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204162 reads in 304.464 CPU sec, 17.135 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1204326
	[0000][ M::kt_pipeline] read 1204326 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521433, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 631, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2938)
[0000][PE] mean and std.dev: (686.38, 412.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.54, 71.51)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 343, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3440)
[0000][PE] mean and std.dev: (671.75, 645.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204280 reads in 302.297 CPU sec, 17.010 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1204062
	[0000][ M::kt_pipeline] read 1204062 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521177, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 339, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2801)
[0000][PE] mean and std.dev: (555.64, 427.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.36, 71.52)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 406, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3371)
[0000][PE] mean and std.dev: (753.47, 536.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204326 reads in 300.549 CPU sec, 16.856 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1204220
	[0000][ M::kt_pipeline] read 1204220 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521472, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 408, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (802.50, 723.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.94, 71.41)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 740, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2493)
[0000][PE] mean and std.dev: (760.27, 543.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204062 reads in 299.713 CPU sec, 16.832 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1204230
	[0000][ M::kt_pipeline] read 1204230 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520939, 2, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.75, 71.35)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204220 reads in 302.610 CPU sec, 16.990 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204352
	[0000][ M::kt_pipeline] read 1204352 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520827, 2, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.28, 71.49)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (124, 831, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3637)
[0000][PE] mean and std.dev: (860.82, 790.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204230 reads in 301.400 CPU sec, 16.956 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204234
	[0000][ M::kt_pipeline] read 1204234 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521427, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 326, 507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 935)
[0000][PE] mean and std.dev: (314.27, 109.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.56, 71.57)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 931, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3006)
[0000][PE] mean and std.dev: (728.13, 542.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204352 reads in 301.439 CPU sec, 16.957 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1204196
	[0000][ M::kt_pipeline] read 1204196 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 521025, 0, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.30, 71.69)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204234 reads in 301.325 CPU sec, 16.898 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204272
	[0000][ M::kt_pipeline] read 1204272 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521373, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 603, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6519)
[0000][PE] mean and std.dev: (1158.54, 1347.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.81, 71.53)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204196 reads in 301.984 CPU sec, 17.015 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1204186
	[0000][ M::kt_pipeline] read 1204186 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521353, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 415, 768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2016)
[0000][PE] mean and std.dev: (331.73, 230.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.69, 71.28)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 326, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2559)
[0000][PE] mean and std.dev: (512.38, 431.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204272 reads in 301.451 CPU sec, 16.926 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521019, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 687, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3355)
[0000][PE] mean and std.dev: (780.50, 630.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.56, 71.43)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (322, 459, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5794)
[0000][PE] mean and std.dev: (1114.65, 963.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204186 reads in 301.622 CPU sec, 17.118 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204226
	[0000][ M::kt_pipeline] read 1204226 sequences (180000088 bp)...
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204254
	[0000][ M::kt_pipeline] read 1204254 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520644, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (448, 946, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3172)
[0000][PE] mean and std.dev: (790.58, 502.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.02, 71.40)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (320, 785, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3428)
[0000][PE] mean and std.dev: (632.70, 443.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204226 reads in 301.817 CPU sec, 17.161 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204210
	[0000][ M::kt_pipeline] read 1204210 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521178, 4, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.36, 71.56)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (408, 993, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3930)
[0000][PE] mean and std.dev: (1022.21, 696.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5104)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204254 reads in 304.255 CPU sec, 17.129 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1204098
	[0000][ M::kt_pipeline] read 1204098 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520489, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 557, 775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1639)
[0000][PE] mean and std.dev: (517.78, 228.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.96, 71.56)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (316, 610, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2629)
[0000][PE] mean and std.dev: (624.16, 392.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204210 reads in 309.757 CPU sec, 17.378 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1204192
	[0000][ M::kt_pipeline] read 1204192 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521117, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 513, 750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1758)
[0000][PE] mean and std.dev: (488.69, 365.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.00, 71.45)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204098 reads in 309.576 CPU sec, 17.334 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204250
	[0000][ M::kt_pipeline] read 1204250 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521079, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 352, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1016)
[0000][PE] mean and std.dev: (342.78, 167.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.45, 71.55)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 326, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2293)
[0000][PE] mean and std.dev: (470.33, 345.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204192 reads in 305.021 CPU sec, 17.077 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1204218
	[0000][ M::kt_pipeline] read 1204218 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520960, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 610, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3748)
[0000][PE] mean and std.dev: (871.54, 570.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.47, 71.37)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 375, 886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2050)
[0000][PE] mean and std.dev: (379.00, 200.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204250 reads in 305.860 CPU sec, 17.165 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1204388
	[0000][ M::kt_pipeline] read 1204388 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520543, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.48, 71.24)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1175, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4252)
[0000][PE] mean and std.dev: (1070.38, 533.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5358)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204218 reads in 305.452 CPU sec, 17.121 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204176
	[0000][ M::kt_pipeline] read 1204176 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521306, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.44, 71.37)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204388 reads in 303.395 CPU sec, 17.009 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204154
	[0000][ M::kt_pipeline] read 1204154 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521651, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 922, 963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2131)
[0000][PE] mean and std.dev: (812.00, 475.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.34, 71.32)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (382, 450, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1939)
[0000][PE] mean and std.dev: (538.91, 312.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204176 reads in 300.338 CPU sec, 16.838 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204382
	[0000][ M::kt_pipeline] read 1204382 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521042, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.47, 71.49)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204154 reads in 303.114 CPU sec, 16.978 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204252
	[0000][ M::kt_pipeline] read 1204252 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521073, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 291, 718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1708)
[0000][PE] mean and std.dev: (433.94, 276.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.10, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 1050, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4497)
[0000][PE] mean and std.dev: (1019.00, 722.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204382 reads in 303.748 CPU sec, 17.111 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1204210
	[0000][ M::kt_pipeline] read 1204210 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521375, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 332, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2666)
[0000][PE] mean and std.dev: (683.80, 722.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.64, 71.32)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1207, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3613)
[0000][PE] mean and std.dev: (1265.64, 832.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204252 reads in 301.202 CPU sec, 16.882 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204214
	[0000][ M::kt_pipeline] read 1204214 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521128, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 752, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (826.60, 613.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.96, 71.46)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204210 reads in 303.703 CPU sec, 17.072 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1204172
	[0000][ M::kt_pipeline] read 1204172 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521019, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 311, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2814)
[0000][PE] mean and std.dev: (582.23, 509.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.62, 71.34)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 412, 648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1292)
[0000][PE] mean and std.dev: (501.17, 306.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204214 reads in 299.405 CPU sec, 16.770 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1204238
	[0000][ M::kt_pipeline] read 1204238 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521132, 5, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.08, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 330, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (769.83, 638.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204172 reads in 305.047 CPU sec, 17.130 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204260
	[0000][ M::kt_pipeline] read 1204260 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520519, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 681, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4100)
[0000][PE] mean and std.dev: (722.50, 693.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.05, 71.49)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 284, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2091)
[0000][PE] mean and std.dev: (455.08, 328.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204238 reads in 303.760 CPU sec, 17.044 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1204336
	[0000][ M::kt_pipeline] read 1204336 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520844, 5, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.98, 71.38)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (171, 595, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2769)
[0000][PE] mean and std.dev: (683.44, 605.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3635)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204260 reads in 303.292 CPU sec, 16.984 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204220
	[0000][ M::kt_pipeline] read 1204220 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520798, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 367, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1218)
[0000][PE] mean and std.dev: (296.38, 131.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.76, 71.26)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (711, 988, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1638)
[0000][PE] mean and std.dev: (846.64, 344.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204336 reads in 306.154 CPU sec, 17.263 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204080
	[0000][ M::kt_pipeline] read 1204080 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 521019, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 987, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3983)
[0000][PE] mean and std.dev: (1030.14, 958.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.97, 71.52)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204220 reads in 300.417 CPU sec, 16.837 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1204146
	[0000][ M::kt_pipeline] read 1204146 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521171, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (490, 750, 3952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10876)
[0000][PE] mean and std.dev: (1684.70, 1710.80)
[0000][PE] low and high boundaries for proper pairs: (1, 14338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.08, 71.46)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 578, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2810)
[0000][PE] mean and std.dev: (717.88, 623.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204080 reads in 303.113 CPU sec, 17.012 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204186
	[0000][ M::kt_pipeline] read 1204186 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 521405, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.10, 71.54)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204146 reads in 302.456 CPU sec, 16.997 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204230
	[0000][ M::kt_pipeline] read 1204230 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521073, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 346, 771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1993)
[0000][PE] mean and std.dev: (478.14, 427.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.12, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (166, 383, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3814)
[0000][PE] mean and std.dev: (634.00, 596.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204186 reads in 301.457 CPU sec, 16.928 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204318
	[0000][ M::kt_pipeline] read 1204318 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520954, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 306, 778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1926)
[0000][PE] mean and std.dev: (411.89, 287.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.28, 71.57)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 398, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3980)
[0000][PE] mean and std.dev: (556.09, 431.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204230 reads in 301.437 CPU sec, 16.926 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204202
	[0000][ M::kt_pipeline] read 1204202 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520856, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 494, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2331)
[0000][PE] mean and std.dev: (572.50, 428.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.14, 71.47)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 389, 799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1781)
[0000][PE] mean and std.dev: (530.79, 356.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204318 reads in 302.854 CPU sec, 17.003 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1204284
	[0000][ M::kt_pipeline] read 1204284 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520630, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 320, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 720)
[0000][PE] mean and std.dev: (252.25, 95.66)
[0000][PE] low and high boundaries for proper pairs: (1, 896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.29, 71.39)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 406, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (827.95, 856.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204202 reads in 303.337 CPU sec, 17.006 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1204392
	[0000][ M::kt_pipeline] read 1204392 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521256, 3, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.05, 71.63)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 1391, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4059)
[0000][PE] mean and std.dev: (1096.75, 916.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5309)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204284 reads in 302.881 CPU sec, 17.047 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204348
	[0000][ M::kt_pipeline] read 1204348 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520886, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 677, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3965)
[0000][PE] mean and std.dev: (970.83, 1041.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.20, 71.54)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 751, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5292)
[0000][PE] mean and std.dev: (617.25, 551.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204392 reads in 304.826 CPU sec, 17.103 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1204172
	[0000][ M::kt_pipeline] read 1204172 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521381, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 351, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (549.10, 502.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.46, 71.64)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 326, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2768)
[0000][PE] mean and std.dev: (598.86, 433.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204348 reads in 301.258 CPU sec, 16.879 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1204332
	[0000][ M::kt_pipeline] read 1204332 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520696, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 310, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (585.08, 737.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.30, 71.39)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 358, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2730)
[0000][PE] mean and std.dev: (537.50, 359.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204172 reads in 302.176 CPU sec, 16.939 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1204236
	[0000][ M::kt_pipeline] read 1204236 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521324, 5, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.23, 71.45)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (547, 966, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (817.93, 482.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4259)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204332 reads in 302.381 CPU sec, 16.953 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1204200
	[0000][ M::kt_pipeline] read 1204200 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521293, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 307, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3445)
[0000][PE] mean and std.dev: (730.21, 597.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.81, 71.44)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (406, 491, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4957)
[0000][PE] mean and std.dev: (971.87, 786.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204236 reads in 302.559 CPU sec, 16.954 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204144
	[0000][ M::kt_pipeline] read 1204144 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520737, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.11, 71.41)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204200 reads in 303.184 CPU sec, 16.990 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204172
	[0000][ M::kt_pipeline] read 1204172 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 521479, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.12, 71.56)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (479, 787, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5675)
[0000][PE] mean and std.dev: (1254.73, 1131.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7407)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204144 reads in 301.660 CPU sec, 16.936 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1204154
	[0000][ M::kt_pipeline] read 1204154 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520898, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 303, 716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1746)
[0000][PE] mean and std.dev: (417.80, 270.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.08, 71.46)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204172 reads in 303.807 CPU sec, 17.089 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1204224
	[0000][ M::kt_pipeline] read 1204224 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 521130, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 898, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (863.94, 593.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.97, 71.51)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204154 reads in 300.402 CPU sec, 16.851 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1204250
	[0000][ M::kt_pipeline] read 1204250 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520943, 3, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.01, 71.60)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 335, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2592)
[0000][PE] mean and std.dev: (552.00, 501.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3391)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204224 reads in 304.816 CPU sec, 17.099 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204288
	[0000][ M::kt_pipeline] read 1204288 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 521086, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 490, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (646.88, 544.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.98, 71.44)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (640, 972, 3249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8467)
[0000][PE] mean and std.dev: (1645.69, 2186.29)
[0000][PE] low and high boundaries for proper pairs: (1, 11076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204250 reads in 302.140 CPU sec, 16.994 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1204338
	[0000][ M::kt_pipeline] read 1204338 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521213, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 599, 728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1738)
[0000][PE] mean and std.dev: (609.50, 411.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.14, 71.34)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 523, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3741)
[0000][PE] mean and std.dev: (789.47, 706.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204288 reads in 302.596 CPU sec, 16.957 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1204320
	[0000][ M::kt_pipeline] read 1204320 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520900, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 230, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 810)
[0000][PE] mean and std.dev: (238.50, 140.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.93, 71.53)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204338 reads in 303.562 CPU sec, 17.014 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204356
	[0000][ M::kt_pipeline] read 1204356 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 521004, 7, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.14, 71.59)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204320 reads in 305.649 CPU sec, 17.123 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1204198
	[0000][ M::kt_pipeline] read 1204198 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521265, 7, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.02, 71.66)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (438, 884, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5517)
[0000][PE] mean and std.dev: (1131.15, 752.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7210)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204356 reads in 304.612 CPU sec, 17.161 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204294
	[0000][ M::kt_pipeline] read 1204294 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521298, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.38, 71.52)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204198 reads in 300.892 CPU sec, 16.856 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204210
	[0000][ M::kt_pipeline] read 1204210 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 521057, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 395, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3892)
[0000][PE] mean and std.dev: (761.94, 753.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.35, 71.38)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (311, 1049, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3362)
[0000][PE] mean and std.dev: (1000.50, 754.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204294 reads in 299.028 CPU sec, 16.767 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204346
	[0000][ M::kt_pipeline] read 1204346 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520811, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 306, 950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2364)
[0000][PE] mean and std.dev: (637.08, 568.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.20, 71.60)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 241, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3275)
[0000][PE] mean and std.dev: (502.73, 567.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204210 reads in 300.338 CPU sec, 16.883 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1204208
	[0000][ M::kt_pipeline] read 1204208 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520337, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 590)
[0000][PE] mean and std.dev: (357.90, 71.68)
[0000][PE] low and high boundaries for proper pairs: (32, 683)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (392, 1034, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3332)
[0000][PE] mean and std.dev: (882.00, 569.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4312)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204346 reads in 304.549 CPU sec, 17.083 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000133, nseq: 1204260
	[0000][ M::kt_pipeline] read 1204260 sequences (180000133 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 521751, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 326, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4888)
[0000][PE] mean and std.dev: (621.36, 646.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.88, 71.54)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 401, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2558)
[0000][PE] mean and std.dev: (619.50, 517.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204208 reads in 297.598 CPU sec, 16.672 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1204256
	[0000][ M::kt_pipeline] read 1204256 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520793, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.30, 71.58)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204260 reads in 300.361 CPU sec, 16.836 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1204196
	[0000][ M::kt_pipeline] read 1204196 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520579, 1, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.48, 71.66)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 369, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1292)
[0000][PE] mean and std.dev: (322.88, 161.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1642)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204256 reads in 301.989 CPU sec, 16.971 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1204326
	[0000][ M::kt_pipeline] read 1204326 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521667, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 302, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2244)
[0000][PE] mean and std.dev: (483.47, 316.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.62, 71.57)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 739, 764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1790)
[0000][PE] mean and std.dev: (535.56, 311.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204196 reads in 299.136 CPU sec, 16.753 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1204290
	[0000][ M::kt_pipeline] read 1204290 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520928, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 238, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2713)
[0000][PE] mean and std.dev: (574.67, 770.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.63, 71.60)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 934, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4880)
[0000][PE] mean and std.dev: (1059.11, 933.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204326 reads in 301.985 CPU sec, 17.017 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1204154
	[0000][ M::kt_pipeline] read 1204154 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520953, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.38, 71.65)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204290 reads in 300.384 CPU sec, 16.861 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1204350
	[0000][ M::kt_pipeline] read 1204350 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521612, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 345, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2894)
[0000][PE] mean and std.dev: (697.91, 570.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.93, 71.41)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204154 reads in 302.682 CPU sec, 16.986 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1204244
	[0000][ M::kt_pipeline] read 1204244 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521224, 0, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.56, 71.45)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 354, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5409)
[0000][PE] mean and std.dev: (989.36, 1204.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7110)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204350 reads in 302.590 CPU sec, 17.020 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204168
	[0000][ M::kt_pipeline] read 1204168 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521333, 5, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.94, 71.62)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 414, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2942)
[0000][PE] mean and std.dev: (701.12, 517.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3821)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204244 reads in 300.349 CPU sec, 16.817 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1204378
	[0000][ M::kt_pipeline] read 1204378 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521216, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 396, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2741)
[0000][PE] mean and std.dev: (663.45, 502.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.60, 71.46)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204168 reads in 302.273 CPU sec, 16.944 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204272
	[0000][ M::kt_pipeline] read 1204272 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521347, 4, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.18, 71.50)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 364, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2244)
[0000][PE] mean and std.dev: (480.39, 325.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2906)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204378 reads in 299.718 CPU sec, 16.802 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1204196
	[0000][ M::kt_pipeline] read 1204196 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521301, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 337, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1491)
[0000][PE] mean and std.dev: (469.60, 356.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.96, 71.53)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 424, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3334)
[0000][PE] mean and std.dev: (578.76, 556.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204272 reads in 304.928 CPU sec, 17.108 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1204212
	[0000][ M::kt_pipeline] read 1204212 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521258, 5, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.64, 71.47)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (353, 721, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2936)
[0000][PE] mean and std.dev: (744.17, 524.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3797)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204196 reads in 303.869 CPU sec, 17.175 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1204150
	[0000][ M::kt_pipeline] read 1204150 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520944, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 546, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5412)
[0000][PE] mean and std.dev: (975.31, 946.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.51, 71.51)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 997, 4464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12870)
[0000][PE] mean and std.dev: (1710.15, 1701.85)
[0000][PE] low and high boundaries for proper pairs: (1, 17073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204212 reads in 304.035 CPU sec, 17.159 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204304
	[0000][ M::kt_pipeline] read 1204304 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520828, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 254, 618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1464)
[0000][PE] mean and std.dev: (376.36, 284.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.05, 71.43)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 1094, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4927)
[0000][PE] mean and std.dev: (875.00, 790.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204150 reads in 301.121 CPU sec, 16.890 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204184
	[0000][ M::kt_pipeline] read 1204184 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521416, 4, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.92, 71.40)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 598, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2513)
[0000][PE] mean and std.dev: (738.33, 540.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3242)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204304 reads in 305.469 CPU sec, 17.120 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1204234
	[0000][ M::kt_pipeline] read 1204234 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521144, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.61, 71.34)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204184 reads in 310.003 CPU sec, 17.416 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1204328
	[0000][ M::kt_pipeline] read 1204328 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520967, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 853, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4583)
[0000][PE] mean and std.dev: (1001.45, 763.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.63, 71.21)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 243, 481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 977)
[0000][PE] mean and std.dev: (320.10, 175.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204234 reads in 306.829 CPU sec, 17.194 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1204440
	[0000][ M::kt_pipeline] read 1204440 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520729, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 716, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (918.08, 834.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.35, 71.24)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204328 reads in 308.481 CPU sec, 17.318 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204292
	[0000][ M::kt_pipeline] read 1204292 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521577, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.43, 71.30)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 296, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1272)
[0000][PE] mean and std.dev: (374.22, 280.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1629)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204440 reads in 305.026 CPU sec, 17.105 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1204206
	[0000][ M::kt_pipeline] read 1204206 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521213, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 500, 803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1953)
[0000][PE] mean and std.dev: (565.20, 348.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.39, 71.24)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 393, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2197)
[0000][PE] mean and std.dev: (542.22, 426.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204292 reads in 307.462 CPU sec, 17.265 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1204296
	[0000][ M::kt_pipeline] read 1204296 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521274, 4, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.65, 71.14)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 486, 3352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9522)
[0000][PE] mean and std.dev: (1250.00, 1321.56)
[0000][PE] low and high boundaries for proper pairs: (1, 12607)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204206 reads in 307.984 CPU sec, 17.298 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1204226
	[0000][ M::kt_pipeline] read 1204226 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520950, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 1054, 3903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11227)
[0000][PE] mean and std.dev: (1950.30, 2136.52)
[0000][PE] low and high boundaries for proper pairs: (1, 14889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.71, 71.17)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 862, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (454, 1384)
[0000][PE] mean and std.dev: (961.86, 181.21)
[0000][PE] low and high boundaries for proper pairs: (237, 1687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204296 reads in 306.655 CPU sec, 17.201 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1204308
	[0000][ M::kt_pipeline] read 1204308 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521089, 0, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.81, 71.21)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 318, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2717)
[0000][PE] mean and std.dev: (455.72, 414.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3545)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204226 reads in 307.352 CPU sec, 17.220 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1204236
	[0000][ M::kt_pipeline] read 1204236 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521067, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 1227, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4574)
[0000][PE] mean and std.dev: (1117.92, 950.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.75, 71.32)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 411, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (659.82, 555.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5136)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204308 reads in 304.059 CPU sec, 17.045 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1204302
	[0000][ M::kt_pipeline] read 1204302 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521104, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 625, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3909)
[0000][PE] mean and std.dev: (969.93, 981.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.37, 71.30)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 301, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4564)
[0000][PE] mean and std.dev: (826.73, 823.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204236 reads in 305.593 CPU sec, 17.158 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1204196
	[0000][ M::kt_pipeline] read 1204196 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520938, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.69, 71.17)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 387, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2543)
[0000][PE] mean and std.dev: (602.31, 516.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3306)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204302 reads in 307.309 CPU sec, 17.227 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1204322
	[0000][ M::kt_pipeline] read 1204322 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521877, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 765, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3197)
[0000][PE] mean and std.dev: (679.00, 498.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.73, 71.20)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (454, 814, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2842)
[0000][PE] mean and std.dev: (779.33, 452.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204196 reads in 303.968 CPU sec, 17.052 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1204206
	[0000][ M::kt_pipeline] read 1204206 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520674, 4, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.69, 71.18)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 829, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2522)
[0000][PE] mean and std.dev: (576.12, 348.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3270)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204322 reads in 305.232 CPU sec, 17.119 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1204250
	[0000][ M::kt_pipeline] read 1204250 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520710, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 286, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2849)
[0000][PE] mean and std.dev: (497.69, 397.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.45, 71.44)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (161, 244, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (686.33, 618.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204206 reads in 304.665 CPU sec, 17.056 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1204260
	[0000][ M::kt_pipeline] read 1204260 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521613, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 327, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1903)
[0000][PE] mean and std.dev: (396.11, 341.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.31, 71.26)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1177, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2582)
[0000][PE] mean and std.dev: (973.08, 368.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204250 reads in 304.928 CPU sec, 17.113 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204316
	[0000][ M::kt_pipeline] read 1204316 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521114, 0, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 298, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 626)
[0000][PE] mean and std.dev: (259.20, 81.16)
[0000][PE] low and high boundaries for proper pairs: (1, 751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.39, 71.56)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 641, 946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2228)
[0000][PE] mean and std.dev: (555.96, 348.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204260 reads in 307.666 CPU sec, 17.299 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204298
	[0000][ M::kt_pipeline] read 1204298 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521083, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.65, 71.31)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 417, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2241)
[0000][PE] mean and std.dev: (602.31, 438.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2903)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204316 reads in 303.589 CPU sec, 17.061 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1204388
	[0000][ M::kt_pipeline] read 1204388 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521429, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 243, 348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 628)
[0000][PE] mean and std.dev: (241.75, 89.32)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.16, 71.44)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204298 reads in 302.776 CPU sec, 16.976 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1204358
	[0000][ M::kt_pipeline] read 1204358 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520690, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.97, 71.36)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 356, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3994)
[0000][PE] mean and std.dev: (576.75, 622.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5254)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204388 reads in 306.940 CPU sec, 17.233 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204246
	[0000][ M::kt_pipeline] read 1204246 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520372, 0, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.87, 71.08)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (472, 1577, 2978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7990)
[0000][PE] mean and std.dev: (2343.90, 2399.95)
[0000][PE] low and high boundaries for proper pairs: (1, 11944)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204358 reads in 302.204 CPU sec, 16.937 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204236
	[0000][ M::kt_pipeline] read 1204236 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520562, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 313, 2881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8169)
[0000][PE] mean and std.dev: (1186.18, 1452.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.02, 71.39)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204246 reads in 306.135 CPU sec, 17.186 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1204214
	[0000][ M::kt_pipeline] read 1204214 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521104, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 328, 704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1790)
[0000][PE] mean and std.dev: (365.00, 370.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.07, 71.31)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 346, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4198)
[0000][PE] mean and std.dev: (853.41, 799.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204236 reads in 303.580 CPU sec, 16.987 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204346
	[0000][ M::kt_pipeline] read 1204346 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 521011, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 693, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (659.11, 502.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.61, 71.15)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 423, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3354)
[0000][PE] mean and std.dev: (660.20, 443.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204214 reads in 307.888 CPU sec, 17.288 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1204328
	[0000][ M::kt_pipeline] read 1204328 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520827, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 552, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4823)
[0000][PE] mean and std.dev: (851.18, 932.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.84, 71.57)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204346 reads in 305.802 CPU sec, 17.143 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204178
	[0000][ M::kt_pipeline] read 1204178 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521426, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 365, 794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2008)
[0000][PE] mean and std.dev: (449.27, 266.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.53, 71.40)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (382, 1038, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5725)
[0000][PE] mean and std.dev: (1371.27, 1188.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204328 reads in 306.199 CPU sec, 17.230 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1204148
	[0000][ M::kt_pipeline] read 1204148 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521022, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 393, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (696.20, 589.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.06, 71.29)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 264, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 834)
[0000][PE] mean and std.dev: (270.33, 73.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204178 reads in 304.034 CPU sec, 17.146 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204086
	[0000][ M::kt_pipeline] read 1204086 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 521330, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.71, 71.46)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204148 reads in 301.997 CPU sec, 16.934 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1204180
	[0000][ M::kt_pipeline] read 1204180 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520884, 4, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.94, 71.31)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (532, 962, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2467)
[0000][PE] mean and std.dev: (797.35, 388.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3112)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204086 reads in 304.561 CPU sec, 17.153 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1204276
	[0000][ M::kt_pipeline] read 1204276 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520929, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 320, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4463)
[0000][PE] mean and std.dev: (645.08, 630.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.65, 71.33)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 816, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2853)
[0000][PE] mean and std.dev: (770.14, 510.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204180 reads in 302.179 CPU sec, 16.933 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1204160
	[0000][ M::kt_pipeline] read 1204160 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521120, 6, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.27, 71.50)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204276 reads in 307.265 CPU sec, 17.241 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1204350
	[0000][ M::kt_pipeline] read 1204350 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520867, 5, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.85, 71.30)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 807, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (1007.24, 891.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5992)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204160 reads in 298.263 CPU sec, 16.746 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204198
	[0000][ M::kt_pipeline] read 1204198 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521067, 4, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.49, 71.23)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 306, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3109)
[0000][PE] mean and std.dev: (626.47, 710.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4062)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204350 reads in 303.975 CPU sec, 17.097 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1204238
	[0000][ M::kt_pipeline] read 1204238 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521389, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 391, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4979)
[0000][PE] mean and std.dev: (857.36, 829.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.69, 71.30)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 323, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5721)
[0000][PE] mean and std.dev: (1050.85, 1276.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204198 reads in 302.065 CPU sec, 16.960 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1204288
	[0000][ M::kt_pipeline] read 1204288 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521048, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 551, 828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1882)
[0000][PE] mean and std.dev: (551.14, 298.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.30, 71.24)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (327, 993, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3081)
[0000][PE] mean and std.dev: (971.86, 697.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204238 reads in 302.376 CPU sec, 16.962 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1204254
	[0000][ M::kt_pipeline] read 1204254 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 520967, 8, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.27, 71.40)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 573, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1786)
[0000][PE] mean and std.dev: (442.08, 213.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2272)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204288 reads in 305.430 CPU sec, 17.135 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1204256
	[0000][ M::kt_pipeline] read 1204256 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520951, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 292, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1463)
[0000][PE] mean and std.dev: (439.56, 318.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.02, 71.27)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 281, 786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1858)
[0000][PE] mean and std.dev: (340.27, 220.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204254 reads in 304.235 CPU sec, 17.040 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1204218
	[0000][ M::kt_pipeline] read 1204218 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520774, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 385, 956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2490)
[0000][PE] mean and std.dev: (494.17, 373.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.09, 71.38)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (367, 604, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4042)
[0000][PE] mean and std.dev: (933.40, 863.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204256 reads in 304.424 CPU sec, 17.099 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1204314
	[0000][ M::kt_pipeline] read 1204314 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520987, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.01, 71.39)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (333, 911, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2250)
[0000][PE] mean and std.dev: (770.36, 480.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2889)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204218 reads in 302.386 CPU sec, 16.964 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1204108
	[0000][ M::kt_pipeline] read 1204108 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520767, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 342, 854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2058)
[0000][PE] mean and std.dev: (409.18, 309.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.36, 71.48)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (320, 829, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2429)
[0000][PE] mean and std.dev: (718.67, 400.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204314 reads in 305.199 CPU sec, 17.138 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1204328
	[0000][ M::kt_pipeline] read 1204328 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521370, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 549, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2716)
[0000][PE] mean and std.dev: (574.00, 395.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.09, 71.56)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 363, 758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1656)
[0000][PE] mean and std.dev: (345.00, 177.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204108 reads in 301.766 CPU sec, 16.911 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1204300
	[0000][ M::kt_pipeline] read 1204300 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520891, 1, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.79, 71.34)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 446, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2785)
[0000][PE] mean and std.dev: (655.50, 572.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3645)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204328 reads in 306.325 CPU sec, 17.187 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1204172
	[0000][ M::kt_pipeline] read 1204172 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520949, 2, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.47, 71.39)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204300 reads in 302.718 CPU sec, 17.001 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204358
	[0000][ M::kt_pipeline] read 1204358 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 521218, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.30, 71.39)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204172 reads in 297.325 CPU sec, 16.650 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1204160
	[0000][ M::kt_pipeline] read 1204160 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521390, 1, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.14, 71.45)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (684, 1086, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4290)
[0000][PE] mean and std.dev: (1017.86, 652.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5492)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204358 reads in 302.244 CPU sec, 16.950 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1204336
	[0000][ M::kt_pipeline] read 1204336 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520897, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 310, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (486.14, 414.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.31, 71.39)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (675, 1149, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3600)
[0000][PE] mean and std.dev: (848.33, 471.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204160 reads in 303.908 CPU sec, 17.039 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1204346
	[0000][ M::kt_pipeline] read 1204346 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521303, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.64, 71.45)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (175, 284, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2092)
[0000][PE] mean and std.dev: (520.38, 525.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2731)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204336 reads in 301.650 CPU sec, 16.914 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1204190
	[0000][ M::kt_pipeline] read 1204190 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521252, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.69, 71.25)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 834, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4221)
[0000][PE] mean and std.dev: (1138.33, 1026.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5522)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204346 reads in 302.262 CPU sec, 16.955 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1204296
	[0000][ M::kt_pipeline] read 1204296 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 520766, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.54, 71.32)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 598, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4968)
[0000][PE] mean and std.dev: (1227.29, 1401.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6833)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204190 reads in 302.593 CPU sec, 16.967 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204258
	[0000][ M::kt_pipeline] read 1204258 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520540, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 372, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2778)
[0000][PE] mean and std.dev: (664.69, 591.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.36, 71.44)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 316, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (602.93, 531.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204296 reads in 306.069 CPU sec, 17.283 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1204316
	[0000][ M::kt_pipeline] read 1204316 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520910, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 578, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3036)
[0000][PE] mean and std.dev: (738.25, 739.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.28, 71.46)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204258 reads in 301.202 CPU sec, 16.886 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204216
	[0000][ M::kt_pipeline] read 1204216 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520725, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 378, 779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1899)
[0000][PE] mean and std.dev: (365.93, 221.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.13, 71.30)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (438, 874, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2259)
[0000][PE] mean and std.dev: (636.93, 322.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204316 reads in 310.096 CPU sec, 17.425 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1204396
	[0000][ M::kt_pipeline] read 1204396 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521621, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 321, 761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1835)
[0000][PE] mean and std.dev: (468.00, 311.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.14, 71.30)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (355, 632, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (825.54, 573.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204216 reads in 300.835 CPU sec, 16.848 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204316
	[0000][ M::kt_pipeline] read 1204316 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520982, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.67, 71.38)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204396 reads in 303.916 CPU sec, 17.034 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204310
	[0000][ M::kt_pipeline] read 1204310 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521520, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 257, 616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1472)
[0000][PE] mean and std.dev: (384.92, 249.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.29, 71.34)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (336, 869, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2991)
[0000][PE] mean and std.dev: (936.67, 661.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204316 reads in 301.084 CPU sec, 16.865 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204244
	[0000][ M::kt_pipeline] read 1204244 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521715, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.14, 71.28)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 460, 929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2201)
[0000][PE] mean and std.dev: (447.33, 263.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2837)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204310 reads in 301.815 CPU sec, 16.924 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204204
	[0000][ M::kt_pipeline] read 1204204 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520959, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 317, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2482)
[0000][PE] mean and std.dev: (557.20, 408.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (356.90, 71.27)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 458, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3179)
[0000][PE] mean and std.dev: (605.45, 422.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204244 reads in 302.403 CPU sec, 16.968 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1204080
	[0000][ M::kt_pipeline] read 1204080 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520434, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 365, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4409)
[0000][PE] mean and std.dev: (906.38, 891.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 584)
[0000][PE] mean and std.dev: (356.80, 71.23)
[0000][PE] low and high boundaries for proper pairs: (38, 675)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (500, 712, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1697)
[0000][PE] mean and std.dev: (562.44, 239.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204204 reads in 301.094 CPU sec, 16.865 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1204160
	[0000][ M::kt_pipeline] read 1204160 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520598, 9, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.86, 71.28)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (146, 239, 792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2084)
[0000][PE] mean and std.dev: (349.15, 295.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2730)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204080 reads in 310.817 CPU sec, 17.609 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1204116
	[0000][ M::kt_pipeline] read 1204116 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520392, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (436, 661, 3109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8455)
[0000][PE] mean and std.dev: (1627.91, 1424.63)
[0000][PE] low and high boundaries for proper pairs: (1, 11128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.14, 71.19)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 390, 3497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10031)
[0000][PE] mean and std.dev: (1471.31, 1823.27)
[0000][PE] low and high boundaries for proper pairs: (1, 13298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204160 reads in 308.711 CPU sec, 17.292 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1203946
	[0000][ M::kt_pipeline] read 1203946 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521003, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.06, 71.26)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204116 reads in 312.616 CPU sec, 17.541 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1204080
	[0000][ M::kt_pipeline] read 1204080 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520675, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 303, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2662)
[0000][PE] mean and std.dev: (513.08, 465.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.04, 71.28)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (178, 506, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (691.76, 626.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203946 reads in 314.385 CPU sec, 17.799 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1204114
	[0000][ M::kt_pipeline] read 1204114 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520327, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 618, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2798)
[0000][PE] mean and std.dev: (763.14, 549.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.16, 71.09)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (317, 637, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2468)
[0000][PE] mean and std.dev: (674.50, 430.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204080 reads in 309.441 CPU sec, 17.309 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1204148
	[0000][ M::kt_pipeline] read 1204148 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520997, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 868, 1011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2401)
[0000][PE] mean and std.dev: (566.42, 355.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.33, 71.34)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (327, 909, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (926.69, 679.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204114 reads in 307.753 CPU sec, 17.290 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204116
	[0000][ M::kt_pipeline] read 1204116 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 521288, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.19, 71.29)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204148 reads in 307.807 CPU sec, 17.260 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204082
	[0000][ M::kt_pipeline] read 1204082 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521139, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 915, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4331)
[0000][PE] mean and std.dev: (1364.30, 1387.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.41, 71.25)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204116 reads in 310.417 CPU sec, 17.399 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204102
	[0000][ M::kt_pipeline] read 1204102 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521350, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (599, 1017, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2807)
[0000][PE] mean and std.dev: (884.00, 528.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.64, 71.39)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204082 reads in 309.587 CPU sec, 17.360 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1204128
	[0000][ M::kt_pipeline] read 1204128 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520895, 6, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.61, 71.45)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (417, 1147, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4887)
[0000][PE] mean and std.dev: (1136.31, 729.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6377)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204102 reads in 309.187 CPU sec, 17.370 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1204178
	[0000][ M::kt_pipeline] read 1204178 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520519, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 537, 2892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7924)
[0000][PE] mean and std.dev: (1124.37, 1137.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.46, 71.35)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (317, 441, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2063)
[0000][PE] mean and std.dev: (505.18, 263.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204128 reads in 313.021 CPU sec, 17.697 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1204126
	[0000][ M::kt_pipeline] read 1204126 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521325, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 954, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3751)
[0000][PE] mean and std.dev: (846.50, 496.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.74, 71.20)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (389, 674, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1691)
[0000][PE] mean and std.dev: (618.75, 323.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204178 reads in 307.671 CPU sec, 17.251 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204152
	[0000][ M::kt_pipeline] read 1204152 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521275, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 239, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1648)
[0000][PE] mean and std.dev: (339.78, 269.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.61, 71.23)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (365, 781, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2444)
[0000][PE] mean and std.dev: (771.56, 444.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204126 reads in 310.710 CPU sec, 17.452 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1204140
	[0000][ M::kt_pipeline] read 1204140 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520641, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 669, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5000)
[0000][PE] mean and std.dev: (1266.75, 1289.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.67, 71.33)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 771, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2649)
[0000][PE] mean and std.dev: (600.50, 387.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204152 reads in 310.639 CPU sec, 17.432 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1204146
	[0000][ M::kt_pipeline] read 1204146 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521116, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 664, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2989)
[0000][PE] mean and std.dev: (632.27, 388.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.74, 71.37)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 756, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3724)
[0000][PE] mean and std.dev: (812.18, 638.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204140 reads in 307.268 CPU sec, 17.229 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204200
	[0000][ M::kt_pipeline] read 1204200 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520679, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.41, 71.33)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (355, 1360, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4909)
[0000][PE] mean and std.dev: (1101.20, 704.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6427)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204146 reads in 306.061 CPU sec, 17.171 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204090
	[0000][ M::kt_pipeline] read 1204090 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520731, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 880, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5667)
[0000][PE] mean and std.dev: (1048.09, 1001.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.57, 71.11)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204200 reads in 307.217 CPU sec, 17.220 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1204108
	[0000][ M::kt_pipeline] read 1204108 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521278, 2, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.66, 71.28)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 364, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2566)
[0000][PE] mean and std.dev: (580.93, 440.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3330)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204090 reads in 311.603 CPU sec, 17.567 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1204010
	[0000][ M::kt_pipeline] read 1204010 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521564, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 559, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (968.30, 886.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.64, 71.52)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (354, 857, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2895)
[0000][PE] mean and std.dev: (778.22, 453.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204108 reads in 310.245 CPU sec, 17.521 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1204162
	[0000][ M::kt_pipeline] read 1204162 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520880, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 520, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2316)
[0000][PE] mean and std.dev: (647.07, 548.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.59, 71.37)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 298, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2747)
[0000][PE] mean and std.dev: (470.40, 466.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204010 reads in 307.018 CPU sec, 17.202 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1204174
	[0000][ M::kt_pipeline] read 1204174 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520979, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.70, 71.27)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (568, 1270, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4852)
[0000][PE] mean and std.dev: (1238.58, 715.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6280)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204162 reads in 311.560 CPU sec, 17.477 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1203980
	[0000][ M::kt_pipeline] read 1203980 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520900, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 311, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2557)
[0000][PE] mean and std.dev: (709.46, 751.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.75, 71.21)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204174 reads in 308.221 CPU sec, 17.313 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1204132
	[0000][ M::kt_pipeline] read 1204132 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521193, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 478, 715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1727)
[0000][PE] mean and std.dev: (487.40, 406.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.76, 71.20)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (361, 680, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5635)
[0000][PE] mean and std.dev: (1157.27, 1114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203980 reads in 306.118 CPU sec, 17.179 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1204190
	[0000][ M::kt_pipeline] read 1204190 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521066, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 681, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1844)
[0000][PE] mean and std.dev: (557.27, 372.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.57, 71.36)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 222, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 704)
[0000][PE] mean and std.dev: (224.38, 61.77)
[0000][PE] low and high boundaries for proper pairs: (1, 875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204132 reads in 308.354 CPU sec, 17.266 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204172
	[0000][ M::kt_pipeline] read 1204172 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521335, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 682, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4153)
[0000][PE] mean and std.dev: (791.92, 840.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.36, 71.41)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 344, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2882)
[0000][PE] mean and std.dev: (601.93, 477.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204190 reads in 303.943 CPU sec, 17.035 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1204022
	[0000][ M::kt_pipeline] read 1204022 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520980, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 373, 963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2407)
[0000][PE] mean and std.dev: (460.00, 329.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.37, 71.29)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 313, 1133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3023)
[0000][PE] mean and std.dev: (718.30, 839.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204172 reads in 306.697 CPU sec, 17.182 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1203990
	[0000][ M::kt_pipeline] read 1203990 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520851, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 828, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5900)
[0000][PE] mean and std.dev: (1462.00, 1597.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.39, 71.27)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 630, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5442)
[0000][PE] mean and std.dev: (959.80, 835.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204022 reads in 309.555 CPU sec, 17.351 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1204068
	[0000][ M::kt_pipeline] read 1204068 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520882, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.69, 71.15)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 990, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3243)
[0000][PE] mean and std.dev: (780.85, 579.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4237)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203990 reads in 306.020 CPU sec, 17.142 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1204138
	[0000][ M::kt_pipeline] read 1204138 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520797, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.28, 71.46)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1379, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3849)
[0000][PE] mean and std.dev: (1541.50, 1157.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6173)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204068 reads in 308.905 CPU sec, 17.295 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204046
	[0000][ M::kt_pipeline] read 1204046 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520779, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 342, 929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2329)
[0000][PE] mean and std.dev: (498.75, 422.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.21, 71.50)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204138 reads in 306.725 CPU sec, 17.221 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1204240
	[0000][ M::kt_pipeline] read 1204240 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520868, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 450, 772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1782)
[0000][PE] mean and std.dev: (524.80, 354.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.44, 71.34)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 622, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2941)
[0000][PE] mean and std.dev: (669.18, 434.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204046 reads in 306.038 CPU sec, 17.145 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000283, nseq: 1204008
	[0000][ M::kt_pipeline] read 1204008 sequences (180000283 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521192, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 736, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3926)
[0000][PE] mean and std.dev: (854.00, 697.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.50, 71.38)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 922, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (798.15, 493.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204240 reads in 309.019 CPU sec, 17.330 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204132
	[0000][ M::kt_pipeline] read 1204132 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520955, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 960, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (781.30, 506.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.03, 71.38)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1209, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (1136.40, 628.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204008 reads in 305.714 CPU sec, 17.122 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204044
	[0000][ M::kt_pipeline] read 1204044 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521490, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 722, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2974)
[0000][PE] mean and std.dev: (767.90, 537.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.36, 71.33)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 386, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2339)
[0000][PE] mean and std.dev: (466.42, 367.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204132 reads in 306.714 CPU sec, 17.278 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1204168
	[0000][ M::kt_pipeline] read 1204168 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521424, 2, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.15, 71.34)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 357, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2043)
[0000][PE] mean and std.dev: (448.47, 301.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2653)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204044 reads in 310.172 CPU sec, 17.430 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204064
	[0000][ M::kt_pipeline] read 1204064 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520753, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 266, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (583.56, 574.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.26, 71.44)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 724, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4132)
[0000][PE] mean and std.dev: (884.43, 747.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204168 reads in 308.082 CPU sec, 17.266 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1204298
	[0000][ M::kt_pipeline] read 1204298 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 521459, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.27, 71.32)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 1261, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5021)
[0000][PE] mean and std.dev: (1097.54, 742.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6601)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204064 reads in 306.375 CPU sec, 17.176 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1204144
	[0000][ M::kt_pipeline] read 1204144 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520882, 4, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.53, 71.32)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 706, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2774)
[0000][PE] mean and std.dev: (763.83, 651.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3600)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204298 reads in 313.619 CPU sec, 17.574 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204058
	[0000][ M::kt_pipeline] read 1204058 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520883, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 348, 2716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7760)
[0000][PE] mean and std.dev: (1325.40, 1700.48)
[0000][PE] low and high boundaries for proper pairs: (1, 10282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.26, 71.33)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 876, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4874)
[0000][PE] mean and std.dev: (1072.92, 914.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204144 reads in 313.721 CPU sec, 17.605 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1204066
	[0000][ M::kt_pipeline] read 1204066 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520497, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 409, 956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2458)
[0000][PE] mean and std.dev: (558.25, 428.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.53, 71.23)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (317, 766, 963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2255)
[0000][PE] mean and std.dev: (633.92, 364.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204058 reads in 312.355 CPU sec, 17.525 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1204166
	[0000][ M::kt_pipeline] read 1204166 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521248, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 584, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5384)
[0000][PE] mean and std.dev: (909.56, 1011.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.44, 71.44)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 376, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2629)
[0000][PE] mean and std.dev: (601.00, 443.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204066 reads in 310.971 CPU sec, 17.455 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1204080
	[0000][ M::kt_pipeline] read 1204080 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520914, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 800, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (1059.53, 733.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.15, 71.30)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 707, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2854)
[0000][PE] mean and std.dev: (484.80, 368.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204166 reads in 314.802 CPU sec, 17.692 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204262
	[0000][ M::kt_pipeline] read 1204262 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520906, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.11, 71.24)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204080 reads in 320.252 CPU sec, 17.925 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204134
	[0000][ M::kt_pipeline] read 1204134 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520499, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.89, 71.36)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 379, 608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1160)
[0000][PE] mean and std.dev: (367.09, 149.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1436)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204262 reads in 321.147 CPU sec, 18.049 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1204080
	[0000][ M::kt_pipeline] read 1204080 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520861, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 268, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1187)
[0000][PE] mean and std.dev: (328.32, 196.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.43, 71.25)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 272, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 562)
[0000][PE] mean and std.dev: (240.40, 51.13)
[0000][PE] low and high boundaries for proper pairs: (1, 686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204134 reads in 320.243 CPU sec, 17.938 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1204284
	[0000][ M::kt_pipeline] read 1204284 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520455, 1, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (358.13, 71.18)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 808, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3427)
[0000][PE] mean and std.dev: (800.36, 584.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4480)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204080 reads in 319.174 CPU sec, 17.915 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204132
	[0000][ M::kt_pipeline] read 1204132 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520723, 6, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.29, 71.31)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204284 reads in 313.899 CPU sec, 17.605 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1204030
	[0000][ M::kt_pipeline] read 1204030 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521058, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (778, 996, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2794)
[0000][PE] mean and std.dev: (1052.91, 650.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.11, 71.29)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (438, 850, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2919)
[0000][PE] mean and std.dev: (885.93, 539.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204132 reads in 306.849 CPU sec, 17.227 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1204138
	[0000][ M::kt_pipeline] read 1204138 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 521373, 1, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.38, 71.26)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 355, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2570)
[0000][PE] mean and std.dev: (639.40, 458.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3326)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204030 reads in 305.850 CPU sec, 17.201 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1204086
	[0000][ M::kt_pipeline] read 1204086 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521414, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 456, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2852)
[0000][PE] mean and std.dev: (555.30, 361.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.15, 71.44)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (336, 522, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2826)
[0000][PE] mean and std.dev: (597.00, 400.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204138 reads in 305.212 CPU sec, 17.128 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204182
	[0000][ M::kt_pipeline] read 1204182 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521230, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 357, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.78, 71.37)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 309, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (601.80, 531.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3797)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204086 reads in 303.989 CPU sec, 17.049 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1204006
	[0000][ M::kt_pipeline] read 1204006 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520916, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 296, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2591)
[0000][PE] mean and std.dev: (413.64, 324.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.94, 71.14)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (354, 860, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3246)
[0000][PE] mean and std.dev: (848.38, 633.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204182 reads in 304.398 CPU sec, 17.096 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1203984
	[0000][ M::kt_pipeline] read 1203984 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521379, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 309, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3407)
[0000][PE] mean and std.dev: (661.38, 620.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.81, 71.40)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204006 reads in 303.426 CPU sec, 17.044 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1204050
	[0000][ M::kt_pipeline] read 1204050 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521525, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 482, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (684.41, 541.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.81, 71.42)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 615, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (532.45, 346.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203984 reads in 306.103 CPU sec, 17.206 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1204130
	[0000][ M::kt_pipeline] read 1204130 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520584, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 300, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2676)
[0000][PE] mean and std.dev: (555.78, 524.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.64, 71.26)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 302, 1059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2629)
[0000][PE] mean and std.dev: (481.23, 410.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204050 reads in 310.691 CPU sec, 17.423 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204042
	[0000][ M::kt_pipeline] read 1204042 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520627, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.35, 71.42)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 320, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3044)
[0000][PE] mean and std.dev: (682.80, 701.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3987)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204130 reads in 317.233 CPU sec, 17.826 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1204150
	[0000][ M::kt_pipeline] read 1204150 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520921, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 498, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4028)
[0000][PE] mean and std.dev: (913.56, 844.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.27, 71.43)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 909, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2346)
[0000][PE] mean and std.dev: (903.00, 446.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204042 reads in 314.642 CPU sec, 17.650 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1204058
	[0000][ M::kt_pipeline] read 1204058 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521426, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 249, 797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2079)
[0000][PE] mean and std.dev: (393.62, 336.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.88, 71.37)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 393, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5918)
[0000][PE] mean and std.dev: (1013.12, 1009.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204150 reads in 314.271 CPU sec, 17.680 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1204060
	[0000][ M::kt_pipeline] read 1204060 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520986, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 316, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1277)
[0000][PE] mean and std.dev: (382.07, 288.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.80, 71.15)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 282, 434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 812)
[0000][PE] mean and std.dev: (273.88, 69.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204058 reads in 311.086 CPU sec, 17.468 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1204156
	[0000][ M::kt_pipeline] read 1204156 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521412, 4, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.08, 71.44)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 252, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2155)
[0000][PE] mean and std.dev: (396.33, 315.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2805)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204060 reads in 307.899 CPU sec, 17.271 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1204106
	[0000][ M::kt_pipeline] read 1204106 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520614, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 775, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (859.50, 615.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.29, 71.35)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204156 reads in 309.022 CPU sec, 17.333 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1204198
	[0000][ M::kt_pipeline] read 1204198 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521151, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 426, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1560)
[0000][PE] mean and std.dev: (520.50, 276.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.22, 71.47)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204106 reads in 311.181 CPU sec, 17.486 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1204062
	[0000][ M::kt_pipeline] read 1204062 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521299, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 1146, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3676)
[0000][PE] mean and std.dev: (917.50, 598.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.43, 71.55)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204198 reads in 301.455 CPU sec, 16.932 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1204204
	[0000][ M::kt_pipeline] read 1204204 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521153, 2, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.21, 71.43)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204062 reads in 307.136 CPU sec, 17.257 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1204150
	[0000][ M::kt_pipeline] read 1204150 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521112, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.17, 71.46)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (420, 882, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2307)
[0000][PE] mean and std.dev: (720.67, 291.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2936)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204204 reads in 301.631 CPU sec, 16.907 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1204108
	[0000][ M::kt_pipeline] read 1204108 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521093, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 1134, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (904.00, 521.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.45, 71.34)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (377, 949, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2951)
[0000][PE] mean and std.dev: (956.12, 531.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204150 reads in 307.859 CPU sec, 17.288 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1204074
	[0000][ M::kt_pipeline] read 1204074 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520949, 4, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.54, 71.56)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204108 reads in 306.328 CPU sec, 17.193 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1203940
	[0000][ M::kt_pipeline] read 1203940 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521033, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 316, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1562)
[0000][PE] mean and std.dev: (479.30, 389.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 587)
[0000][PE] mean and std.dev: (359.79, 71.39)
[0000][PE] low and high boundaries for proper pairs: (41, 678)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 342, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2911)
[0000][PE] mean and std.dev: (678.38, 581.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204074 reads in 303.740 CPU sec, 17.021 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1204074
	[0000][ M::kt_pipeline] read 1204074 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521358, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 486, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (816.31, 766.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.73, 71.55)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 347, 452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 892)
[0000][PE] mean and std.dev: (306.30, 107.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203940 reads in 304.428 CPU sec, 17.079 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204110
	[0000][ M::kt_pipeline] read 1204110 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521444, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 699, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4326)
[0000][PE] mean and std.dev: (816.65, 648.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.62, 71.43)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (344, 585, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3176)
[0000][PE] mean and std.dev: (738.33, 556.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204074 reads in 305.433 CPU sec, 17.123 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1204100
	[0000][ M::kt_pipeline] read 1204100 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521130, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 333, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2949)
[0000][PE] mean and std.dev: (473.40, 380.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.45, 71.44)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 429, 785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1853)
[0000][PE] mean and std.dev: (519.92, 333.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204110 reads in 304.097 CPU sec, 17.101 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1204030
	[0000][ M::kt_pipeline] read 1204030 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520854, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 685, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2986)
[0000][PE] mean and std.dev: (809.93, 639.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.65, 71.47)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 770, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3638)
[0000][PE] mean and std.dev: (827.23, 455.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204100 reads in 302.344 CPU sec, 16.937 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1204236
	[0000][ M::kt_pipeline] read 1204236 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520690, 9, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 587)
[0000][PE] mean and std.dev: (359.84, 71.48)
[0000][PE] low and high boundaries for proper pairs: (41, 678)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 775, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2844)
[0000][PE] mean and std.dev: (638.50, 376.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3690)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204030 reads in 305.138 CPU sec, 17.276 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1204182
	[0000][ M::kt_pipeline] read 1204182 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520818, 8, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 587)
[0000][PE] mean and std.dev: (359.85, 71.42)
[0000][PE] low and high boundaries for proper pairs: (41, 678)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204236 reads in 302.757 CPU sec, 17.044 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1204010
	[0000][ M::kt_pipeline] read 1204010 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520811, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.70, 71.30)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1201, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (1282.25, 937.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5032)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204182 reads in 305.252 CPU sec, 17.119 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1204080
	[0000][ M::kt_pipeline] read 1204080 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520695, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 592)
[0000][PE] mean and std.dev: (359.78, 71.62)
[0000][PE] low and high boundaries for proper pairs: (34, 685)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 392, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3547)
[0000][PE] mean and std.dev: (663.67, 647.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204010 reads in 306.188 CPU sec, 17.160 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204148
	[0000][ M::kt_pipeline] read 1204148 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521336, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.52, 71.35)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (704, 781, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1883)
[0000][PE] mean and std.dev: (753.45, 300.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2276)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204080 reads in 305.808 CPU sec, 17.205 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204040
	[0000][ M::kt_pipeline] read 1204040 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521120, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.52, 71.46)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (335, 883, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2270)
[0000][PE] mean and std.dev: (609.91, 317.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2915)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204148 reads in 302.753 CPU sec, 16.967 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1204166
	[0000][ M::kt_pipeline] read 1204166 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521269, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 376, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1858)
[0000][PE] mean and std.dev: (510.00, 354.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.43, 71.52)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (342, 891, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (924.33, 700.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204040 reads in 300.917 CPU sec, 16.854 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1204198
	[0000][ M::kt_pipeline] read 1204198 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521228, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 458, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3577)
[0000][PE] mean and std.dev: (672.69, 535.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.30, 71.45)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (397, 1212, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5245)
[0000][PE] mean and std.dev: (1481.40, 1505.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204166 reads in 301.917 CPU sec, 16.952 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1204082
	[0000][ M::kt_pipeline] read 1204082 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521314, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 907, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2252)
[0000][PE] mean and std.dev: (716.17, 537.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.42, 71.46)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 644, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6463)
[0000][PE] mean and std.dev: (1628.50, 1884.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204198 reads in 304.854 CPU sec, 17.190 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1204174
	[0000][ M::kt_pipeline] read 1204174 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520306, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.18, 71.35)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204082 reads in 302.180 CPU sec, 16.924 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1204194
	[0000][ M::kt_pipeline] read 1204194 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521004, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (620, 770, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2684)
[0000][PE] mean and std.dev: (906.42, 484.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.42, 71.38)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 355, 938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2418)
[0000][PE] mean and std.dev: (531.47, 489.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204174 reads in 307.435 CPU sec, 17.262 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1204208
	[0000][ M::kt_pipeline] read 1204208 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520833, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 389, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (989.36, 969.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.21, 71.53)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 396, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5705)
[0000][PE] mean and std.dev: (997.25, 974.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204194 reads in 303.154 CPU sec, 17.009 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204240
	[0000][ M::kt_pipeline] read 1204240 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520978, 6, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.63, 71.34)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 318, 715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1647)
[0000][PE] mean and std.dev: (502.90, 443.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2278)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204208 reads in 308.242 CPU sec, 17.287 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1204138
	[0000][ M::kt_pipeline] read 1204138 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520759, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 396, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5064)
[0000][PE] mean and std.dev: (690.69, 715.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.61, 71.47)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 746, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3948)
[0000][PE] mean and std.dev: (1140.73, 1107.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204240 reads in 305.452 CPU sec, 17.149 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1204048
	[0000][ M::kt_pipeline] read 1204048 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520779, 9, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.48, 71.35)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 395, 3090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8680)
[0000][PE] mean and std.dev: (1584.85, 2271.06)
[0000][PE] low and high boundaries for proper pairs: (1, 11475)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204138 reads in 309.113 CPU sec, 17.338 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1204222
	[0000][ M::kt_pipeline] read 1204222 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521360, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.37, 71.62)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (217, 367, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2644)
[0000][PE] mean and std.dev: (628.58, 572.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3453)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204048 reads in 302.925 CPU sec, 17.002 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1204106
	[0000][ M::kt_pipeline] read 1204106 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520902, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 354, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (848.09, 862.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.38, 71.62)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 732, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3558)
[0000][PE] mean and std.dev: (567.62, 467.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204222 reads in 303.525 CPU sec, 17.008 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204176
	[0000][ M::kt_pipeline] read 1204176 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521261, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.23, 71.49)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 384, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2238)
[0000][PE] mean and std.dev: (586.36, 433.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2900)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204106 reads in 307.193 CPU sec, 17.242 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204170
	[0000][ M::kt_pipeline] read 1204170 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520829, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 278, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3132)
[0000][PE] mean and std.dev: (707.85, 838.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.11, 71.43)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (217, 527, 830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2056)
[0000][PE] mean and std.dev: (575.07, 394.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204176 reads in 304.841 CPU sec, 17.098 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1204124
	[0000][ M::kt_pipeline] read 1204124 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 521318, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 396, 461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1001)
[0000][PE] mean and std.dev: (302.38, 140.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.15, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 308, 768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1838)
[0000][PE] mean and std.dev: (483.21, 402.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204170 reads in 306.333 CPU sec, 17.151 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1204010
	[0000][ M::kt_pipeline] read 1204010 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521047, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 488, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2688)
[0000][PE] mean and std.dev: (681.33, 686.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.94, 71.73)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204124 reads in 305.956 CPU sec, 17.230 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1204076
	[0000][ M::kt_pipeline] read 1204076 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520832, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 864, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4319)
[0000][PE] mean and std.dev: (1026.58, 914.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.73, 71.24)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 289, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2385)
[0000][PE] mean and std.dev: (515.21, 387.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204010 reads in 306.189 CPU sec, 17.174 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1204100
	[0000][ M::kt_pipeline] read 1204100 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521081, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.20, 71.51)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 391, 804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1918)
[0000][PE] mean and std.dev: (447.27, 267.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2475)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204076 reads in 312.830 CPU sec, 17.573 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1204068
	[0000][ M::kt_pipeline] read 1204068 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520160, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 255, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3364)
[0000][PE] mean and std.dev: (740.08, 817.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.44, 71.34)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 869, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2808)
[0000][PE] mean and std.dev: (729.50, 436.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204100 reads in 310.337 CPU sec, 17.380 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204170
	[0000][ M::kt_pipeline] read 1204170 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520962, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 378, 948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2354)
[0000][PE] mean and std.dev: (516.36, 360.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.50, 71.33)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (340, 822, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2293)
[0000][PE] mean and std.dev: (826.45, 526.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204068 reads in 313.700 CPU sec, 17.555 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204150
	[0000][ M::kt_pipeline] read 1204150 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521018, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 344, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2916)
[0000][PE] mean and std.dev: (566.36, 489.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 587)
[0000][PE] mean and std.dev: (359.71, 71.33)
[0000][PE] low and high boundaries for proper pairs: (41, 678)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 458, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5036)
[0000][PE] mean and std.dev: (828.75, 756.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204170 reads in 315.751 CPU sec, 17.722 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1204232
	[0000][ M::kt_pipeline] read 1204232 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520954, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 296, 342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 710)
[0000][PE] mean and std.dev: (239.00, 92.68)
[0000][PE] low and high boundaries for proper pairs: (1, 894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.36, 71.39)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (415, 775, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4048)
[0000][PE] mean and std.dev: (971.15, 776.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204150 reads in 315.767 CPU sec, 17.694 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204102
	[0000][ M::kt_pipeline] read 1204102 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520753, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 351, 788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1764)
[0000][PE] mean and std.dev: (397.78, 237.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.50, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (423, 758, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3543)
[0000][PE] mean and std.dev: (1066.86, 825.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204232 reads in 318.817 CPU sec, 17.865 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204184
	[0000][ M::kt_pipeline] read 1204184 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520741, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.15, 71.47)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 407, 760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1794)
[0000][PE] mean and std.dev: (494.33, 407.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2311)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204102 reads in 318.680 CPU sec, 17.881 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1204070
	[0000][ M::kt_pipeline] read 1204070 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521022, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (850, 1105, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3022)
[0000][PE] mean and std.dev: (1055.50, 609.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.25, 71.52)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1112, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3695)
[0000][PE] mean and std.dev: (1078.44, 547.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204184 reads in 314.554 CPU sec, 17.642 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1204084
	[0000][ M::kt_pipeline] read 1204084 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520736, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (584, 1123, 3136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8240)
[0000][PE] mean and std.dev: (1463.00, 1256.42)
[0000][PE] low and high boundaries for proper pairs: (1, 10792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.85, 71.60)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 479, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (673.20, 525.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204070 reads in 308.515 CPU sec, 17.340 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1203974
	[0000][ M::kt_pipeline] read 1203974 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520915, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.00, 71.49)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 398, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2376)
[0000][PE] mean and std.dev: (498.70, 298.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3065)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204084 reads in 305.581 CPU sec, 17.177 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204218
	[0000][ M::kt_pipeline] read 1204218 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520785, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 489, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (742.14, 611.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.39, 71.42)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (377, 1497, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4391)
[0000][PE] mean and std.dev: (1132.67, 703.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203974 reads in 303.300 CPU sec, 16.990 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1204004
	[0000][ M::kt_pipeline] read 1204004 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520854, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.09, 71.46)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 321, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2379)
[0000][PE] mean and std.dev: (566.67, 414.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3080)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204218 reads in 307.174 CPU sec, 17.290 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1204170
	[0000][ M::kt_pipeline] read 1204170 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521152, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 716, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6604)
[0000][PE] mean and std.dev: (1281.36, 1289.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.90, 71.73)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (370, 517, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4387)
[0000][PE] mean and std.dev: (1143.21, 1120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204004 reads in 305.198 CPU sec, 17.170 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204180
	[0000][ M::kt_pipeline] read 1204180 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521034, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 835, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (842.00, 637.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.85, 71.67)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 1161, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3650)
[0000][PE] mean and std.dev: (856.46, 598.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204170 reads in 307.749 CPU sec, 17.264 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1204056
	[0000][ M::kt_pipeline] read 1204056 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520561, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.59, 71.54)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (435, 1014, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2922)
[0000][PE] mean and std.dev: (820.11, 377.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3751)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204180 reads in 306.954 CPU sec, 17.231 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1204184
	[0000][ M::kt_pipeline] read 1204184 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520806, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 778, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (795.25, 484.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.46, 71.52)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204056 reads in 308.756 CPU sec, 17.304 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1204234
	[0000][ M::kt_pipeline] read 1204234 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520997, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 257, 627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1519)
[0000][PE] mean and std.dev: (416.04, 407.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.91, 71.74)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (373, 1120, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3292)
[0000][PE] mean and std.dev: (868.83, 477.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204184 reads in 306.160 CPU sec, 17.177 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204168
	[0000][ M::kt_pipeline] read 1204168 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521261, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 452, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3144)
[0000][PE] mean and std.dev: (743.64, 539.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.95, 71.46)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 798, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3064)
[0000][PE] mean and std.dev: (715.00, 443.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204234 reads in 307.046 CPU sec, 17.230 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1204112
	[0000][ M::kt_pipeline] read 1204112 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520712, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 778, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3658)
[0000][PE] mean and std.dev: (885.92, 565.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.09, 71.62)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 868, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2237)
[0000][PE] mean and std.dev: (616.55, 423.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204168 reads in 308.525 CPU sec, 17.330 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1204092
	[0000][ M::kt_pipeline] read 1204092 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521228, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 1088, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3562)
[0000][PE] mean and std.dev: (651.00, 531.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.41, 71.32)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 992, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2917)
[0000][PE] mean and std.dev: (941.27, 654.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204112 reads in 302.136 CPU sec, 16.948 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1204188
	[0000][ M::kt_pipeline] read 1204188 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520896, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 589, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2594)
[0000][PE] mean and std.dev: (525.18, 313.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.77, 71.20)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (473, 833, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3770)
[0000][PE] mean and std.dev: (920.13, 553.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204092 reads in 309.408 CPU sec, 17.349 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1204158
	[0000][ M::kt_pipeline] read 1204158 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 520924, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.11, 71.29)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (176, 309, 638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1562)
[0000][PE] mean and std.dev: (417.64, 388.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2024)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204188 reads in 307.356 CPU sec, 17.237 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1204056
	[0000][ M::kt_pipeline] read 1204056 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520935, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 228, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (631.64, 716.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.04, 71.37)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (269, 601, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (729.50, 539.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204158 reads in 307.890 CPU sec, 17.296 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1204002
	[0000][ M::kt_pipeline] read 1204002 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520903, 3, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.36, 71.50)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 311, 389)
[0000][PE] low and high boundaries for computing mean and std.dev: (14, 639)
[0000][PE] mean and std.dev: (317.12, 69.22)
[0000][PE] low and high boundaries for proper pairs: (1, 764)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204056 reads in 307.223 CPU sec, 17.229 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1204122
	[0000][ M::kt_pipeline] read 1204122 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520805, 10, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.21, 71.49)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (160, 209, 3693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10759)
[0000][PE] mean and std.dev: (1882.80, 2419.99)
[0000][PE] low and high boundaries for proper pairs: (1, 14292)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204002 reads in 304.076 CPU sec, 17.033 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204064
	[0000][ M::kt_pipeline] read 1204064 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521734, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 299, 515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1135)
[0000][PE] mean and std.dev: (289.45, 119.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.08, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 296, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2731)
[0000][PE] mean and std.dev: (475.23, 377.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204122 reads in 303.050 CPU sec, 17.023 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204256
	[0000][ M::kt_pipeline] read 1204256 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520631, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.24, 71.55)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 406, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2333)
[0000][PE] mean and std.dev: (501.33, 294.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3015)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204064 reads in 308.831 CPU sec, 17.301 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1204092
	[0000][ M::kt_pipeline] read 1204092 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521007, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 518, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2675)
[0000][PE] mean and std.dev: (645.92, 434.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.45, 71.47)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 375, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (843.80, 813.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204256 reads in 304.493 CPU sec, 17.051 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1204172
	[0000][ M::kt_pipeline] read 1204172 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520775, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.50, 71.38)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204092 reads in 302.388 CPU sec, 16.991 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1204102
	[0000][ M::kt_pipeline] read 1204102 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520854, 8, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.61, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 503, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (729.55, 549.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4104)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204172 reads in 306.692 CPU sec, 17.201 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1204144
	[0000][ M::kt_pipeline] read 1204144 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521054, 0, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 294, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5969)
[0000][PE] mean and std.dev: (747.15, 857.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (359.97, 71.46)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204102 reads in 302.392 CPU sec, 17.017 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1204048
	[0000][ M::kt_pipeline] read 1204048 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521106, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 363, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1362)
[0000][PE] mean and std.dev: (425.09, 270.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.66, 71.57)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (183, 308, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2505)
[0000][PE] mean and std.dev: (451.25, 398.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204144 reads in 306.140 CPU sec, 17.235 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1203928
	[0000][ M::kt_pipeline] read 1203928 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520964, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 303, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2687)
[0000][PE] mean and std.dev: (584.58, 507.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.63, 71.56)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 466, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2156)
[0000][PE] mean and std.dev: (556.85, 422.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204048 reads in 305.258 CPU sec, 17.095 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1203966
	[0000][ M::kt_pipeline] read 1203966 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521316, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 252, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2513)
[0000][PE] mean and std.dev: (603.20, 668.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.60, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 863, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4029)
[0000][PE] mean and std.dev: (913.38, 597.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203928 reads in 304.695 CPU sec, 17.066 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1204172
	[0000][ M::kt_pipeline] read 1204172 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520880, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 783, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4417)
[0000][PE] mean and std.dev: (679.50, 583.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 587)
[0000][PE] mean and std.dev: (359.82, 71.24)
[0000][PE] low and high boundaries for proper pairs: (41, 678)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (359, 966, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5561)
[0000][PE] mean and std.dev: (1152.71, 1152.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203966 reads in 303.696 CPU sec, 17.011 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1204168
	[0000][ M::kt_pipeline] read 1204168 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520598, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 548, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2980)
[0000][PE] mean and std.dev: (757.86, 589.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 587)
[0000][PE] mean and std.dev: (359.75, 71.35)
[0000][PE] low and high boundaries for proper pairs: (41, 678)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 367, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2043)
[0000][PE] mean and std.dev: (484.33, 409.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204172 reads in 304.254 CPU sec, 17.067 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1204070
	[0000][ M::kt_pipeline] read 1204070 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 521131, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 360, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.69, 71.63)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (380, 875, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3011)
[0000][PE] mean and std.dev: (696.75, 459.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3888)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204168 reads in 305.217 CPU sec, 17.115 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204158
	[0000][ M::kt_pipeline] read 1204158 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520607, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 1130, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6873)
[0000][PE] mean and std.dev: (1429.00, 1436.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.68, 71.61)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 374, 877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2023)
[0000][PE] mean and std.dev: (564.23, 437.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204070 reads in 301.966 CPU sec, 16.921 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1204212
	[0000][ M::kt_pipeline] read 1204212 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521476, 4, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.59, 71.54)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 359, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3235)
[0000][PE] mean and std.dev: (704.47, 683.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204158 reads in 303.373 CPU sec, 17.002 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1204184
	[0000][ M::kt_pipeline] read 1204184 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520745, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 628, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2859)
[0000][PE] mean and std.dev: (724.78, 549.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.42, 71.61)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 1113, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (669.88, 455.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204212 reads in 304.027 CPU sec, 17.067 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204138
	[0000][ M::kt_pipeline] read 1204138 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520789, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 322, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1116)
[0000][PE] mean and std.dev: (311.40, 166.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.31, 71.51)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 337, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1571)
[0000][PE] mean and std.dev: (429.58, 335.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204184 reads in 306.538 CPU sec, 17.188 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204040
	[0000][ M::kt_pipeline] read 1204040 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521001, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 297, 363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 659)
[0000][PE] mean and std.dev: (250.30, 85.64)
[0000][PE] low and high boundaries for proper pairs: (1, 807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.39, 71.54)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (534, 855, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2751)
[0000][PE] mean and std.dev: (764.83, 378.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204138 reads in 310.960 CPU sec, 17.406 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1204082
	[0000][ M::kt_pipeline] read 1204082 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521238, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 463, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4759)
[0000][PE] mean and std.dev: (879.18, 708.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 587)
[0000][PE] mean and std.dev: (359.78, 71.31)
[0000][PE] low and high boundaries for proper pairs: (41, 678)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204040 reads in 305.462 CPU sec, 17.114 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204194
	[0000][ M::kt_pipeline] read 1204194 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520968, 3, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.68, 71.54)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 431, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (570.56, 419.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4570)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204082 reads in 306.465 CPU sec, 17.188 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1204164
	[0000][ M::kt_pipeline] read 1204164 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520313, 7, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 592)
[0000][PE] mean and std.dev: (359.89, 71.75)
[0000][PE] low and high boundaries for proper pairs: (34, 685)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 874, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3373)
[0000][PE] mean and std.dev: (1092.07, 840.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4454)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204194 reads in 309.924 CPU sec, 17.365 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1204214
	[0000][ M::kt_pipeline] read 1204214 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520928, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.37, 71.40)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204164 reads in 307.688 CPU sec, 17.251 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204206
	[0000][ M::kt_pipeline] read 1204206 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521223, 1, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.48, 71.53)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (576, 815, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1887)
[0000][PE] mean and std.dev: (727.64, 389.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2324)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204214 reads in 310.242 CPU sec, 17.433 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1204164
	[0000][ M::kt_pipeline] read 1204164 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520940, 4, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.55, 71.63)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (333, 777, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4095)
[0000][PE] mean and std.dev: (706.77, 517.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204206 reads in 307.791 CPU sec, 17.322 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204124
	[0000][ M::kt_pipeline] read 1204124 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521075, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 263, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4632)
[0000][PE] mean and std.dev: (810.50, 794.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.53, 71.39)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (596, 894, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (1021.20, 673.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204164 reads in 308.409 CPU sec, 17.331 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1204264
	[0000][ M::kt_pipeline] read 1204264 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521453, 8, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.54, 71.38)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (704, 1149, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2213)
[0000][PE] mean and std.dev: (884.64, 366.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2716)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204124 reads in 306.890 CPU sec, 17.212 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1204120
	[0000][ M::kt_pipeline] read 1204120 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520886, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 615, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4412)
[0000][PE] mean and std.dev: (996.35, 991.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.60, 71.41)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 555, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4196)
[0000][PE] mean and std.dev: (874.69, 692.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204264 reads in 308.147 CPU sec, 17.277 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204158
	[0000][ M::kt_pipeline] read 1204158 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520999, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.52, 71.36)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 1129, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5410)
[0000][PE] mean and std.dev: (1328.27, 1078.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6991)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204120 reads in 307.092 CPU sec, 17.201 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204054
	[0000][ M::kt_pipeline] read 1204054 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521562, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 753, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2801)
[0000][PE] mean and std.dev: (713.25, 654.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.21, 71.57)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204158 reads in 311.235 CPU sec, 17.475 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1204118
	[0000][ M::kt_pipeline] read 1204118 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520502, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 250, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2957)
[0000][PE] mean and std.dev: (604.00, 671.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.44, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 663, 844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2012)
[0000][PE] mean and std.dev: (666.36, 440.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204054 reads in 306.886 CPU sec, 17.193 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1203988
	[0000][ M::kt_pipeline] read 1203988 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520849, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.01, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204118 reads in 304.598 CPU sec, 17.111 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1204174
	[0000][ M::kt_pipeline] read 1204174 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520957, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 291, 434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 822)
[0000][PE] mean and std.dev: (310.42, 132.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.98, 71.27)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203988 reads in 305.907 CPU sec, 17.173 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204032
	[0000][ M::kt_pipeline] read 1204032 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520772, 2, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.96, 71.72)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 427, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3221)
[0000][PE] mean and std.dev: (785.87, 704.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4203)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204174 reads in 307.386 CPU sec, 17.286 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1204192
	[0000][ M::kt_pipeline] read 1204192 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521083, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 941, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (705.00, 441.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.95, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 498, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2971)
[0000][PE] mean and std.dev: (700.14, 563.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204032 reads in 305.598 CPU sec, 17.130 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1204090
	[0000][ M::kt_pipeline] read 1204090 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520651, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 621, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4227)
[0000][PE] mean and std.dev: (839.08, 865.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.79, 71.30)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 355, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2229)
[0000][PE] mean and std.dev: (606.33, 579.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204192 reads in 308.957 CPU sec, 17.352 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1204206
	[0000][ M::kt_pipeline] read 1204206 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520794, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 475, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2547)
[0000][PE] mean and std.dev: (622.71, 518.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.25, 71.43)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 343, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3671)
[0000][PE] mean and std.dev: (754.35, 742.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204090 reads in 313.878 CPU sec, 17.578 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1204248
	[0000][ M::kt_pipeline] read 1204248 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520935, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 393, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2742)
[0000][PE] mean and std.dev: (548.20, 508.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.26, 71.36)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 823, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5937)
[0000][PE] mean and std.dev: (1219.53, 1302.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204206 reads in 316.760 CPU sec, 17.766 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1204272
	[0000][ M::kt_pipeline] read 1204272 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520882, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 715, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7203)
[0000][PE] mean and std.dev: (1295.77, 1400.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (359.88, 71.54)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 1006, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3666)
[0000][PE] mean and std.dev: (811.85, 539.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204248 reads in 315.169 CPU sec, 17.662 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1204158
	[0000][ M::kt_pipeline] read 1204158 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520408, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 334, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3034)
[0000][PE] mean and std.dev: (791.27, 742.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.67, 71.32)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 808, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2805)
[0000][PE] mean and std.dev: (666.77, 446.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204272 reads in 316.965 CPU sec, 17.779 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1204244
	[0000][ M::kt_pipeline] read 1204244 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520882, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 349, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2670)
[0000][PE] mean and std.dev: (539.40, 429.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.32, 71.40)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (177, 623, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1650)
[0000][PE] mean and std.dev: (534.00, 375.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204158 reads in 309.600 CPU sec, 17.349 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204168
	[0000][ M::kt_pipeline] read 1204168 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520344, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 356, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2536)
[0000][PE] mean and std.dev: (401.00, 283.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.09, 71.55)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 372, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4600)
[0000][PE] mean and std.dev: (976.55, 1217.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204244 reads in 313.024 CPU sec, 17.616 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204120
	[0000][ M::kt_pipeline] read 1204120 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521326, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 249, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2491)
[0000][PE] mean and std.dev: (498.15, 364.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.72, 71.51)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 289, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (761.63, 770.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204168 reads in 305.998 CPU sec, 17.165 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1204032
	[0000][ M::kt_pipeline] read 1204032 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520465, 4, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.58, 71.45)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (512, 1151, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (1196.23, 929.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4913)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204120 reads in 306.754 CPU sec, 17.237 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1204040
	[0000][ M::kt_pipeline] read 1204040 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521373, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 290, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2367)
[0000][PE] mean and std.dev: (446.00, 397.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.11, 71.55)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (405, 863, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3456)
[0000][PE] mean and std.dev: (1001.06, 684.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204032 reads in 306.397 CPU sec, 17.182 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1204228
	[0000][ M::kt_pipeline] read 1204228 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521149, 0, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.51, 71.65)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 316, 716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1658)
[0000][PE] mean and std.dev: (531.06, 437.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2280)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204040 reads in 305.509 CPU sec, 17.121 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204038
	[0000][ M::kt_pipeline] read 1204038 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521272, 5, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.17, 71.64)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204228 reads in 303.684 CPU sec, 17.022 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1204110
	[0000][ M::kt_pipeline] read 1204110 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520820, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 409, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2862)
[0000][PE] mean and std.dev: (617.26, 462.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.80, 71.30)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (376, 638, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1750)
[0000][PE] mean and std.dev: (549.20, 274.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204038 reads in 305.683 CPU sec, 17.136 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1204072
	[0000][ M::kt_pipeline] read 1204072 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521528, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.50, 71.35)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (359, 619, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2333)
[0000][PE] mean and std.dev: (625.50, 421.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2991)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204110 reads in 303.330 CPU sec, 17.004 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1204130
	[0000][ M::kt_pipeline] read 1204130 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520740, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 493, 871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2151)
[0000][PE] mean and std.dev: (582.08, 425.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.32, 71.46)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (269, 858, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4613)
[0000][PE] mean and std.dev: (878.69, 982.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204072 reads in 309.598 CPU sec, 17.372 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1204152
	[0000][ M::kt_pipeline] read 1204152 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521170, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.39, 71.65)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 738, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3106)
[0000][PE] mean and std.dev: (928.93, 802.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4137)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204130 reads in 307.622 CPU sec, 17.313 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204248
	[0000][ M::kt_pipeline] read 1204248 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520925, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.82, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (394, 591, 827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1693)
[0000][PE] mean and std.dev: (559.58, 255.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2126)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204152 reads in 308.728 CPU sec, 17.278 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1204148
	[0000][ M::kt_pipeline] read 1204148 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521249, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.46, 71.51)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (344, 1027, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (901.62, 518.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4272)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204248 reads in 309.378 CPU sec, 17.389 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1204214
	[0000][ M::kt_pipeline] read 1204214 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520767, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 455, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2632)
[0000][PE] mean and std.dev: (584.90, 369.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.50, 71.48)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 402, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2654)
[0000][PE] mean and std.dev: (537.78, 365.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204148 reads in 314.315 CPU sec, 17.600 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1204060
	[0000][ M::kt_pipeline] read 1204060 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520620, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.79, 71.27)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (324, 387, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4365)
[0000][PE] mean and std.dev: (896.47, 884.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5712)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204214 reads in 315.180 CPU sec, 17.678 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1203966
	[0000][ M::kt_pipeline] read 1203966 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521118, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.95, 71.70)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 330, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2321)
[0000][PE] mean and std.dev: (632.09, 439.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3010)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204060 reads in 313.120 CPU sec, 17.567 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1204066
	[0000][ M::kt_pipeline] read 1204066 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521256, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 678, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (880.31, 816.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.23, 71.43)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203966 reads in 307.485 CPU sec, 17.249 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1204112
	[0000][ M::kt_pipeline] read 1204112 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520441, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 954, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3612)
[0000][PE] mean and std.dev: (864.90, 532.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.11, 71.53)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 266, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2509)
[0000][PE] mean and std.dev: (572.11, 571.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204066 reads in 306.673 CPU sec, 17.186 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1203996
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204112
	[0000][ M::kt_pipeline] read 1203996 sequences (180000242 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 521052, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (359.02, 71.66)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (333, 811, 987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2295)
[0000][PE] mean and std.dev: (682.67, 381.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2949)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204112 reads in 312.037 CPU sec, 17.636 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1203970
	[0000][ M::kt_pipeline] read 1203970 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521194, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.04, 71.51)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (134, 220, 356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 800)
[0000][PE] mean and std.dev: (192.20, 74.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1022)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203996 reads in 300.548 CPU sec, 16.894 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204052
	[0000][ M::kt_pipeline] read 1204052 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520991, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 713, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (740.18, 471.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.26, 71.47)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (329, 751, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (757.95, 591.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203970 reads in 301.774 CPU sec, 16.948 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204088
	[0000][ M::kt_pipeline] read 1204088 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520923, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 449, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2725)
[0000][PE] mean and std.dev: (586.15, 385.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.35, 71.56)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 399, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2325)
[0000][PE] mean and std.dev: (514.00, 358.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204052 reads in 300.336 CPU sec, 16.840 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204086
	[0000][ M::kt_pipeline] read 1204086 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521068, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 347, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2467)
[0000][PE] mean and std.dev: (474.91, 335.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.57, 71.45)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 710, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2109)
[0000][PE] mean and std.dev: (624.56, 254.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204088 reads in 304.363 CPU sec, 17.083 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1204192
	[0000][ M::kt_pipeline] read 1204192 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520899, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 277, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (748.31, 921.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.50, 71.50)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 313, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 694)
[0000][PE] mean and std.dev: (334.10, 128.06)
[0000][PE] low and high boundaries for proper pairs: (1, 852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204086 reads in 302.521 CPU sec, 16.980 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204102
	[0000][ M::kt_pipeline] read 1204102 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521014, 6, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 587)
[0000][PE] mean and std.dev: (359.86, 71.36)
[0000][PE] low and high boundaries for proper pairs: (41, 678)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 368, 946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2302)
[0000][PE] mean and std.dev: (542.21, 412.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2980)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204192 reads in 302.811 CPU sec, 17.123 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204040
	[0000][ M::kt_pipeline] read 1204040 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521090, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 1253, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5606)
[0000][PE] mean and std.dev: (1419.70, 1657.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (359.88, 71.50)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 888, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3949)
[0000][PE] mean and std.dev: (843.00, 599.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204102 reads in 301.245 CPU sec, 16.898 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204088
	[0000][ M::kt_pipeline] read 1204088 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521444, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 459, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (883.21, 819.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.75, 71.58)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 909, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3702)
[0000][PE] mean and std.dev: (685.91, 646.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204040 reads in 303.622 CPU sec, 17.031 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204042
	[0000][ M::kt_pipeline] read 1204042 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520874, 8, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 587)
[0000][PE] mean and std.dev: (359.78, 71.38)
[0000][PE] low and high boundaries for proper pairs: (41, 678)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (642, 901, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2166)
[0000][PE] mean and std.dev: (824.38, 387.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2674)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204088 reads in 297.435 CPU sec, 16.658 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204040
	[0000][ M::kt_pipeline] read 1204040 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521276, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 278, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4017)
[0000][PE] mean and std.dev: (746.62, 757.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 592)
[0000][PE] mean and std.dev: (359.80, 71.75)
[0000][PE] low and high boundaries for proper pairs: (34, 685)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 401, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3209)
[0000][PE] mean and std.dev: (807.75, 861.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204042 reads in 300.527 CPU sec, 16.925 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1204174
	[0000][ M::kt_pipeline] read 1204174 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521041, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 323, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5558)
[0000][PE] mean and std.dev: (1025.85, 1081.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 592)
[0000][PE] mean and std.dev: (359.78, 71.69)
[0000][PE] low and high boundaries for proper pairs: (34, 685)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (123, 319, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3318)
[0000][PE] mean and std.dev: (632.60, 693.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204040 reads in 299.661 CPU sec, 16.816 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1204202
	[0000][ M::kt_pipeline] read 1204202 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 521416, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 344, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (802.05, 920.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.52, 71.40)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (426, 709, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2766)
[0000][PE] mean and std.dev: (861.75, 716.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204174 reads in 300.883 CPU sec, 16.862 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1204154
	[0000][ M::kt_pipeline] read 1204154 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520886, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 501, 743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1697)
[0000][PE] mean and std.dev: (526.93, 358.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 592)
[0000][PE] mean and std.dev: (359.79, 71.69)
[0000][PE] low and high boundaries for proper pairs: (34, 685)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 546, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3293)
[0000][PE] mean and std.dev: (791.79, 575.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204202 reads in 302.845 CPU sec, 16.976 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204198
	[0000][ M::kt_pipeline] read 1204198 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521359, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 1271, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4593)
[0000][PE] mean and std.dev: (1218.33, 1010.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 359, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (359.90, 71.52)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 380, 992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2478)
[0000][PE] mean and std.dev: (646.73, 517.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204154 reads in 297.859 CPU sec, 16.698 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1204104
	[0000][ M::kt_pipeline] read 1204104 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520139, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 489, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2811)
[0000][PE] mean and std.dev: (637.38, 487.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.71, 71.38)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (367, 571, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3715)
[0000][PE] mean and std.dev: (746.47, 670.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4831)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204198 reads in 301.693 CPU sec, 16.926 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1204168
	[0000][ M::kt_pipeline] read 1204168 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520717, 8, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 592)
[0000][PE] mean and std.dev: (359.79, 71.75)
[0000][PE] low and high boundaries for proper pairs: (34, 685)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 1198, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5736)
[0000][PE] mean and std.dev: (1421.79, 1362.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7541)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204104 reads in 305.447 CPU sec, 17.153 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1204114
	[0000][ M::kt_pipeline] read 1204114 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520558, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 397, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2853)
[0000][PE] mean and std.dev: (669.46, 540.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.62, 71.53)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 270, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2833)
[0000][PE] mean and std.dev: (541.00, 385.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204168 reads in 305.250 CPU sec, 17.156 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1204166
	[0000][ M::kt_pipeline] read 1204166 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520767, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 592)
[0000][PE] mean and std.dev: (359.85, 71.86)
[0000][PE] low and high boundaries for proper pairs: (34, 685)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (343, 737, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4000)
[0000][PE] mean and std.dev: (1106.82, 1119.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5584)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204114 reads in 307.805 CPU sec, 17.328 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1204102
	[0000][ M::kt_pipeline] read 1204102 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520513, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 1267, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4805)
[0000][PE] mean and std.dev: (1166.30, 779.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (360.04, 71.79)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 391, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1311)
[0000][PE] mean and std.dev: (392.64, 251.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204166 reads in 309.847 CPU sec, 17.520 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1204030
	[0000][ M::kt_pipeline] read 1204030 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 520925, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 592)
[0000][PE] mean and std.dev: (359.85, 71.70)
[0000][PE] low and high boundaries for proper pairs: (34, 685)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 967, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2736)
[0000][PE] mean and std.dev: (845.54, 529.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3406)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204102 reads in 304.242 CPU sec, 17.067 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1204172
	[0000][ M::kt_pipeline] read 1204172 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520853, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 358, 516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1104)
[0000][PE] mean and std.dev: (285.80, 137.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (360.08, 71.62)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 431, 813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2009)
[0000][PE] mean and std.dev: (453.07, 349.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2607)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204030 reads in 305.431 CPU sec, 17.181 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204212
	[0000][ M::kt_pipeline] read 1204212 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521086, 1, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (359.93, 71.53)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 321, 487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 931)
[0000][PE] mean and std.dev: (366.22, 186.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1153)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204172 reads in 302.927 CPU sec, 16.986 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1204104
	[0000][ M::kt_pipeline] read 1204104 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520845, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 323, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3164)
[0000][PE] mean and std.dev: (605.25, 536.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (359.89, 71.57)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (396, 630, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4143)
[0000][PE] mean and std.dev: (927.95, 724.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204212 reads in 304.363 CPU sec, 17.092 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1204180
	[0000][ M::kt_pipeline] read 1204180 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520707, 1, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 359, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (359.88, 71.57)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 313, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2767)
[0000][PE] mean and std.dev: (542.55, 388.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3593)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204104 reads in 306.179 CPU sec, 17.199 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204128
	[0000][ M::kt_pipeline] read 1204128 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520605, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 688, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3555)
[0000][PE] mean and std.dev: (578.33, 481.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (359.99, 71.44)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204180 reads in 307.245 CPU sec, 17.337 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1204182
	[0000][ M::kt_pipeline] read 1204182 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520536, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 623, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (928.45, 930.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 587)
[0000][PE] mean and std.dev: (359.69, 71.34)
[0000][PE] low and high boundaries for proper pairs: (41, 678)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (151, 226, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 826)
[0000][PE] mean and std.dev: (267.73, 164.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204128 reads in 311.058 CPU sec, 17.517 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1204130
	[0000][ M::kt_pipeline] read 1204130 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521018, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 377, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2825)
[0000][PE] mean and std.dev: (770.50, 687.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.72, 71.62)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (376, 589, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2920)
[0000][PE] mean and std.dev: (772.82, 473.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204182 reads in 303.410 CPU sec, 16.992 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1204196
	[0000][ M::kt_pipeline] read 1204196 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520736, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 609, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1946)
[0000][PE] mean and std.dev: (424.90, 247.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.62, 71.51)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204130 reads in 308.358 CPU sec, 17.334 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204142
	[0000][ M::kt_pipeline] read 1204142 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520969, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 538, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4205)
[0000][PE] mean and std.dev: (817.68, 632.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (360.01, 71.56)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204196 reads in 305.244 CPU sec, 17.147 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204148
	[0000][ M::kt_pipeline] read 1204148 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 520482, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.53, 71.69)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 394, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2140)
[0000][PE] mean and std.dev: (552.31, 360.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2755)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204142 reads in 303.601 CPU sec, 17.025 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1204058
	[0000][ M::kt_pipeline] read 1204058 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520475, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.39, 71.80)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 940, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4357)
[0000][PE] mean and std.dev: (1203.08, 988.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5547)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204148 reads in 304.096 CPU sec, 17.030 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1204124
	[0000][ M::kt_pipeline] read 1204124 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520909, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 798, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (744.44, 508.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.24, 71.49)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (217, 246, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3277)
[0000][PE] mean and std.dev: (812.17, 1008.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204058 reads in 300.966 CPU sec, 16.857 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1204072
	[0000][ M::kt_pipeline] read 1204072 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521427, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 281, 738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1722)
[0000][PE] mean and std.dev: (385.60, 254.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.28, 71.67)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 385, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (703.00, 540.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204124 reads in 303.218 CPU sec, 17.018 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1204104
	[0000][ M::kt_pipeline] read 1204104 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521002, 1, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.72, 71.50)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (367, 397, 852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1822)
[0000][PE] mean and std.dev: (495.62, 317.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2307)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204072 reads in 308.293 CPU sec, 17.342 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1204054
	[0000][ M::kt_pipeline] read 1204054 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520966, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 273, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (668.00, 659.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.12, 71.55)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 956, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2745)
[0000][PE] mean and std.dev: (1053.57, 449.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204104 reads in 308.685 CPU sec, 17.305 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204128
	[0000][ M::kt_pipeline] read 1204128 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521392, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 447, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2776)
[0000][PE] mean and std.dev: (432.50, 329.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.02, 71.54)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (333, 903, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3774)
[0000][PE] mean and std.dev: (1037.23, 645.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204054 reads in 305.372 CPU sec, 17.129 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1204032
	[0000][ M::kt_pipeline] read 1204032 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520618, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 384, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1155)
[0000][PE] mean and std.dev: (462.46, 239.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.56, 71.60)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 417, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2556)
[0000][PE] mean and std.dev: (506.80, 334.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204128 reads in 310.092 CPU sec, 17.400 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1204170
	[0000][ M::kt_pipeline] read 1204170 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 520750, 7, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.64, 71.49)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 406, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3828)
[0000][PE] mean and std.dev: (944.58, 987.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5002)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204032 reads in 310.075 CPU sec, 17.447 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1204140
	[0000][ M::kt_pipeline] read 1204140 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521029, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (359.96, 71.63)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204170 reads in 310.849 CPU sec, 17.444 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1204120
	[0000][ M::kt_pipeline] read 1204120 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520426, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 340, 631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1527)
[0000][PE] mean and std.dev: (349.67, 193.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.67, 71.57)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 309, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3564)
[0000][PE] mean and std.dev: (796.69, 787.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204140 reads in 306.821 CPU sec, 17.216 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204114
	[0000][ M::kt_pipeline] read 1204114 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521019, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 884, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2866)
[0000][PE] mean and std.dev: (744.91, 528.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.15, 71.61)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 366, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (775.38, 828.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204120 reads in 308.277 CPU sec, 17.311 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204268
	[0000][ M::kt_pipeline] read 1204268 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521306, 2, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.95, 71.60)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 743, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3513)
[0000][PE] mean and std.dev: (759.00, 631.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4618)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204114 reads in 304.688 CPU sec, 17.151 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1204202
	[0000][ M::kt_pipeline] read 1204202 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520385, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 536, 886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2298)
[0000][PE] mean and std.dev: (628.82, 482.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.01, 71.47)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (372, 451, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2970)
[0000][PE] mean and std.dev: (759.00, 635.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204268 reads in 309.082 CPU sec, 17.317 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1204156
	[0000][ M::kt_pipeline] read 1204156 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 521131, 5, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.29, 71.42)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 480, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2006)
[0000][PE] mean and std.dev: (513.87, 376.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2579)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204202 reads in 307.105 CPU sec, 17.240 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1204082
	[0000][ M::kt_pipeline] read 1204082 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521112, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 592)
[0000][PE] mean and std.dev: (359.88, 71.76)
[0000][PE] low and high boundaries for proper pairs: (34, 685)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (329, 488, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2861)
[0000][PE] mean and std.dev: (658.33, 409.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3705)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204156 reads in 304.584 CPU sec, 17.101 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204038
	[0000][ M::kt_pipeline] read 1204038 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520582, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 384, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (710.00, 722.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.50, 71.66)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204082 reads in 308.765 CPU sec, 17.361 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1204208
	[0000][ M::kt_pipeline] read 1204208 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520985, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.92, 71.63)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204038 reads in 306.517 CPU sec, 17.196 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1204182
	[0000][ M::kt_pipeline] read 1204182 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520736, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 490, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4027)
[0000][PE] mean and std.dev: (774.50, 688.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.96, 71.57)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 449, 3017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8561)
[0000][PE] mean and std.dev: (1407.25, 1472.59)
[0000][PE] low and high boundaries for proper pairs: (1, 11333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204208 reads in 306.858 CPU sec, 17.191 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1204220
	[0000][ M::kt_pipeline] read 1204220 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520785, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.61, 71.53)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 291, 789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1875)
[0000][PE] mean and std.dev: (415.00, 271.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2418)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204182 reads in 308.815 CPU sec, 17.370 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204142
	[0000][ M::kt_pipeline] read 1204142 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521277, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 539, 858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1868)
[0000][PE] mean and std.dev: (571.57, 339.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.19, 71.65)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 293, 522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1056)
[0000][PE] mean and std.dev: (401.75, 231.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204220 reads in 302.980 CPU sec, 16.985 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204076
	[0000][ M::kt_pipeline] read 1204076 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521189, 2, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.33, 71.50)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 426, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4963)
[0000][PE] mean and std.dev: (1279.78, 1441.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7045)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204142 reads in 302.797 CPU sec, 16.954 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1204142
	[0000][ M::kt_pipeline] read 1204142 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520512, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 435, 898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1952)
[0000][PE] mean and std.dev: (501.22, 291.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.99, 71.45)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204076 reads in 309.308 CPU sec, 17.399 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1204096
	[0000][ M::kt_pipeline] read 1204096 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 521057, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 776, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6560)
[0000][PE] mean and std.dev: (1161.19, 1030.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.82, 71.31)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204142 reads in 310.407 CPU sec, 17.428 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204050
	[0000][ M::kt_pipeline] read 1204050 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521048, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.21, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204096 reads in 306.029 CPU sec, 17.221 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1204014
	[0000][ M::kt_pipeline] read 1204014 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520774, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 402, 687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1579)
[0000][PE] mean and std.dev: (440.77, 260.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.16, 71.45)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (325, 413, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2113)
[0000][PE] mean and std.dev: (638.67, 473.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204050 reads in 306.194 CPU sec, 17.191 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1204252
	[0000][ M::kt_pipeline] read 1204252 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521047, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 442, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6806)
[0000][PE] mean and std.dev: (953.36, 982.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.08, 71.37)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (367, 706, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1831)
[0000][PE] mean and std.dev: (634.83, 235.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204014 reads in 304.334 CPU sec, 17.093 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204086
	[0000][ M::kt_pipeline] read 1204086 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521034, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 709, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2788)
[0000][PE] mean and std.dev: (648.00, 336.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.04, 71.43)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (362, 605, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2636)
[0000][PE] mean and std.dev: (577.50, 347.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204252 reads in 305.128 CPU sec, 17.143 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204014
	[0000][ M::kt_pipeline] read 1204014 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520481, 4, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.85, 71.29)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (698, 1535, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4439)
[0000][PE] mean and std.dev: (1251.57, 862.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5686)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204086 reads in 305.082 CPU sec, 17.104 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1204136
	[0000][ M::kt_pipeline] read 1204136 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521173, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (702, 1103, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2529)
[0000][PE] mean and std.dev: (903.14, 539.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.06, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 339, 1133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (595.20, 427.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204014 reads in 305.380 CPU sec, 17.187 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204208
	[0000][ M::kt_pipeline] read 1204208 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520848, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 423, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2205)
[0000][PE] mean and std.dev: (598.64, 546.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.61, 71.38)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 349, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4863)
[0000][PE] mean and std.dev: (984.50, 1138.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204136 reads in 303.481 CPU sec, 16.985 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204156
	[0000][ M::kt_pipeline] read 1204156 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521062, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (694, 1066, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3343)
[0000][PE] mean and std.dev: (1081.91, 621.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.28, 71.50)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (324, 722, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (800.92, 554.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204208 reads in 305.529 CPU sec, 17.172 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1204044
	[0000][ M::kt_pipeline] read 1204044 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520598, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.55, 71.42)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 963, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4134)
[0000][PE] mean and std.dev: (893.46, 681.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5422)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204156 reads in 303.591 CPU sec, 17.032 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1204004
	[0000][ M::kt_pipeline] read 1204004 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 521214, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.51, 71.50)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (357, 880, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3804)
[0000][PE] mean and std.dev: (874.70, 674.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4953)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204044 reads in 300.941 CPU sec, 16.878 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1204220
	[0000][ M::kt_pipeline] read 1204220 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520450, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 624, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2834)
[0000][PE] mean and std.dev: (593.31, 439.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.52, 71.54)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 542, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2979)
[0000][PE] mean and std.dev: (706.00, 454.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204004 reads in 305.973 CPU sec, 17.204 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1204190
	[0000][ M::kt_pipeline] read 1204190 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520865, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 1066, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (1298.00, 1183.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 592)
[0000][PE] mean and std.dev: (359.93, 71.73)
[0000][PE] low and high boundaries for proper pairs: (34, 685)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 510, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2693)
[0000][PE] mean and std.dev: (604.54, 547.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204220 reads in 303.840 CPU sec, 17.106 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204136
	[0000][ M::kt_pipeline] read 1204136 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520516, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 419, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4857)
[0000][PE] mean and std.dev: (835.73, 790.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.66, 71.59)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 787, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5321)
[0000][PE] mean and std.dev: (783.31, 643.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204190 reads in 304.342 CPU sec, 17.065 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1203998
	[0000][ M::kt_pipeline] read 1203998 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521044, 2, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.57, 71.47)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 257, 694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1682)
[0000][PE] mean and std.dev: (383.69, 283.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2176)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204136 reads in 304.771 CPU sec, 17.158 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204186
	[0000][ M::kt_pipeline] read 1204186 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521062, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.71, 71.50)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203998 reads in 304.529 CPU sec, 17.097 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1204100
	[0000][ M::kt_pipeline] read 1204100 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520841, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 832, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (774.73, 684.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.68, 71.59)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (429, 756, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2622)
[0000][PE] mean and std.dev: (718.80, 395.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204186 reads in 307.771 CPU sec, 17.363 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1204130
	[0000][ M::kt_pipeline] read 1204130 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520721, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 461, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2857)
[0000][PE] mean and std.dev: (713.07, 664.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 592)
[0000][PE] mean and std.dev: (360.00, 71.64)
[0000][PE] low and high boundaries for proper pairs: (34, 685)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 796, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4039)
[0000][PE] mean and std.dev: (1092.95, 887.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204100 reads in 304.936 CPU sec, 17.107 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1204110
	[0000][ M::kt_pipeline] read 1204110 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520909, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 622, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4615)
[0000][PE] mean and std.dev: (1000.20, 997.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (360.01, 71.48)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 265, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1487)
[0000][PE] mean and std.dev: (311.73, 179.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204130 reads in 306.162 CPU sec, 17.144 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1204158
	[0000][ M::kt_pipeline] read 1204158 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520982, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 541, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2952)
[0000][PE] mean and std.dev: (687.54, 484.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (360.08, 71.65)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (481, 1055, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2212)
[0000][PE] mean and std.dev: (920.29, 480.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204110 reads in 310.820 CPU sec, 17.481 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1204252
	[0000][ M::kt_pipeline] read 1204252 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 521190, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (121, 315, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 913)
[0000][PE] mean and std.dev: (243.33, 116.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (360.08, 71.46)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 345, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3398)
[0000][PE] mean and std.dev: (717.50, 729.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204158 reads in 304.189 CPU sec, 17.072 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204220
	[0000][ M::kt_pipeline] read 1204220 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521184, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 639, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4871)
[0000][PE] mean and std.dev: (991.59, 978.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 587)
[0000][PE] mean and std.dev: (359.82, 71.41)
[0000][PE] low and high boundaries for proper pairs: (41, 678)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 326, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 549)
[0000][PE] mean and std.dev: (314.00, 99.02)
[0000][PE] low and high boundaries for proper pairs: (1, 710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204252 reads in 302.932 CPU sec, 17.000 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1204146
	[0000][ M::kt_pipeline] read 1204146 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521305, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (360.11, 71.62)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 894, 2408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6660)
[0000][PE] mean and std.dev: (1033.50, 915.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8786)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204220 reads in 304.662 CPU sec, 17.103 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204166
	[0000][ M::kt_pipeline] read 1204166 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520541, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 539, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (946.10, 930.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (360.02, 71.56)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 351, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2329)
[0000][PE] mean and std.dev: (515.33, 350.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3017)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204146 reads in 305.501 CPU sec, 17.164 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1204154
	[0000][ M::kt_pipeline] read 1204154 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520837, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 380, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2515)
[0000][PE] mean and std.dev: (563.38, 384.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (360.03, 71.56)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (338, 598, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (909.00, 777.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204166 reads in 307.317 CPU sec, 17.248 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1204232
	[0000][ M::kt_pipeline] read 1204232 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520694, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 747, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2693)
[0000][PE] mean and std.dev: (625.00, 418.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 592)
[0000][PE] mean and std.dev: (359.80, 71.52)
[0000][PE] low and high boundaries for proper pairs: (34, 685)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 508, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2696)
[0000][PE] mean and std.dev: (697.15, 459.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204154 reads in 307.323 CPU sec, 17.233 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1204140
	[0000][ M::kt_pipeline] read 1204140 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520550, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 996, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (812.50, 610.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (132, 587)
[0000][PE] mean and std.dev: (359.64, 71.30)
[0000][PE] low and high boundaries for proper pairs: (41, 678)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 825, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (848.71, 743.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204232 reads in 305.706 CPU sec, 17.155 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204092
	[0000][ M::kt_pipeline] read 1204092 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520255, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 1057, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5444)
[0000][PE] mean and std.dev: (1061.09, 888.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 359, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (359.92, 71.57)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 571, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2426)
[0000][PE] mean and std.dev: (718.74, 591.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204140 reads in 305.863 CPU sec, 17.147 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204166
	[0000][ M::kt_pipeline] read 1204166 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520267, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 855, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2783)
[0000][PE] mean and std.dev: (772.00, 485.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 359, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (359.93, 71.44)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (352, 634, 3815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10741)
[0000][PE] mean and std.dev: (1850.73, 2337.48)
[0000][PE] low and high boundaries for proper pairs: (1, 14204)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204092 reads in 307.930 CPU sec, 17.289 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1204126
	[0000][ M::kt_pipeline] read 1204126 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520922, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 288, 750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1810)
[0000][PE] mean and std.dev: (423.67, 314.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 592)
[0000][PE] mean and std.dev: (359.86, 71.63)
[0000][PE] low and high boundaries for proper pairs: (34, 685)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 757, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3919)
[0000][PE] mean and std.dev: (829.77, 708.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204166 reads in 303.709 CPU sec, 17.091 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204190
	[0000][ M::kt_pipeline] read 1204190 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520085, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 245, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1176)
[0000][PE] mean and std.dev: (305.69, 186.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.79, 71.60)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 511, 1011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2365)
[0000][PE] mean and std.dev: (581.50, 423.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204126 reads in 306.191 CPU sec, 17.154 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1204168
	[0000][ M::kt_pipeline] read 1204168 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520580, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 836, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4559)
[0000][PE] mean and std.dev: (881.80, 799.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.66, 71.32)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 310, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3091)
[0000][PE] mean and std.dev: (760.75, 935.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204190 reads in 307.974 CPU sec, 17.325 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1204142
	[0000][ M::kt_pipeline] read 1204142 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520681, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 272, 513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1217)
[0000][PE] mean and std.dev: (304.42, 161.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.61, 71.50)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (362, 692, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5642)
[0000][PE] mean and std.dev: (1092.86, 874.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204168 reads in 305.702 CPU sec, 17.181 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204150
	[0000][ M::kt_pipeline] read 1204150 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520855, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 285, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1388)
[0000][PE] mean and std.dev: (389.07, 280.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 592)
[0000][PE] mean and std.dev: (359.86, 71.73)
[0000][PE] low and high boundaries for proper pairs: (34, 685)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (416, 578, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2774)
[0000][PE] mean and std.dev: (871.64, 679.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204142 reads in 306.539 CPU sec, 17.195 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1204128
	[0000][ M::kt_pipeline] read 1204128 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520468, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (110, 226, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 761)
[0000][PE] mean and std.dev: (166.75, 87.68)
[0000][PE] low and high boundaries for proper pairs: (1, 978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (359.79, 71.59)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 376, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2387)
[0000][PE] mean and std.dev: (548.92, 476.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204150 reads in 307.686 CPU sec, 17.229 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1204088
	[0000][ M::kt_pipeline] read 1204088 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520983, 3, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (314, 360, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 590)
[0000][PE] mean and std.dev: (360.22, 71.47)
[0000][PE] low and high boundaries for proper pairs: (38, 682)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 484, 881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2095)
[0000][PE] mean and std.dev: (570.90, 335.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2702)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204128 reads in 315.330 CPU sec, 17.939 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1204060
	[0000][ M::kt_pipeline] read 1204060 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520993, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 584, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (688.31, 612.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.55, 71.41)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 1179, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4665)
[0000][PE] mean and std.dev: (1138.00, 1106.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204088 reads in 306.686 CPU sec, 17.225 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1204162
	[0000][ M::kt_pipeline] read 1204162 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521357, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 858, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3684)
[0000][PE] mean and std.dev: (912.77, 784.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.55, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 515, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2243)
[0000][PE] mean and std.dev: (648.44, 418.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204060 reads in 307.016 CPU sec, 17.225 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204140
	[0000][ M::kt_pipeline] read 1204140 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520689, 2, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.94, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 691, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2835)
[0000][PE] mean and std.dev: (768.89, 572.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3684)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204162 reads in 310.405 CPU sec, 17.501 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1204142
	[0000][ M::kt_pipeline] read 1204142 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 520987, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.80, 71.63)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 300, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1873)
[0000][PE] mean and std.dev: (378.33, 266.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2433)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204140 reads in 305.076 CPU sec, 17.188 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1204238
	[0000][ M::kt_pipeline] read 1204238 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520810, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.09, 71.65)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (313, 838, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2257)
[0000][PE] mean and std.dev: (842.10, 597.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3233)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204142 reads in 310.096 CPU sec, 17.383 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1204080
	[0000][ M::kt_pipeline] read 1204080 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520799, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.99, 71.49)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 767, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4180)
[0000][PE] mean and std.dev: (925.00, 766.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5479)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204238 reads in 311.146 CPU sec, 17.451 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1204022
	[0000][ M::kt_pipeline] read 1204022 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 521700, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 1568, 2731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7573)
[0000][PE] mean and std.dev: (1551.06, 1336.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.95, 71.66)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204080 reads in 307.451 CPU sec, 17.248 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204100
	[0000][ M::kt_pipeline] read 1204100 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520603, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.30, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 1012, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5450)
[0000][PE] mean and std.dev: (1078.36, 843.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7180)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204022 reads in 311.654 CPU sec, 17.453 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204262
	[0000][ M::kt_pipeline] read 1204262 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521281, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 338, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3810)
[0000][PE] mean and std.dev: (919.90, 1052.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.69, 71.67)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (177, 241, 1016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2694)
[0000][PE] mean and std.dev: (567.50, 535.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204100 reads in 307.974 CPU sec, 17.320 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1204186
	[0000][ M::kt_pipeline] read 1204186 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 520870, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.52, 71.51)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (163, 339, 1059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2851)
[0000][PE] mean and std.dev: (568.83, 567.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3747)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204262 reads in 309.472 CPU sec, 17.470 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1204138
	[0000][ M::kt_pipeline] read 1204138 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520913, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 311, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 642)
[0000][PE] mean and std.dev: (284.00, 70.18)
[0000][PE] low and high boundaries for proper pairs: (1, 777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.38, 71.54)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (164, 247, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 743)
[0000][PE] mean and std.dev: (217.60, 62.78)
[0000][PE] low and high boundaries for proper pairs: (1, 936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204186 reads in 310.546 CPU sec, 17.411 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204088
	[0000][ M::kt_pipeline] read 1204088 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521043, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 573, 911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2187)
[0000][PE] mean and std.dev: (588.85, 345.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.85, 71.34)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 430, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (665.45, 624.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204138 reads in 308.796 CPU sec, 17.352 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1204076
	[0000][ M::kt_pipeline] read 1204076 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520782, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 273, 293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 533)
[0000][PE] mean and std.dev: (210.22, 67.99)
[0000][PE] low and high boundaries for proper pairs: (1, 653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.73, 71.44)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 351, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (539.29, 464.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204088 reads in 315.018 CPU sec, 17.752 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1204136
	[0000][ M::kt_pipeline] read 1204136 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520312, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 391, 886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2228)
[0000][PE] mean and std.dev: (480.11, 324.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.15, 71.54)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (389, 829, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2717)
[0000][PE] mean and std.dev: (798.08, 535.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204076 reads in 310.336 CPU sec, 17.458 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1204070
	[0000][ M::kt_pipeline] read 1204070 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521154, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 305, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4568)
[0000][PE] mean and std.dev: (882.77, 972.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.67, 71.54)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (424, 776, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6256)
[0000][PE] mean and std.dev: (1044.89, 847.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204136 reads in 313.909 CPU sec, 17.614 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204150
	[0000][ M::kt_pipeline] read 1204150 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520980, 1, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.20, 71.62)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 703, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2989)
[0000][PE] mean and std.dev: (773.07, 717.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3887)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204070 reads in 307.656 CPU sec, 17.251 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204102
	[0000][ M::kt_pipeline] read 1204102 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520596, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 206, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3202)
[0000][PE] mean and std.dev: (530.92, 626.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.70, 71.55)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 786, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2795)
[0000][PE] mean and std.dev: (697.31, 481.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204150 reads in 309.274 CPU sec, 17.353 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1204164
	[0000][ M::kt_pipeline] read 1204164 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520771, 2, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.40, 71.56)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204102 reads in 307.633 CPU sec, 17.288 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204118
	[0000][ M::kt_pipeline] read 1204118 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 521431, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.48, 71.41)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 1239, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6045)
[0000][PE] mean and std.dev: (1468.17, 860.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7843)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204164 reads in 305.251 CPU sec, 17.118 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1204174
	[0000][ M::kt_pipeline] read 1204174 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520730, 6, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.06, 71.66)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 334, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2209)
[0000][PE] mean and std.dev: (566.31, 358.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2847)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204118 reads in 307.603 CPU sec, 17.258 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1204132
	[0000][ M::kt_pipeline] read 1204132 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520970, 8, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.64, 71.27)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 369, 805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1807)
[0000][PE] mean and std.dev: (488.09, 264.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2308)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204174 reads in 314.105 CPU sec, 17.601 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204152
	[0000][ M::kt_pipeline] read 1204152 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520545, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 1387, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3719)
[0000][PE] mean and std.dev: (1113.67, 635.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.43, 71.24)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 811, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3661)
[0000][PE] mean and std.dev: (893.94, 757.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204132 reads in 319.413 CPU sec, 17.988 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1204226
	[0000][ M::kt_pipeline] read 1204226 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520863, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 861, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2303)
[0000][PE] mean and std.dev: (776.78, 581.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (311, 357, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 587)
[0000][PE] mean and std.dev: (357.57, 71.27)
[0000][PE] low and high boundaries for proper pairs: (35, 679)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 422, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3064)
[0000][PE] mean and std.dev: (674.17, 555.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204152 reads in 311.835 CPU sec, 17.509 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1204032
	[0000][ M::kt_pipeline] read 1204032 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521139, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 254, 306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (211.38, 63.16)
[0000][PE] low and high boundaries for proper pairs: (1, 741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.68, 71.35)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (352, 1048, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (918.73, 631.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204226 reads in 306.166 CPU sec, 17.145 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1204038
	[0000][ M::kt_pipeline] read 1204038 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 521164, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 746, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3112)
[0000][PE] mean and std.dev: (620.43, 499.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.78, 71.14)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 797, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (969.81, 799.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204032 reads in 304.033 CPU sec, 17.027 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1204314
	[0000][ M::kt_pipeline] read 1204314 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521206, 1, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (130, 585)
[0000][PE] mean and std.dev: (357.86, 71.08)
[0000][PE] low and high boundaries for proper pairs: (39, 676)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (384, 840, 900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1932)
[0000][PE] mean and std.dev: (655.54, 317.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2448)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204038 reads in 305.260 CPU sec, 17.265 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1204032
	[0000][ M::kt_pipeline] read 1204032 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521257, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 307, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 695)
[0000][PE] mean and std.dev: (274.15, 81.31)
[0000][PE] low and high boundaries for proper pairs: (1, 867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.67, 71.43)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 377, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2410)
[0000][PE] mean and std.dev: (505.33, 393.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204314 reads in 308.933 CPU sec, 17.409 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204088
	[0000][ M::kt_pipeline] read 1204088 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521202, 7, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.53, 71.25)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 800, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (752.73, 581.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4393)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204032 reads in 303.855 CPU sec, 17.037 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1204196
	[0000][ M::kt_pipeline] read 1204196 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 521173, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 342, 777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1949)
[0000][PE] mean and std.dev: (527.79, 508.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.42, 71.37)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 299, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 728)
[0000][PE] mean and std.dev: (281.75, 75.02)
[0000][PE] low and high boundaries for proper pairs: (1, 885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204088 reads in 308.879 CPU sec, 17.348 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1204096
	[0000][ M::kt_pipeline] read 1204096 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520754, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 907, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2949)
[0000][PE] mean and std.dev: (696.62, 554.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.37, 71.24)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 728, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3149)
[0000][PE] mean and std.dev: (849.42, 555.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204196 reads in 305.450 CPU sec, 17.139 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204098
	[0000][ M::kt_pipeline] read 1204098 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520773, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 404, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2325)
[0000][PE] mean and std.dev: (548.67, 394.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.40, 71.40)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (87, 108, 167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 327)
[0000][PE] mean and std.dev: (109.75, 30.11)
[0000][PE] low and high boundaries for proper pairs: (1, 407)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204096 reads in 307.253 CPU sec, 17.245 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1204142
	[0000][ M::kt_pipeline] read 1204142 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520820, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 291, 744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1870)
[0000][PE] mean and std.dev: (488.00, 419.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.65, 71.43)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 338, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2451)
[0000][PE] mean and std.dev: (499.83, 333.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204098 reads in 304.085 CPU sec, 17.074 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1204210
	[0000][ M::kt_pipeline] read 1204210 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521092, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.56, 71.36)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 567, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3192)
[0000][PE] mean and std.dev: (890.91, 817.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204142 reads in 306.779 CPU sec, 17.193 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204286
	[0000][ M::kt_pipeline] read 1204286 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520694, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 365, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3307)
[0000][PE] mean and std.dev: (589.46, 462.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.97, 71.45)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 385, 941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2367)
[0000][PE] mean and std.dev: (548.58, 398.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204210 reads in 306.115 CPU sec, 17.225 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204094
	[0000][ M::kt_pipeline] read 1204094 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521296, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.69, 71.40)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204286 reads in 303.618 CPU sec, 17.013 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1204308
	[0000][ M::kt_pipeline] read 1204308 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520723, 9, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 591)
[0000][PE] mean and std.dev: (358.79, 71.59)
[0000][PE] low and high boundaries for proper pairs: (33, 684)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204094 reads in 304.532 CPU sec, 17.110 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204154
	[0000][ M::kt_pipeline] read 1204154 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520715, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 473, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1381)
[0000][PE] mean and std.dev: (566.20, 313.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.94, 71.55)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (153, 440, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3348)
[0000][PE] mean and std.dev: (439.33, 421.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4413)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204308 reads in 306.275 CPU sec, 17.247 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1204152
	[0000][ M::kt_pipeline] read 1204152 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520819, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 324, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4009)
[0000][PE] mean and std.dev: (690.30, 781.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.06, 71.55)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 610, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2461)
[0000][PE] mean and std.dev: (622.82, 488.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204154 reads in 306.371 CPU sec, 17.205 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204224
	[0000][ M::kt_pipeline] read 1204224 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520852, 2, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.08, 71.43)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204152 reads in 305.697 CPU sec, 17.174 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1204178
	[0000][ M::kt_pipeline] read 1204178 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521062, 1, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.91, 71.50)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 312, 643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1397)
[0000][PE] mean and std.dev: (431.41, 312.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1774)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204224 reads in 304.237 CPU sec, 17.069 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204040
	[0000][ M::kt_pipeline] read 1204040 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 520836, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.01, 71.52)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 963, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (795.93, 533.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4540)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204178 reads in 306.325 CPU sec, 17.193 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1204100
	[0000][ M::kt_pipeline] read 1204100 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521139, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 642, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (524.08, 406.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.13, 71.43)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 345, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (444.67, 293.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204040 reads in 303.893 CPU sec, 17.024 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1204358
	[0000][ M::kt_pipeline] read 1204358 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520546, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 311, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1863)
[0000][PE] mean and std.dev: (481.13, 454.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.56, 71.47)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (458, 662, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1781)
[0000][PE] mean and std.dev: (600.40, 277.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204100 reads in 304.019 CPU sec, 17.091 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204034
	[0000][ M::kt_pipeline] read 1204034 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520944, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.81, 71.36)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 247, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 976)
[0000][PE] mean and std.dev: (326.80, 218.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204358 reads in 305.172 CPU sec, 17.151 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000143, nseq: 1204234
	[0000][ M::kt_pipeline] read 1204234 sequences (180000143 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520695, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 678, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2792)
[0000][PE] mean and std.dev: (675.27, 574.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.61, 71.31)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 657, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (916.62, 750.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204034 reads in 304.525 CPU sec, 17.106 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1204338
	[0000][ M::kt_pipeline] read 1204338 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520338, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 163, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 866)
[0000][PE] mean and std.dev: (175.92, 75.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.65, 71.32)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 697, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3967)
[0000][PE] mean and std.dev: (754.67, 613.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204234 reads in 302.669 CPU sec, 17.052 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1204212
	[0000][ M::kt_pipeline] read 1204212 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 521554, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (644, 885, 3221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8375)
[0000][PE] mean and std.dev: (1868.92, 2214.71)
[0000][PE] low and high boundaries for proper pairs: (1, 10952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.78, 71.45)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 348, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2176)
[0000][PE] mean and std.dev: (522.50, 396.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204338 reads in 304.111 CPU sec, 17.079 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1204052
	[0000][ M::kt_pipeline] read 1204052 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520780, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 431, 857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1979)
[0000][PE] mean and std.dev: (459.15, 301.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.41, 71.35)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (143, 276, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 890)
[0000][PE] mean and std.dev: (224.67, 93.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204212 reads in 305.494 CPU sec, 17.115 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204078
	[0000][ M::kt_pipeline] read 1204078 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521019, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 287, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7255)
[0000][PE] mean and std.dev: (1036.92, 1334.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.51, 71.24)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 380, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3467)
[0000][PE] mean and std.dev: (806.22, 863.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204052 reads in 309.730 CPU sec, 17.447 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204124
	[0000][ M::kt_pipeline] read 1204124 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520986, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 1720, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5682)
[0000][PE] mean and std.dev: (1042.80, 841.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.64, 71.38)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 307, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2453)
[0000][PE] mean and std.dev: (609.76, 493.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204078 reads in 304.488 CPU sec, 17.079 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1204116
	[0000][ M::kt_pipeline] read 1204116 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521263, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 478, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2826)
[0000][PE] mean and std.dev: (636.50, 448.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.63, 71.35)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (483, 710, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4596)
[0000][PE] mean and std.dev: (1096.64, 865.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204124 reads in 305.139 CPU sec, 17.106 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1204244
	[0000][ M::kt_pipeline] read 1204244 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520897, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 401, 434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 880)
[0000][PE] mean and std.dev: (289.25, 103.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.43, 71.31)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 484, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2433)
[0000][PE] mean and std.dev: (615.27, 465.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204116 reads in 306.569 CPU sec, 17.206 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1204182
	[0000][ M::kt_pipeline] read 1204182 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520821, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 648, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2118)
[0000][PE] mean and std.dev: (729.00, 556.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.28, 71.27)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204244 reads in 307.391 CPU sec, 17.295 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1204186
	[0000][ M::kt_pipeline] read 1204186 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521026, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 255, 779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1943)
[0000][PE] mean and std.dev: (452.40, 399.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.64, 71.40)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 346, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2096)
[0000][PE] mean and std.dev: (540.38, 365.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204182 reads in 307.178 CPU sec, 17.219 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204122
	[0000][ M::kt_pipeline] read 1204122 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520725, 4, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.55, 71.36)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204186 reads in 307.145 CPU sec, 17.227 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204192
	[0000][ M::kt_pipeline] read 1204192 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520650, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 329, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2341)
[0000][PE] mean and std.dev: (500.64, 361.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.96, 71.43)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 339, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3979)
[0000][PE] mean and std.dev: (812.75, 755.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204122 reads in 306.866 CPU sec, 17.244 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1204066
	[0000][ M::kt_pipeline] read 1204066 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 521391, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 1060, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (1060.75, 932.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.50, 71.37)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (160, 747, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (822.85, 663.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204192 reads in 306.791 CPU sec, 17.220 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1204102
	[0000][ M::kt_pipeline] read 1204102 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 521143, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.72, 71.24)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 650, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3245)
[0000][PE] mean and std.dev: (892.82, 914.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4549)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204066 reads in 302.896 CPU sec, 17.010 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1204182
	[0000][ M::kt_pipeline] read 1204182 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 521111, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.63, 71.15)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 487, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2714)
[0000][PE] mean and std.dev: (710.62, 587.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3540)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204102 reads in 306.862 CPU sec, 17.206 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1204210
	[0000][ M::kt_pipeline] read 1204210 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520820, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (479, 638, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1670)
[0000][PE] mean and std.dev: (682.17, 403.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.59, 71.32)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 601, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3229)
[0000][PE] mean and std.dev: (784.42, 715.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4202)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204182 reads in 306.987 CPU sec, 17.228 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1204112
	[0000][ M::kt_pipeline] read 1204112 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520690, 1, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.66, 71.38)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 271, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 628)
[0000][PE] mean and std.dev: (238.83, 83.64)
[0000][PE] low and high boundaries for proper pairs: (1, 758)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204210 reads in 312.008 CPU sec, 17.479 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1204166
	[0000][ M::kt_pipeline] read 1204166 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521081, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.45, 71.24)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204112 reads in 311.604 CPU sec, 17.494 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1204166
	[0000][ M::kt_pipeline] read 1204166 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520849, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 302, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2853)
[0000][PE] mean and std.dev: (620.07, 489.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.29, 71.47)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (407, 889, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (836.45, 469.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204166 reads in 309.898 CPU sec, 17.378 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204076
	[0000][ M::kt_pipeline] read 1204076 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 519887, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 677, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2699)
[0000][PE] mean and std.dev: (769.75, 570.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.36, 71.40)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (436, 952, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2923)
[0000][PE] mean and std.dev: (811.73, 551.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204166 reads in 314.389 CPU sec, 17.653 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204060
	[0000][ M::kt_pipeline] read 1204060 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 520753, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.60, 71.43)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204076 reads in 308.267 CPU sec, 17.373 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1204214
	[0000][ M::kt_pipeline] read 1204214 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 520667, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (359.02, 71.48)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 289, 736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1830)
[0000][PE] mean and std.dev: (325.00, 218.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2377)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204060 reads in 311.587 CPU sec, 17.650 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1204128
	[0000][ M::kt_pipeline] read 1204128 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 521704, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 941, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (834.60, 584.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 359, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 589)
[0000][PE] mean and std.dev: (358.81, 71.40)
[0000][PE] low and high boundaries for proper pairs: (37, 681)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 846, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (771.75, 598.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204214 reads in 308.244 CPU sec, 17.279 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1204172
	[0000][ M::kt_pipeline] read 1204172 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 520869, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (457, 603, 676)
[0000][PE] low and high boundaries for computing mean and std.dev: (19, 1114)
[0000][PE] mean and std.dev: (460.00, 217.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (313, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 586)
[0000][PE] mean and std.dev: (358.71, 71.26)
[0000][PE] low and high boundaries for proper pairs: (40, 677)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 394, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (556.81, 445.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204128 reads in 311.621 CPU sec, 17.445 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1204210
	[0000][ M::kt_pipeline] read 1204210 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520950, 3, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.22, 71.37)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (356, 867, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5288)
[0000][PE] mean and std.dev: (890.13, 654.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6932)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204172 reads in 312.349 CPU sec, 17.545 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204188
	[0000][ M::kt_pipeline] read 1204188 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 520638, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.13, 71.39)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 363, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (648.50, 657.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5712)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204210 reads in 317.296 CPU sec, 17.829 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1204220
	[0000][ M::kt_pipeline] read 1204220 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 521023, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.41, 71.33)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 432, 778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1840)
[0000][PE] mean and std.dev: (446.31, 280.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2371)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204188 reads in 314.031 CPU sec, 17.587 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1204194
	[0000][ M::kt_pipeline] read 1204194 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 520889, 5, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.49, 71.34)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 335, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (659.94, 651.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3579)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204220 reads in 312.274 CPU sec, 17.543 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1204152
	[0000][ M::kt_pipeline] read 1204152 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 521517, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 224, 2669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7669)
[0000][PE] mean and std.dev: (840.92, 1086.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.60, 71.48)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 311, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2925)
[0000][PE] mean and std.dev: (530.22, 447.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204194 reads in 308.749 CPU sec, 17.387 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1204230
	[0000][ M::kt_pipeline] read 1204230 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 521032, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 434, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2469)
[0000][PE] mean and std.dev: (455.00, 348.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.94, 71.46)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 1081, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (788.37, 579.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204152 reads in 305.524 CPU sec, 17.128 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204186
	[0000][ M::kt_pipeline] read 1204186 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520904, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 232, 353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 785)
[0000][PE] mean and std.dev: (202.50, 78.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (357.99, 71.58)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 354, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3094)
[0000][PE] mean and std.dev: (625.15, 465.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204230 reads in 302.218 CPU sec, 17.014 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 133028125, nseq: 889954
	[0000][ M::kt_pipeline] read 889954 sequences (133028125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 520886, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 396, 618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1392)
[0000][PE] mean and std.dev: (387.40, 200.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.20, 71.53)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 844, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1909)
[0000][PE] mean and std.dev: (816.11, 285.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204186 reads in 303.572 CPU sec, 17.057 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 889954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 385018, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 435, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2345)
[0000][PE] mean and std.dev: (493.11, 321.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (312, 358, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 588)
[0000][PE] mean and std.dev: (358.19, 71.48)
[0000][PE] low and high boundaries for proper pairs: (36, 680)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 889954 reads in 224.191 CPU sec, 12.667 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.335462 MHz
Runtime profile:

	Time taken for main_mem function: 11833.82 sec

	IO times (sec) :
	Reading IO time (reads) avg: 798.81, (798.81, 798.81)
	Writing IO time (SAM) avg: 1147.50, (1147.50, 1147.50)
	Reading IO time (Reference Genome) avg: 7.45, (7.45, 7.45)
	Index read time avg: 12.51, (12.51, 12.51)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 11812.91
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 11795.02, (11795.02, 11795.02)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 4220.15, (4220.15, 4220.15)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 7468.66, (7468.66, 7468.66)
		SMEM compute avg: 2921.79, (2923.45, 2920.20)
		SAL compute avg: 1075.56, (1076.55, 1074.62)
				MEM_SA avg: 541.19, (541.70, 540.45)

		BSW time, avg: 2495.94, (2497.14, 2494.84)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
