Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1203028
	[0000][ M::kt_pipeline] read 1203028 sequences (180000073 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527048, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 1206, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6388)
[0000][PE] mean and std.dev: (1231.17, 1144.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (319.97, 60.28)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 293, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (491.00, 432.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1203126
	[0000][ M::kt_pipeline] read 1203126 sequences (180000073 bp)...
	[0000][ M::mem_process_seqs] Processed 1203028 reads in 334.821 CPU sec, 222.345 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1202986
	[0000][ M::kt_pipeline] read 1202986 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 528104, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 662, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (964.52, 918.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.10, 60.22)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 925, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3241)
[0000][PE] mean and std.dev: (981.11, 631.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203126 reads in 319.383 CPU sec, 42.347 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1203106
	[0000][ M::kt_pipeline] read 1203106 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527623, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 356, 2905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8023)
[0000][PE] mean and std.dev: (1579.88, 1954.52)
[0000][PE] low and high boundaries for proper pairs: (1, 10582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.08, 60.34)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1083, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (1017.17, 529.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202986 reads in 310.477 CPU sec, 49.341 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1203128
	[0000][ M::kt_pipeline] read 1203128 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527618, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 260, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4749)
[0000][PE] mean and std.dev: (612.25, 661.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.23, 60.33)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 958, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2197)
[0000][PE] mean and std.dev: (827.47, 337.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203106 reads in 305.975 CPU sec, 65.754 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1202988
	[0000][ M::kt_pipeline] read 1202988 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527879, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 408, 987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2607)
[0000][PE] mean and std.dev: (523.06, 473.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.59, 60.31)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1217, 2480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5858)
[0000][PE] mean and std.dev: (1591.75, 1221.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203128 reads in 293.975 CPU sec, 45.364 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1202994
	[0000][ M::kt_pipeline] read 1202994 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527440, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 776, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5100)
[0000][PE] mean and std.dev: (1048.85, 901.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.68, 60.54)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1015, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2574)
[0000][PE] mean and std.dev: (1047.10, 512.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202988 reads in 300.309 CPU sec, 52.876 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1203052
	[0000][ M::kt_pipeline] read 1203052 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 527657, 1, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 1137, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5081)
[0000][PE] mean and std.dev: (1108.45, 814.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.49, 60.32)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 957, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3824)
[0000][PE] mean and std.dev: (1043.54, 812.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202994 reads in 294.468 CPU sec, 35.783 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1203076
	[0000][ M::kt_pipeline] read 1203076 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527829, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (664, 1248, 2890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7342)
[0000][PE] mean and std.dev: (1441.33, 1084.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.56, 60.45)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (327, 1155, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5262)
[0000][PE] mean and std.dev: (1187.22, 781.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203052 reads in 305.017 CPU sec, 58.930 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1203044
	[0000][ M::kt_pipeline] read 1203044 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527625, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 286, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4527)
[0000][PE] mean and std.dev: (855.75, 1099.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.41, 60.41)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 1028, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5462)
[0000][PE] mean and std.dev: (1255.20, 1125.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203076 reads in 305.343 CPU sec, 62.394 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1203150
	[0000][ M::kt_pipeline] read 1203150 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 527695, 2, 23)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.73, 60.40)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (573, 1115, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (1140.52, 942.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4912)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203044 reads in 294.295 CPU sec, 44.584 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1203084
	[0000][ M::kt_pipeline] read 1203084 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527445, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 966, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3122)
[0000][PE] mean and std.dev: (830.40, 673.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.60, 60.39)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (388, 1239, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5842)
[0000][PE] mean and std.dev: (1397.58, 1224.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203150 reads in 302.428 CPU sec, 46.820 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1203154
	[0000][ M::kt_pipeline] read 1203154 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 527772, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (692, 1059, 2860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7196)
[0000][PE] mean and std.dev: (1638.90, 1357.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.72, 60.28)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (299, 1208, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5600)
[0000][PE] mean and std.dev: (1378.05, 1228.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203084 reads in 290.889 CPU sec, 33.073 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1203026
	[0000][ M::kt_pipeline] read 1203026 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527930, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 1720, 3645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10493)
[0000][PE] mean and std.dev: (1719.00, 1610.24)
[0000][PE] low and high boundaries for proper pairs: (1, 13917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.84, 60.50)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 797, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3774)
[0000][PE] mean and std.dev: (984.29, 720.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203154 reads in 296.545 CPU sec, 45.164 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1203120
	[0000][ M::kt_pipeline] read 1203120 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527345, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 255, 839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2177)
[0000][PE] mean and std.dev: (516.00, 560.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.87, 60.50)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 844, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4292)
[0000][PE] mean and std.dev: (961.58, 805.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203026 reads in 300.157 CPU sec, 41.016 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1203032
	[0000][ M::kt_pipeline] read 1203032 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527427, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 398, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (761.47, 692.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.83, 60.62)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 786, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4569)
[0000][PE] mean and std.dev: (956.00, 759.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203120 reads in 295.689 CPU sec, 43.348 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1202970
	[0000][ M::kt_pipeline] read 1202970 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527498, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 903, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6277)
[0000][PE] mean and std.dev: (1225.33, 1189.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.70, 60.42)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (353, 563, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2897)
[0000][PE] mean and std.dev: (794.11, 561.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203032 reads in 291.222 CPU sec, 43.084 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1203004
	[0000][ M::kt_pipeline] read 1203004 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527271, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (578, 974, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5381)
[0000][PE] mean and std.dev: (1422.37, 1211.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.76, 60.43)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (443, 808, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4319)
[0000][PE] mean and std.dev: (1048.00, 878.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202970 reads in 296.820 CPU sec, 53.112 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1203036
	[0000][ M::kt_pipeline] read 1203036 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527484, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 808, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2299)
[0000][PE] mean and std.dev: (651.62, 362.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.93, 60.47)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (333, 743, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6831)
[0000][PE] mean and std.dev: (1362.44, 1230.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203004 reads in 297.457 CPU sec, 43.615 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1203018
	[0000][ M::kt_pipeline] read 1203018 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527168, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 703, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4800)
[0000][PE] mean and std.dev: (961.56, 842.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.97, 60.42)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (373, 805, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (1100.97, 956.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203036 reads in 298.738 CPU sec, 52.968 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1203040
	[0000][ M::kt_pipeline] read 1203040 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527828, 1, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 789, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (839.88, 696.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.80, 60.38)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (313, 813, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (1165.52, 1180.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203018 reads in 291.903 CPU sec, 45.566 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1203192
	[0000][ M::kt_pipeline] read 1203192 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527713, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 1004, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4777)
[0000][PE] mean and std.dev: (1107.85, 787.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.78, 60.35)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1112, 2801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6897)
[0000][PE] mean and std.dev: (1592.90, 1400.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203040 reads in 291.106 CPU sec, 39.666 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1203122
	[0000][ M::kt_pipeline] read 1203122 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527056, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 245, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 627)
[0000][PE] mean and std.dev: (238.65, 64.94)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.86, 60.61)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 650, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2782)
[0000][PE] mean and std.dev: (708.04, 551.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3607)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203192 reads in 299.974 CPU sec, 50.302 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1203168
	[0000][ M::kt_pipeline] read 1203168 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 527461, 4, 28)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.87, 60.43)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (416, 1047, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2894)
[0000][PE] mean and std.dev: (976.04, 694.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3756)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203122 reads in 298.586 CPU sec, 54.933 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1203088
	[0000][ M::kt_pipeline] read 1203088 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527172, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 738, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6322)
[0000][PE] mean and std.dev: (1122.33, 1302.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.77, 60.66)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (588, 1183, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4620)
[0000][PE] mean and std.dev: (1220.96, 799.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203168 reads in 296.468 CPU sec, 41.497 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1203042
	[0000][ M::kt_pipeline] read 1203042 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527523, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 520, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5667)
[0000][PE] mean and std.dev: (856.87, 869.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.71, 60.31)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 763, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2855)
[0000][PE] mean and std.dev: (696.43, 447.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203088 reads in 300.205 CPU sec, 53.114 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1202996
	[0000][ M::kt_pipeline] read 1202996 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527794, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 1011, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3865)
[0000][PE] mean and std.dev: (873.83, 585.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.80, 60.56)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1264, 3178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8056)
[0000][PE] mean and std.dev: (1585.16, 1143.40)
[0000][PE] low and high boundaries for proper pairs: (1, 10495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203042 reads in 287.806 CPU sec, 49.203 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1202994
	[0000][ M::kt_pipeline] read 1202994 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527617, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 308, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2616)
[0000][PE] mean and std.dev: (459.87, 536.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.63, 60.42)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (177, 385, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5892)
[0000][PE] mean and std.dev: (753.10, 888.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202996 reads in 292.808 CPU sec, 53.010 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1203160
	[0000][ M::kt_pipeline] read 1203160 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527510, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 886, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4145)
[0000][PE] mean and std.dev: (1058.81, 916.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.53, 60.23)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (299, 889, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3245)
[0000][PE] mean and std.dev: (875.56, 602.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202994 reads in 292.404 CPU sec, 52.209 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1203008
	[0000][ M::kt_pipeline] read 1203008 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 527655, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 695, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4198)
[0000][PE] mean and std.dev: (954.97, 986.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.57, 60.52)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 1052, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4754)
[0000][PE] mean and std.dev: (973.10, 893.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203160 reads in 290.941 CPU sec, 54.277 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1203050
	[0000][ M::kt_pipeline] read 1203050 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 528072, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 848, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5211)
[0000][PE] mean and std.dev: (981.20, 972.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.63, 60.41)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (416, 1123, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4454)
[0000][PE] mean and std.dev: (992.04, 627.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203008 reads in 294.210 CPU sec, 55.581 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1203058
	[0000][ M::kt_pipeline] read 1203058 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527173, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 767, 3266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9172)
[0000][PE] mean and std.dev: (2151.63, 2751.49)
[0000][PE] low and high boundaries for proper pairs: (1, 13158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.84, 60.42)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 1046, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (1063.29, 689.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203050 reads in 294.672 CPU sec, 51.381 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1203042
	[0000][ M::kt_pipeline] read 1203042 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 526751, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 290, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2257)
[0000][PE] mean and std.dev: (480.30, 383.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.87, 60.46)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 521, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2016)
[0000][PE] mean and std.dev: (614.25, 426.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203058 reads in 288.988 CPU sec, 40.558 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1203088
	[0000][ M::kt_pipeline] read 1203088 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527694, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 1037, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5659)
[0000][PE] mean and std.dev: (1130.43, 865.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.13, 60.46)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 417, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2901)
[0000][PE] mean and std.dev: (664.67, 620.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203042 reads in 288.373 CPU sec, 48.008 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1203026
	[0000][ M::kt_pipeline] read 1203026 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527152, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (575, 1369, 2319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5807)
[0000][PE] mean and std.dev: (1364.67, 1111.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.42, 60.45)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 989, 2611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7287)
[0000][PE] mean and std.dev: (1658.45, 1870.90)
[0000][PE] low and high boundaries for proper pairs: (1, 9625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203088 reads in 289.861 CPU sec, 49.227 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1203094
	[0000][ M::kt_pipeline] read 1203094 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527895, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 663, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (752.61, 676.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.50, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 279, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (866.38, 936.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203026 reads in 292.841 CPU sec, 54.516 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1202976
	[0000][ M::kt_pipeline] read 1202976 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527623, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 669, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3749)
[0000][PE] mean and std.dev: (889.29, 722.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.81, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (588, 765, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2733)
[0000][PE] mean and std.dev: (824.81, 409.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203094 reads in 285.781 CPU sec, 38.754 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1203000
	[0000][ M::kt_pipeline] read 1203000 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 527703, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 289, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2049)
[0000][PE] mean and std.dev: (454.33, 411.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.94, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 1148, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4370)
[0000][PE] mean and std.dev: (1297.20, 830.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202976 reads in 291.508 CPU sec, 45.670 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1203018
	[0000][ M::kt_pipeline] read 1203018 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 527127, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 502, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4612)
[0000][PE] mean and std.dev: (888.03, 925.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.82, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1180, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2303)
[0000][PE] mean and std.dev: (960.00, 452.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203000 reads in 283.462 CPU sec, 36.954 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1202906
	[0000][ M::kt_pipeline] read 1202906 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527488, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 423, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3156)
[0000][PE] mean and std.dev: (643.57, 556.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.83, 60.56)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (427, 1235, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3508)
[0000][PE] mean and std.dev: (1056.00, 756.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203018 reads in 301.390 CPU sec, 49.004 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1203084
	[0000][ M::kt_pipeline] read 1203084 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 528108, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 844, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5187)
[0000][PE] mean and std.dev: (1096.10, 1016.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.99, 60.40)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 577, 976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2386)
[0000][PE] mean and std.dev: (626.47, 444.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202906 reads in 298.151 CPU sec, 47.068 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1203040
	[0000][ M::kt_pipeline] read 1203040 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 527753, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 987, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (1045.09, 905.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.13, 60.64)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 421, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2662)
[0000][PE] mean and std.dev: (690.78, 624.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203084 reads in 298.796 CPU sec, 49.802 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1203080
	[0000][ M::kt_pipeline] read 1203080 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527808, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (796, 904, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2446)
[0000][PE] mean and std.dev: (952.00, 573.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.98, 60.58)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (388, 621, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5740)
[0000][PE] mean and std.dev: (1160.60, 1163.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203040 reads in 294.793 CPU sec, 47.527 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1202904
	[0000][ M::kt_pipeline] read 1202904 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527542, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 1032, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3807)
[0000][PE] mean and std.dev: (892.68, 739.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.10, 60.51)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (432, 816, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (934.57, 640.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203080 reads in 295.345 CPU sec, 40.609 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1203150
	[0000][ M::kt_pipeline] read 1203150 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527333, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 677, 2474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7150)
[0000][PE] mean and std.dev: (1692.00, 2161.43)
[0000][PE] low and high boundaries for proper pairs: (1, 10338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.86, 60.84)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 979, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (1027.25, 507.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202904 reads in 292.917 CPU sec, 57.263 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1203136
	[0000][ M::kt_pipeline] read 1203136 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527754, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 1032, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (918.50, 577.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.00, 60.69)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (576, 1237, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (1093.23, 687.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203150 reads in 299.803 CPU sec, 51.419 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1202996
	[0000][ M::kt_pipeline] read 1202996 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527513, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 930, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4473)
[0000][PE] mean and std.dev: (814.63, 663.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.78, 60.63)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (542, 1183, 2415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6161)
[0000][PE] mean and std.dev: (1428.50, 1230.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203136 reads in 290.661 CPU sec, 38.294 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1203038
	[0000][ M::kt_pipeline] read 1203038 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527412, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 858, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6225)
[0000][PE] mean and std.dev: (1135.41, 1096.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.78, 60.50)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (446, 1023, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (1011.14, 606.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202996 reads in 283.241 CPU sec, 33.806 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1202904
	[0000][ M::kt_pipeline] read 1202904 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527968, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 621, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2978)
[0000][PE] mean and std.dev: (648.50, 664.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.91, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 991, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4823)
[0000][PE] mean and std.dev: (1129.68, 913.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203038 reads in 295.144 CPU sec, 36.430 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1203022
	[0000][ M::kt_pipeline] read 1203022 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 527728, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 303, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5120)
[0000][PE] mean and std.dev: (876.64, 892.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.99, 60.69)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (390, 1071, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4071)
[0000][PE] mean and std.dev: (1070.53, 890.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202904 reads in 295.566 CPU sec, 49.509 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1203054
	[0000][ M::kt_pipeline] read 1203054 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 527657, 9, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 339, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4189)
[0000][PE] mean and std.dev: (717.88, 689.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.89, 60.72)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 777, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6068)
[0000][PE] mean and std.dev: (1232.93, 1412.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203022 reads in 295.202 CPU sec, 49.886 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1203102
	[0000][ M::kt_pipeline] read 1203102 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527590, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 860, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3729)
[0000][PE] mean and std.dev: (840.50, 720.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.93, 60.66)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 1516, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6227)
[0000][PE] mean and std.dev: (1560.85, 1119.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203054 reads in 292.664 CPU sec, 43.565 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1202990
	[0000][ M::kt_pipeline] read 1202990 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527459, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 1041, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4287)
[0000][PE] mean and std.dev: (1083.70, 781.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.52, 60.63)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 1500, 2544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6156)
[0000][PE] mean and std.dev: (1452.81, 972.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203102 reads in 289.991 CPU sec, 41.922 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1203110
	[0000][ M::kt_pipeline] read 1203110 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527830, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 1339, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5219)
[0000][PE] mean and std.dev: (1100.72, 818.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.89, 60.74)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1254, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3528)
[0000][PE] mean and std.dev: (1177.05, 650.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202990 reads in 293.722 CPU sec, 47.003 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1203034
	[0000][ M::kt_pipeline] read 1203034 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527733, 3, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 988, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5790)
[0000][PE] mean and std.dev: (1071.40, 873.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.58, 60.64)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (327, 721, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3444)
[0000][PE] mean and std.dev: (1011.33, 858.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203110 reads in 298.343 CPU sec, 56.453 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1203010
	[0000][ M::kt_pipeline] read 1203010 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527550, 1, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 498, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3968)
[0000][PE] mean and std.dev: (870.31, 753.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.83, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 878, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4809)
[0000][PE] mean and std.dev: (973.10, 888.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203034 reads in 290.134 CPU sec, 46.360 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1202976
	[0000][ M::kt_pipeline] read 1202976 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 528219, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 697, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2495)
[0000][PE] mean and std.dev: (672.11, 504.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.60, 60.66)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (316, 977, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3883)
[0000][PE] mean and std.dev: (804.94, 506.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203010 reads in 292.059 CPU sec, 40.796 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1202994
	[0000][ M::kt_pipeline] read 1202994 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527893, 0, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 1107, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5818)
[0000][PE] mean and std.dev: (1368.95, 1293.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.68, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (163, 405, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5632)
[0000][PE] mean and std.dev: (958.33, 1109.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202976 reads in 295.077 CPU sec, 51.531 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1203036
	[0000][ M::kt_pipeline] read 1203036 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527881, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 312, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5878)
[0000][PE] mean and std.dev: (893.35, 943.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.65, 60.72)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 676, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (772.60, 651.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202994 reads in 295.620 CPU sec, 50.114 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1203062
	[0000][ M::kt_pipeline] read 1203062 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527876, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 1224, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4281)
[0000][PE] mean and std.dev: (1062.70, 799.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.65, 60.78)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 891, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4228)
[0000][PE] mean and std.dev: (1039.05, 998.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203036 reads in 293.670 CPU sec, 47.843 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1203050
	[0000][ M::kt_pipeline] read 1203050 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527759, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 897, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4612)
[0000][PE] mean and std.dev: (1047.84, 879.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.39, 60.46)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 422, 946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2362)
[0000][PE] mean and std.dev: (518.24, 350.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203062 reads in 284.562 CPU sec, 40.511 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1203020
	[0000][ M::kt_pipeline] read 1203020 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527608, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (135, 357, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4218)
[0000][PE] mean and std.dev: (698.79, 696.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.60, 60.75)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1310, 2380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5592)
[0000][PE] mean and std.dev: (1372.14, 885.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203050 reads in 296.679 CPU sec, 60.576 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1203052
	[0000][ M::kt_pipeline] read 1203052 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527826, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 1131, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5747)
[0000][PE] mean and std.dev: (1301.79, 1215.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.66, 60.75)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (348, 1003, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4308)
[0000][PE] mean and std.dev: (1100.14, 820.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203020 reads in 297.886 CPU sec, 54.547 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1203032
	[0000][ M::kt_pipeline] read 1203032 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527196, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 996, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5444)
[0000][PE] mean and std.dev: (1214.33, 1030.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.59, 60.61)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 920, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3421)
[0000][PE] mean and std.dev: (985.21, 781.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203052 reads in 293.256 CPU sec, 42.459 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1203020
	[0000][ M::kt_pipeline] read 1203020 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527413, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 721, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1796)
[0000][PE] mean and std.dev: (732.88, 463.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.59, 60.60)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (479, 937, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3740)
[0000][PE] mean and std.dev: (892.39, 569.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203032 reads in 290.614 CPU sec, 43.453 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1202976
	[0000][ M::kt_pipeline] read 1202976 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 527402, 7, 27)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.60, 60.72)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1241, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (1347.59, 972.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5340)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203020 reads in 295.919 CPU sec, 44.329 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1202982
	[0000][ M::kt_pipeline] read 1202982 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527585, 0, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 439, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (549.41, 514.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.37, 60.49)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 833, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4333)
[0000][PE] mean and std.dev: (1089.46, 1061.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202976 reads in 299.032 CPU sec, 46.485 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1202870
	[0000][ M::kt_pipeline] read 1202870 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527470, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 472, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4759)
[0000][PE] mean and std.dev: (868.82, 745.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.38, 60.50)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 305, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (774.80, 728.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202982 reads in 283.920 CPU sec, 34.879 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1202910
	[0000][ M::kt_pipeline] read 1202910 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527363, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (578, 863, 2729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7031)
[0000][PE] mean and std.dev: (1425.14, 1093.98)
[0000][PE] low and high boundaries for proper pairs: (1, 9182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.37, 60.72)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 725, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3748)
[0000][PE] mean and std.dev: (1024.84, 1036.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202870 reads in 298.101 CPU sec, 47.995 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1202894
	[0000][ M::kt_pipeline] read 1202894 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527583, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 510, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3802)
[0000][PE] mean and std.dev: (750.27, 629.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.28, 60.46)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1049, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3596)
[0000][PE] mean and std.dev: (971.15, 640.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202910 reads in 295.901 CPU sec, 60.544 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1203016
	[0000][ M::kt_pipeline] read 1203016 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527985, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 856, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5349)
[0000][PE] mean and std.dev: (1123.42, 1141.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.20, 60.38)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 794, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5108)
[0000][PE] mean and std.dev: (1086.00, 941.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202894 reads in 294.144 CPU sec, 45.055 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1202904
	[0000][ M::kt_pipeline] read 1202904 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 527662, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 883, 2687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7619)
[0000][PE] mean and std.dev: (1344.71, 1363.95)
[0000][PE] low and high boundaries for proper pairs: (1, 10085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.37, 60.57)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (388, 908, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5074)
[0000][PE] mean and std.dev: (1137.86, 909.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203016 reads in 301.535 CPU sec, 62.405 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1203018
	[0000][ M::kt_pipeline] read 1203018 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527730, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 711, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5172)
[0000][PE] mean and std.dev: (1037.58, 811.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.29, 60.53)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 1121, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (939.17, 584.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202904 reads in 288.915 CPU sec, 51.836 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1202988
	[0000][ M::kt_pipeline] read 1202988 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527673, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 908, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5234)
[0000][PE] mean and std.dev: (1058.60, 1085.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.06, 60.47)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (462, 938, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2634)
[0000][PE] mean and std.dev: (973.46, 632.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203018 reads in 298.436 CPU sec, 58.235 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1202902
	[0000][ M::kt_pipeline] read 1202902 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527912, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 2325, 4008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11342)
[0000][PE] mean and std.dev: (2373.15, 1848.11)
[0000][PE] low and high boundaries for proper pairs: (1, 15009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.18, 60.44)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (419, 730, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (910.35, 628.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202988 reads in 291.981 CPU sec, 43.361 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1203066
	[0000][ M::kt_pipeline] read 1203066 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527344, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (731, 1135, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4256)
[0000][PE] mean and std.dev: (1409.85, 973.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.11, 60.54)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 1105, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (989.29, 711.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202902 reads in 298.584 CPU sec, 59.775 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1203060
	[0000][ M::kt_pipeline] read 1203060 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527226, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 504, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2630)
[0000][PE] mean and std.dev: (587.65, 444.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.14, 60.55)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 871, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (917.12, 663.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203066 reads in 305.654 CPU sec, 60.014 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1203056
	[0000][ M::kt_pipeline] read 1203056 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 528122, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 511, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4414)
[0000][PE] mean and std.dev: (1032.35, 1172.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.07, 60.50)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 863, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3736)
[0000][PE] mean and std.dev: (827.91, 717.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203060 reads in 288.485 CPU sec, 40.592 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1202980
	[0000][ M::kt_pipeline] read 1202980 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527934, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 774, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (857.95, 729.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.96, 60.55)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (537, 913, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3216)
[0000][PE] mean and std.dev: (906.08, 574.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203056 reads in 289.493 CPU sec, 46.456 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1202998
	[0000][ M::kt_pipeline] read 1202998 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527397, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 287, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2493)
[0000][PE] mean and std.dev: (617.67, 552.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.02, 60.56)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 355, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3282)
[0000][PE] mean and std.dev: (437.93, 335.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202980 reads in 299.118 CPU sec, 36.058 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1203130
	[0000][ M::kt_pipeline] read 1203130 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527578, 0, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 382, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3217)
[0000][PE] mean and std.dev: (790.57, 792.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.86, 60.66)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (614, 1181, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4424)
[0000][PE] mean and std.dev: (1181.32, 890.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202998 reads in 296.013 CPU sec, 53.750 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1202942
	[0000][ M::kt_pipeline] read 1202942 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 528025, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.06, 60.47)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (363, 850, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4170)
[0000][PE] mean and std.dev: (991.40, 664.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5439)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203130 reads in 292.289 CPU sec, 51.763 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1202906
	[0000][ M::kt_pipeline] read 1202906 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 526977, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (756, 1182, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2973)
[0000][PE] mean and std.dev: (1147.00, 747.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.10, 60.51)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 907, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (987.46, 853.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202942 reads in 292.273 CPU sec, 42.050 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1202912
	[0000][ M::kt_pipeline] read 1202912 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527644, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 700, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2736)
[0000][PE] mean and std.dev: (710.94, 483.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.22, 60.41)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 568, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2721)
[0000][PE] mean and std.dev: (551.95, 406.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202906 reads in 294.781 CPU sec, 67.296 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1202906
	[0000][ M::kt_pipeline] read 1202906 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527095, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 1157, 2294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6426)
[0000][PE] mean and std.dev: (1419.90, 1310.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.29, 60.43)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 584, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4424)
[0000][PE] mean and std.dev: (958.16, 821.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202912 reads in 290.434 CPU sec, 37.775 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1202988
	[0000][ M::kt_pipeline] read 1202988 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527305, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 331, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2193)
[0000][PE] mean and std.dev: (536.22, 491.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.39, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (439, 1124, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4618)
[0000][PE] mean and std.dev: (1140.17, 855.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202906 reads in 296.626 CPU sec, 49.960 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1202754
	[0000][ M::kt_pipeline] read 1202754 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527444, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 306, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3869)
[0000][PE] mean and std.dev: (572.35, 576.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.08, 60.40)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 1272, 2967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8199)
[0000][PE] mean and std.dev: (1274.67, 1211.37)
[0000][PE] low and high boundaries for proper pairs: (1, 10815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202988 reads in 293.814 CPU sec, 56.245 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1203062
	[0000][ M::kt_pipeline] read 1203062 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527372, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 584, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (707.45, 641.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.60, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 832, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4093)
[0000][PE] mean and std.dev: (872.81, 569.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202754 reads in 297.519 CPU sec, 53.297 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1202924
	[0000][ M::kt_pipeline] read 1202924 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527058, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 388, 1046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2586)
[0000][PE] mean and std.dev: (525.69, 385.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.27, 60.61)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1380, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4350)
[0000][PE] mean and std.dev: (1340.88, 786.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203062 reads in 297.730 CPU sec, 44.806 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1202992
	[0000][ M::kt_pipeline] read 1202992 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527267, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 289, 807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1987)
[0000][PE] mean and std.dev: (379.42, 311.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.63, 60.55)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 952, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2469)
[0000][PE] mean and std.dev: (857.42, 490.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202924 reads in 302.978 CPU sec, 45.260 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1203050
	[0000][ M::kt_pipeline] read 1203050 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527664, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 920, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2291)
[0000][PE] mean and std.dev: (888.36, 627.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.32, 60.51)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (616, 758, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2860)
[0000][PE] mean and std.dev: (971.22, 772.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202992 reads in 295.367 CPU sec, 46.514 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1203012
	[0000][ M::kt_pipeline] read 1203012 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527215, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 282, 746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1846)
[0000][PE] mean and std.dev: (454.31, 434.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.50, 60.53)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 924, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3112)
[0000][PE] mean and std.dev: (798.17, 522.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203050 reads in 302.002 CPU sec, 44.111 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1202992
	[0000][ M::kt_pipeline] read 1202992 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527717, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 1060, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (860.20, 567.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.54, 60.59)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (301, 674, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5002)
[0000][PE] mean and std.dev: (1119.30, 1068.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203012 reads in 293.172 CPU sec, 58.121 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1202794
	[0000][ M::kt_pipeline] read 1202794 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 528137, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 842, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2774)
[0000][PE] mean and std.dev: (790.95, 616.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.50, 60.52)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 734, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3280)
[0000][PE] mean and std.dev: (841.71, 620.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202992 reads in 286.275 CPU sec, 45.748 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1203000
	[0000][ M::kt_pipeline] read 1203000 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527780, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 559, 2617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7387)
[0000][PE] mean and std.dev: (1082.52, 1104.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.59, 60.57)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 690, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (713.55, 461.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202794 reads in 290.280 CPU sec, 50.113 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1202998
	[0000][ M::kt_pipeline] read 1202998 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527095, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (620, 1407, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5858)
[0000][PE] mean and std.dev: (1566.73, 1390.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.58, 60.60)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (327, 783, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2919)
[0000][PE] mean and std.dev: (785.37, 460.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203000 reads in 292.554 CPU sec, 57.457 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1203020
	[0000][ M::kt_pipeline] read 1203020 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527292, 2, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1089, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3731)
[0000][PE] mean and std.dev: (1129.20, 895.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.67, 60.58)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (531, 1340, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4554)
[0000][PE] mean and std.dev: (1393.47, 1024.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202998 reads in 304.177 CPU sec, 49.113 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1203032
	[0000][ M::kt_pipeline] read 1203032 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527474, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 516, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3767)
[0000][PE] mean and std.dev: (754.00, 675.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.62, 60.63)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 817, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (927.00, 609.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203020 reads in 295.735 CPU sec, 49.248 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1203096
	[0000][ M::kt_pipeline] read 1203096 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 527633, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 816, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3177)
[0000][PE] mean and std.dev: (839.37, 618.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.75, 60.57)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (660, 1072, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2961)
[0000][PE] mean and std.dev: (1038.15, 614.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203032 reads in 298.874 CPU sec, 47.761 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1203054
	[0000][ M::kt_pipeline] read 1203054 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527514, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 720, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4062)
[0000][PE] mean and std.dev: (995.29, 986.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.64, 60.67)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 358, 818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1900)
[0000][PE] mean and std.dev: (497.15, 413.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203096 reads in 298.695 CPU sec, 54.453 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1202984
	[0000][ M::kt_pipeline] read 1202984 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527684, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 440, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3314)
[0000][PE] mean and std.dev: (589.33, 478.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.81, 60.63)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1293, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4537)
[0000][PE] mean and std.dev: (1450.00, 954.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5792)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203054 reads in 293.861 CPU sec, 46.431 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1202950
	[0000][ M::kt_pipeline] read 1202950 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527379, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 303, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1307)
[0000][PE] mean and std.dev: (313.33, 169.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.71, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (333, 1342, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4428)
[0000][PE] mean and std.dev: (1351.33, 1076.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202984 reads in 290.299 CPU sec, 44.601 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1203014
	[0000][ M::kt_pipeline] read 1203014 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527614, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 1470, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6169)
[0000][PE] mean and std.dev: (1348.11, 925.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.43, 60.39)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1076, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2796)
[0000][PE] mean and std.dev: (935.67, 413.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202950 reads in 292.964 CPU sec, 39.359 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1202998
	[0000][ M::kt_pipeline] read 1202998 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527349, 0, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 379, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4009)
[0000][PE] mean and std.dev: (1013.39, 1131.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.74, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 1429, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6387)
[0000][PE] mean and std.dev: (1520.96, 1324.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203014 reads in 303.462 CPU sec, 51.618 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1202966
	[0000][ M::kt_pipeline] read 1202966 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 527598, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 498, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (735.17, 735.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.86, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1029, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (1116.86, 518.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202998 reads in 295.935 CPU sec, 61.116 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1203082
	[0000][ M::kt_pipeline] read 1203082 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527758, 0, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 762, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3555)
[0000][PE] mean and std.dev: (774.72, 704.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.80, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 872, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3887)
[0000][PE] mean and std.dev: (928.91, 773.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202966 reads in 301.304 CPU sec, 60.443 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1202948
	[0000][ M::kt_pipeline] read 1202948 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527699, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 345, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (798.82, 986.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.78, 60.79)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (698, 946, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2459)
[0000][PE] mean and std.dev: (878.36, 447.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203082 reads in 294.758 CPU sec, 47.688 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1202954
	[0000][ M::kt_pipeline] read 1202954 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527093, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 611, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2689)
[0000][PE] mean and std.dev: (684.80, 542.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.74, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 1039, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (1170.68, 833.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202948 reads in 298.843 CPU sec, 49.484 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1202960
	[0000][ M::kt_pipeline] read 1202960 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527790, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 428, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3085)
[0000][PE] mean and std.dev: (453.53, 337.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.48, 60.65)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 1051, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5675)
[0000][PE] mean and std.dev: (1210.76, 980.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202954 reads in 296.268 CPU sec, 53.780 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1202862
	[0000][ M::kt_pipeline] read 1202862 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527519, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 549, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4579)
[0000][PE] mean and std.dev: (1112.41, 1118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.71, 60.65)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (436, 1055, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4660)
[0000][PE] mean and std.dev: (1066.05, 743.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202960 reads in 296.540 CPU sec, 44.677 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1203074
	[0000][ M::kt_pipeline] read 1203074 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527757, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 318, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3432)
[0000][PE] mean and std.dev: (628.38, 723.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.61, 60.62)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 768, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2863)
[0000][PE] mean and std.dev: (817.26, 590.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202862 reads in 294.814 CPU sec, 53.393 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1203142
	[0000][ M::kt_pipeline] read 1203142 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527259, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 311, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2399)
[0000][PE] mean and std.dev: (523.59, 414.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.47, 60.47)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 851, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4407)
[0000][PE] mean and std.dev: (1031.52, 908.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203074 reads in 290.845 CPU sec, 53.906 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1203010
	[0000][ M::kt_pipeline] read 1203010 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 526943, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 280, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2193)
[0000][PE] mean and std.dev: (535.35, 499.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.45, 60.42)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 893, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (1132.96, 1006.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203142 reads in 309.260 CPU sec, 61.444 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1202900
	[0000][ M::kt_pipeline] read 1202900 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527654, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 286, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2996)
[0000][PE] mean and std.dev: (553.40, 616.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.67, 60.59)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 647, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2670)
[0000][PE] mean and std.dev: (655.73, 450.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203010 reads in 299.134 CPU sec, 60.815 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1202926
	[0000][ M::kt_pipeline] read 1202926 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 528088, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 273, 1016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2622)
[0000][PE] mean and std.dev: (639.25, 630.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.87, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (582, 950, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3834)
[0000][PE] mean and std.dev: (1220.45, 995.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202900 reads in 291.932 CPU sec, 47.372 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1202918
	[0000][ M::kt_pipeline] read 1202918 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 528465, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 496, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1179)
[0000][PE] mean and std.dev: (369.27, 167.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.10, 60.66)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (590, 1111, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4724)
[0000][PE] mean and std.dev: (1325.32, 1002.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202926 reads in 288.250 CPU sec, 45.471 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1202928
	[0000][ M::kt_pipeline] read 1202928 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527526, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 487, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3332)
[0000][PE] mean and std.dev: (670.55, 566.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.07, 60.63)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1170, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3873)
[0000][PE] mean and std.dev: (1178.07, 823.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202918 reads in 299.725 CPU sec, 49.722 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1202940
	[0000][ M::kt_pipeline] read 1202940 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527880, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 243, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6187)
[0000][PE] mean and std.dev: (1121.53, 1625.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.03, 60.55)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 1000, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3641)
[0000][PE] mean and std.dev: (804.83, 585.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4792)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202928 reads in 298.209 CPU sec, 55.705 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1202944
	[0000][ M::kt_pipeline] read 1202944 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527774, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 811, 2315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6545)
[0000][PE] mean and std.dev: (1217.08, 1398.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.09, 60.71)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 1133, 2769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6967)
[0000][PE] mean and std.dev: (1486.44, 1191.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202940 reads in 295.392 CPU sec, 49.177 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1203062
	[0000][ M::kt_pipeline] read 1203062 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527407, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 384, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3896)
[0000][PE] mean and std.dev: (734.47, 857.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.07, 60.81)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (350, 975, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4964)
[0000][PE] mean and std.dev: (1225.50, 1107.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202944 reads in 296.417 CPU sec, 54.543 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1203024
	[0000][ M::kt_pipeline] read 1203024 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527569, 2, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 713, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4564)
[0000][PE] mean and std.dev: (1002.37, 964.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.09, 60.56)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (418, 990, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (1205.48, 948.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6026)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203062 reads in 294.094 CPU sec, 54.883 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1203044
	[0000][ M::kt_pipeline] read 1203044 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527100, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 526, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3147)
[0000][PE] mean and std.dev: (871.57, 748.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.29, 60.75)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (389, 818, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (994.40, 697.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203024 reads in 288.685 CPU sec, 40.227 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1203036
	[0000][ M::kt_pipeline] read 1203036 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527940, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 828, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3167)
[0000][PE] mean and std.dev: (921.50, 764.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.23, 60.67)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 1067, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (968.12, 543.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203044 reads in 293.138 CPU sec, 52.355 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1202926
	[0000][ M::kt_pipeline] read 1202926 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 527243, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 1005, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6459)
[0000][PE] mean and std.dev: (1454.40, 1201.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.25, 60.65)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 988, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2821)
[0000][PE] mean and std.dev: (693.12, 517.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203036 reads in 284.198 CPU sec, 50.243 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1203024
	[0000][ M::kt_pipeline] read 1203024 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527872, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 572, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2932)
[0000][PE] mean and std.dev: (593.44, 509.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.06, 60.66)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (467, 952, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3809)
[0000][PE] mean and std.dev: (1023.05, 769.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202926 reads in 289.572 CPU sec, 48.119 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1203048
	[0000][ M::kt_pipeline] read 1203048 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 528120, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 725, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2651)
[0000][PE] mean and std.dev: (841.71, 617.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.09, 60.69)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (361, 937, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4819)
[0000][PE] mean and std.dev: (1162.70, 999.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203024 reads in 294.384 CPU sec, 43.849 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1202902
	[0000][ M::kt_pipeline] read 1202902 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 527610, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 846, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4671)
[0000][PE] mean and std.dev: (930.45, 817.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.12, 60.54)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 751, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (794.61, 575.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203048 reads in 298.470 CPU sec, 54.398 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1202998
	[0000][ M::kt_pipeline] read 1202998 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527648, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 841, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3647)
[0000][PE] mean and std.dev: (811.53, 571.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.16, 60.50)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 969, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3917)
[0000][PE] mean and std.dev: (1022.55, 734.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202902 reads in 295.666 CPU sec, 53.966 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1203164
	[0000][ M::kt_pipeline] read 1203164 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527125, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1344, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5052)
[0000][PE] mean and std.dev: (1242.17, 1154.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.09, 60.56)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 570, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5843)
[0000][PE] mean and std.dev: (1034.06, 944.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202998 reads in 307.160 CPU sec, 51.132 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1202968
	[0000][ M::kt_pipeline] read 1202968 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 528069, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (114, 206, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 882)
[0000][PE] mean and std.dev: (177.18, 86.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.10, 60.66)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 902, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5188)
[0000][PE] mean and std.dev: (889.43, 747.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203164 reads in 300.685 CPU sec, 52.699 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1203088
	[0000][ M::kt_pipeline] read 1203088 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527461, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 465, 816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1994)
[0000][PE] mean and std.dev: (431.13, 289.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.18, 60.60)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1588, 2529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6039)
[0000][PE] mean and std.dev: (1622.53, 1098.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202968 reads in 298.177 CPU sec, 47.464 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1203036
	[0000][ M::kt_pipeline] read 1203036 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527617, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 1423, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5678)
[0000][PE] mean and std.dev: (1445.70, 1200.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.06, 60.60)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (368, 984, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5018)
[0000][PE] mean and std.dev: (1185.00, 1048.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203088 reads in 294.214 CPU sec, 49.605 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1202990
	[0000][ M::kt_pipeline] read 1202990 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527632, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 1180, 2623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7065)
[0000][PE] mean and std.dev: (1459.33, 1211.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.09, 60.56)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1193, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4096)
[0000][PE] mean and std.dev: (1351.12, 821.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203036 reads in 296.590 CPU sec, 54.082 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1202954
	[0000][ M::kt_pipeline] read 1202954 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527379, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 837, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4469)
[0000][PE] mean and std.dev: (886.42, 697.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.94, 60.70)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 761, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2957)
[0000][PE] mean and std.dev: (706.04, 466.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202990 reads in 290.337 CPU sec, 41.540 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1203024
	[0000][ M::kt_pipeline] read 1203024 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527863, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (497, 690, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4271)
[0000][PE] mean and std.dev: (1055.50, 906.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.74, 60.53)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (386, 970, 1878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4862)
[0000][PE] mean and std.dev: (1226.67, 1048.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202954 reads in 294.774 CPU sec, 43.221 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1203016
	[0000][ M::kt_pipeline] read 1203016 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527446, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 344, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6266)
[0000][PE] mean and std.dev: (961.53, 1093.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.97, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 805, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4829)
[0000][PE] mean and std.dev: (861.13, 656.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203024 reads in 297.180 CPU sec, 48.923 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1203080
	[0000][ M::kt_pipeline] read 1203080 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 526940, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 448, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6373)
[0000][PE] mean and std.dev: (1203.77, 1340.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.91, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 806, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4133)
[0000][PE] mean and std.dev: (970.93, 701.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203016 reads in 305.454 CPU sec, 54.396 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1203046
	[0000][ M::kt_pipeline] read 1203046 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527471, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (701, 798, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2630)
[0000][PE] mean and std.dev: (827.17, 501.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.91, 60.68)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (551, 1349, 2935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7703)
[0000][PE] mean and std.dev: (2007.04, 1951.66)
[0000][PE] low and high boundaries for proper pairs: (1, 10087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203080 reads in 303.465 CPU sec, 60.216 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1203016
	[0000][ M::kt_pipeline] read 1203016 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527396, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 593, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2387)
[0000][PE] mean and std.dev: (716.06, 622.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.73, 60.60)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1558, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4280)
[0000][PE] mean and std.dev: (1488.77, 1033.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203046 reads in 301.343 CPU sec, 51.922 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1202978
	[0000][ M::kt_pipeline] read 1202978 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527695, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 360, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2091)
[0000][PE] mean and std.dev: (552.29, 432.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.92, 60.53)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 1189, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (1135.23, 700.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203016 reads in 289.767 CPU sec, 43.412 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1203038
	[0000][ M::kt_pipeline] read 1203038 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 528090, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 947, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4492)
[0000][PE] mean and std.dev: (1024.23, 905.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.10, 60.69)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (584, 858, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2825)
[0000][PE] mean and std.dev: (851.47, 598.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202978 reads in 294.663 CPU sec, 51.849 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1203088
	[0000][ M::kt_pipeline] read 1203088 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 527280, 0, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.83, 60.50)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 327, 888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2130)
[0000][PE] mean and std.dev: (470.00, 336.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2751)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203038 reads in 297.142 CPU sec, 44.504 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1203004
	[0000][ M::kt_pipeline] read 1203004 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527691, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 312, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (627.07, 623.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.99, 60.75)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 817, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5514)
[0000][PE] mean and std.dev: (1191.68, 1104.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203088 reads in 291.563 CPU sec, 43.466 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1202874
	[0000][ M::kt_pipeline] read 1202874 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527386, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 829, 2856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8034)
[0000][PE] mean and std.dev: (1405.65, 1546.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.84, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 691, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4386)
[0000][PE] mean and std.dev: (850.31, 926.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203004 reads in 296.709 CPU sec, 51.794 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1202960
	[0000][ M::kt_pipeline] read 1202960 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527439, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 628, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2273)
[0000][PE] mean and std.dev: (525.20, 421.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.96, 60.74)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 705, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3063)
[0000][PE] mean and std.dev: (646.96, 518.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202874 reads in 301.281 CPU sec, 51.641 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1203082
	[0000][ M::kt_pipeline] read 1203082 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527214, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 423, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2863)
[0000][PE] mean and std.dev: (545.55, 530.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.00, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 964, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5934)
[0000][PE] mean and std.dev: (1350.50, 1284.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202960 reads in 293.054 CPU sec, 47.339 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1203044
	[0000][ M::kt_pipeline] read 1203044 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527705, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (622, 995, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3784)
[0000][PE] mean and std.dev: (1066.00, 833.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.63, 60.74)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (714, 1188, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2919)
[0000][PE] mean and std.dev: (1077.27, 531.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203082 reads in 299.976 CPU sec, 48.100 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1202950
	[0000][ M::kt_pipeline] read 1202950 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527738, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 230, 743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1899)
[0000][PE] mean and std.dev: (351.45, 385.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.79, 60.74)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (558, 1009, 2429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6171)
[0000][PE] mean and std.dev: (1368.62, 1104.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203044 reads in 296.520 CPU sec, 46.520 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1202966
	[0000][ M::kt_pipeline] read 1202966 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527795, 0, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 652, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5558)
[0000][PE] mean and std.dev: (1157.07, 1155.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.81, 60.65)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (626, 1109, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3587)
[0000][PE] mean and std.dev: (1100.55, 768.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202950 reads in 298.305 CPU sec, 41.992 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1203012
	[0000][ M::kt_pipeline] read 1203012 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527742, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 276, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2753)
[0000][PE] mean and std.dev: (562.13, 477.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.94, 60.55)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 1288, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5055)
[0000][PE] mean and std.dev: (1355.62, 1132.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6620)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202966 reads in 288.821 CPU sec, 43.702 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000137, nseq: 1203062
	[0000][ M::kt_pipeline] read 1203062 sequences (180000137 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527185, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 773, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (935.90, 881.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.87, 60.82)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 1329, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4592)
[0000][PE] mean and std.dev: (1063.26, 722.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203012 reads in 289.186 CPU sec, 41.797 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1203082
	[0000][ M::kt_pipeline] read 1203082 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527344, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 305, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2514)
[0000][PE] mean and std.dev: (577.60, 623.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.73, 60.67)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 1028, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4623)
[0000][PE] mean and std.dev: (1233.97, 1049.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203062 reads in 300.640 CPU sec, 49.311 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1203002
	[0000][ M::kt_pipeline] read 1203002 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527735, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 303, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3332)
[0000][PE] mean and std.dev: (692.90, 681.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.75, 60.72)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (591, 955, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2868)
[0000][PE] mean and std.dev: (848.16, 417.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3627)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203082 reads in 286.959 CPU sec, 41.783 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1203174
	[0000][ M::kt_pipeline] read 1203174 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 527281, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 860, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4094)
[0000][PE] mean and std.dev: (1019.75, 779.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.65, 60.80)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 820, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (929.57, 751.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203002 reads in 289.618 CPU sec, 50.316 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1203068
	[0000][ M::kt_pipeline] read 1203068 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527933, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 435, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2644)
[0000][PE] mean and std.dev: (437.00, 326.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.72, 60.83)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 273, 440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 920)
[0000][PE] mean and std.dev: (243.69, 91.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203174 reads in 289.488 CPU sec, 41.248 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1203130
	[0000][ M::kt_pipeline] read 1203130 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527879, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 796, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6614)
[0000][PE] mean and std.dev: (1289.96, 1262.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.69, 60.79)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (569, 1006, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3518)
[0000][PE] mean and std.dev: (1016.19, 623.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203068 reads in 295.587 CPU sec, 53.272 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1203054
	[0000][ M::kt_pipeline] read 1203054 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 526947, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 1047, 2970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8442)
[0000][PE] mean and std.dev: (1398.83, 1506.56)
[0000][PE] low and high boundaries for proper pairs: (1, 11178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.79, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 1191, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4471)
[0000][PE] mean and std.dev: (1036.83, 818.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203130 reads in 298.793 CPU sec, 50.411 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1203036
	[0000][ M::kt_pipeline] read 1203036 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527294, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 1112, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4713)
[0000][PE] mean and std.dev: (1018.62, 727.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.71, 60.83)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 324, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (743.88, 728.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203054 reads in 296.393 CPU sec, 58.236 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1202948
	[0000][ M::kt_pipeline] read 1202948 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527800, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 1069, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5555)
[0000][PE] mean and std.dev: (1272.77, 1167.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.63, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (316, 744, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3805)
[0000][PE] mean and std.dev: (867.71, 749.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203036 reads in 297.891 CPU sec, 52.778 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1203116
	[0000][ M::kt_pipeline] read 1203116 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 526994, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 850, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2672)
[0000][PE] mean and std.dev: (842.48, 634.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.69, 60.63)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 799, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2971)
[0000][PE] mean and std.dev: (801.50, 591.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202948 reads in 299.488 CPU sec, 44.444 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1203034
	[0000][ M::kt_pipeline] read 1203034 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527741, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (559, 919, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3580)
[0000][PE] mean and std.dev: (962.46, 776.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.55, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 935, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4355)
[0000][PE] mean and std.dev: (1163.44, 972.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203116 reads in 292.405 CPU sec, 46.299 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1203028
	[0000][ M::kt_pipeline] read 1203028 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 527602, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (554, 890, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2657)
[0000][PE] mean and std.dev: (790.55, 452.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.52, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 733, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4275)
[0000][PE] mean and std.dev: (765.35, 598.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203034 reads in 293.809 CPU sec, 55.342 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1203108
	[0000][ M::kt_pipeline] read 1203108 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 527478, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (557, 1073, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (1159.33, 912.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.67, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (314, 1199, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3542)
[0000][PE] mean and std.dev: (1094.67, 841.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203028 reads in 292.064 CPU sec, 52.873 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1203048
	[0000][ M::kt_pipeline] read 1203048 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527772, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 248, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2377)
[0000][PE] mean and std.dev: (480.00, 556.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.60, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 929, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4011)
[0000][PE] mean and std.dev: (970.95, 729.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203108 reads in 288.642 CPU sec, 34.035 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1202958
	[0000][ M::kt_pipeline] read 1202958 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527274, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (954, 1049, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4224)
[0000][PE] mean and std.dev: (1119.00, 802.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.54, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 921, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3291)
[0000][PE] mean and std.dev: (733.70, 560.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203048 reads in 287.464 CPU sec, 41.244 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1202878
	[0000][ M::kt_pipeline] read 1202878 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527364, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 497, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2447)
[0000][PE] mean and std.dev: (667.13, 610.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.33, 60.46)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (167, 276, 776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1994)
[0000][PE] mean and std.dev: (438.29, 458.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202958 reads in 292.853 CPU sec, 45.260 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1202892
	[0000][ M::kt_pipeline] read 1202892 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527982, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 734, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2749)
[0000][PE] mean and std.dev: (710.82, 549.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.30, 60.45)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1415, 2978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6758)
[0000][PE] mean and std.dev: (1775.92, 1196.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202878 reads in 291.689 CPU sec, 49.943 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1202932
	[0000][ M::kt_pipeline] read 1202932 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527880, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 411, 804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1894)
[0000][PE] mean and std.dev: (591.00, 508.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.54, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 1033, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4843)
[0000][PE] mean and std.dev: (1232.76, 1228.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202892 reads in 299.218 CPU sec, 51.301 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1202900
	[0000][ M::kt_pipeline] read 1202900 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527453, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 492, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5799)
[0000][PE] mean and std.dev: (1018.70, 947.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.43, 60.67)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 694, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4677)
[0000][PE] mean and std.dev: (888.58, 700.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202932 reads in 292.370 CPU sec, 52.319 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1202980
	[0000][ M::kt_pipeline] read 1202980 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 528024, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 622, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2316)
[0000][PE] mean and std.dev: (679.88, 541.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.70, 60.57)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 830, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4414)
[0000][PE] mean and std.dev: (1105.14, 965.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202900 reads in 290.132 CPU sec, 47.618 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1202912
	[0000][ M::kt_pipeline] read 1202912 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527550, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 293, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4203)
[0000][PE] mean and std.dev: (789.96, 760.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.83, 60.79)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 791, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3923)
[0000][PE] mean and std.dev: (943.00, 796.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202980 reads in 298.809 CPU sec, 54.921 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1202994
	[0000][ M::kt_pipeline] read 1202994 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527464, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 344, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4734)
[0000][PE] mean and std.dev: (830.38, 725.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.90, 60.66)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 831, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3663)
[0000][PE] mean and std.dev: (807.33, 588.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202912 reads in 297.292 CPU sec, 42.291 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1202944
	[0000][ M::kt_pipeline] read 1202944 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527792, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 1230, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4552)
[0000][PE] mean and std.dev: (1023.95, 960.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.76, 60.67)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (315, 1698, 3321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9333)
[0000][PE] mean and std.dev: (2137.90, 2102.28)
[0000][PE] low and high boundaries for proper pairs: (1, 12339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202994 reads in 295.885 CPU sec, 43.328 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1203060
	[0000][ M::kt_pipeline] read 1203060 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527137, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 1268, 2521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6941)
[0000][PE] mean and std.dev: (1307.24, 1045.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.84, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1393, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2752)
[0000][PE] mean and std.dev: (1287.93, 455.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202944 reads in 297.640 CPU sec, 57.929 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1203068
	[0000][ M::kt_pipeline] read 1203068 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527901, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 1073, 2502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7086)
[0000][PE] mean and std.dev: (1314.45, 1165.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.76, 60.65)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 1096, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (1107.96, 780.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203060 reads in 293.831 CPU sec, 49.743 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1202946
	[0000][ M::kt_pipeline] read 1202946 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527606, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 577, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3871)
[0000][PE] mean and std.dev: (655.47, 536.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.67, 60.43)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 1167, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (1163.50, 624.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203068 reads in 297.479 CPU sec, 52.075 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1203006
	[0000][ M::kt_pipeline] read 1203006 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527778, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 254, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6873)
[0000][PE] mean and std.dev: (943.18, 1011.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.69, 60.56)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 907, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3456)
[0000][PE] mean and std.dev: (897.29, 841.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202946 reads in 295.585 CPU sec, 45.598 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1202862
	[0000][ M::kt_pipeline] read 1202862 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 525964, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 1008, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5105)
[0000][PE] mean and std.dev: (1212.50, 1171.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.32, 60.49)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (539, 905, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4844)
[0000][PE] mean and std.dev: (1231.50, 1062.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203006 reads in 319.320 CPU sec, 61.441 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1202936
	[0000][ M::kt_pipeline] read 1202936 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 527176, 2, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.64, 60.57)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (538, 965, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4066)
[0000][PE] mean and std.dev: (1082.17, 860.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5242)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202862 reads in 307.504 CPU sec, 50.253 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1202918
	[0000][ M::kt_pipeline] read 1202918 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 527872, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 459, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3615)
[0000][PE] mean and std.dev: (740.96, 723.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.72, 60.56)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (161, 778, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4376)
[0000][PE] mean and std.dev: (814.06, 690.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202936 reads in 288.429 CPU sec, 48.818 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1202880
	[0000][ M::kt_pipeline] read 1202880 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527624, 3, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 860, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (1145.59, 998.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.85, 60.65)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 753, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2524)
[0000][PE] mean and std.dev: (783.63, 561.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202918 reads in 284.726 CPU sec, 36.584 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1202968
	[0000][ M::kt_pipeline] read 1202968 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527727, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1265, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5406)
[0000][PE] mean and std.dev: (1253.05, 980.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.83, 60.45)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 497, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3166)
[0000][PE] mean and std.dev: (653.44, 541.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202880 reads in 295.543 CPU sec, 40.638 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1202810
	[0000][ M::kt_pipeline] read 1202810 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527465, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (525, 1014, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4791)
[0000][PE] mean and std.dev: (1274.19, 1184.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.61, 60.58)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 1044, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2392)
[0000][PE] mean and std.dev: (834.86, 462.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202968 reads in 295.441 CPU sec, 46.476 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1202946
	[0000][ M::kt_pipeline] read 1202946 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518201, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (596, 933, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4250)
[0000][PE] mean and std.dev: (1031.00, 798.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.24, 60.48)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (299, 597, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4679)
[0000][PE] mean and std.dev: (1117.60, 1171.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202810 reads in 322.128 CPU sec, 53.848 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1203016
	[0000][ M::kt_pipeline] read 1203016 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 528064, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 643, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2737)
[0000][PE] mean and std.dev: (760.11, 618.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.97, 60.82)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (311, 728, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6065)
[0000][PE] mean and std.dev: (1277.22, 1227.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202946 reads in 289.759 CPU sec, 50.420 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1203110
	[0000][ M::kt_pipeline] read 1203110 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527392, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 584, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2718)
[0000][PE] mean and std.dev: (668.82, 514.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.78, 60.64)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (672, 950, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2475)
[0000][PE] mean and std.dev: (968.22, 528.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203016 reads in 292.912 CPU sec, 51.920 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1203018
	[0000][ M::kt_pipeline] read 1203018 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527287, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 523, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (825.00, 823.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.92, 60.62)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (338, 422, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5117)
[0000][PE] mean and std.dev: (1044.33, 997.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203110 reads in 289.252 CPU sec, 49.958 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1202982
	[0000][ M::kt_pipeline] read 1202982 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527658, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 409, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3912)
[0000][PE] mean and std.dev: (734.33, 703.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.74, 60.65)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (449, 1682, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4880)
[0000][PE] mean and std.dev: (1288.25, 708.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203018 reads in 284.521 CPU sec, 40.191 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1202870
	[0000][ M::kt_pipeline] read 1202870 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527344, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (594, 923, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1902)
[0000][PE] mean and std.dev: (686.42, 340.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.00, 60.63)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (448, 956, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (1186.58, 930.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202982 reads in 288.484 CPU sec, 40.769 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1203006
	[0000][ M::kt_pipeline] read 1203006 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527706, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 864, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6307)
[0000][PE] mean and std.dev: (1265.72, 1310.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.98, 60.50)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 1056, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4189)
[0000][PE] mean and std.dev: (985.52, 852.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202870 reads in 292.108 CPU sec, 47.999 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1202958
	[0000][ M::kt_pipeline] read 1202958 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 526901, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 253, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3222)
[0000][PE] mean and std.dev: (484.65, 527.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.81, 60.54)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (365, 906, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3422)
[0000][PE] mean and std.dev: (885.63, 648.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203006 reads in 292.702 CPU sec, 49.148 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1203026
	[0000][ M::kt_pipeline] read 1203026 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 526993, 0, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 1134, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4559)
[0000][PE] mean and std.dev: (948.31, 736.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.77, 60.77)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 1071, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3892)
[0000][PE] mean and std.dev: (1135.46, 893.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202958 reads in 295.497 CPU sec, 58.918 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1202978
	[0000][ M::kt_pipeline] read 1202978 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527346, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 659, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2746)
[0000][PE] mean and std.dev: (639.88, 486.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.67, 60.57)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 1033, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4540)
[0000][PE] mean and std.dev: (1236.82, 1044.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203026 reads in 285.028 CPU sec, 48.490 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1203002
	[0000][ M::kt_pipeline] read 1203002 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527615, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 931, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6166)
[0000][PE] mean and std.dev: (1582.17, 1594.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.66, 60.46)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (580, 1056, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4804)
[0000][PE] mean and std.dev: (1183.48, 830.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202978 reads in 286.060 CPU sec, 45.975 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1203060
	[0000][ M::kt_pipeline] read 1203060 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 526775, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 611, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (853.10, 848.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.84, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 645, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3283)
[0000][PE] mean and std.dev: (847.13, 653.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203002 reads in 290.823 CPU sec, 44.090 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1202898
	[0000][ M::kt_pipeline] read 1202898 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 527513, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 526, 804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1980)
[0000][PE] mean and std.dev: (491.19, 380.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.10, 60.75)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 1019, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5000)
[0000][PE] mean and std.dev: (1109.90, 815.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203060 reads in 288.177 CPU sec, 50.713 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1203046
	[0000][ M::kt_pipeline] read 1203046 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527833, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 821, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3665)
[0000][PE] mean and std.dev: (968.93, 749.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.99, 60.55)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (417, 1151, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5223)
[0000][PE] mean and std.dev: (1242.41, 880.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202898 reads in 291.198 CPU sec, 47.888 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1203124
	[0000][ M::kt_pipeline] read 1203124 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527040, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 272, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3129)
[0000][PE] mean and std.dev: (551.16, 563.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.05, 60.66)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (217, 388, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2626)
[0000][PE] mean and std.dev: (594.33, 515.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203046 reads in 294.048 CPU sec, 53.748 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1202940
	[0000][ M::kt_pipeline] read 1202940 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527128, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (715, 1257, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3616)
[0000][PE] mean and std.dev: (1202.83, 711.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.09, 60.63)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (627, 1311, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (1314.44, 870.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203124 reads in 291.890 CPU sec, 65.877 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1202946
	[0000][ M::kt_pipeline] read 1202946 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527596, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 228, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3457)
[0000][PE] mean and std.dev: (579.65, 756.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.02, 60.54)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 793, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2268)
[0000][PE] mean and std.dev: (562.64, 301.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202940 reads in 292.248 CPU sec, 61.557 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1203084
	[0000][ M::kt_pipeline] read 1203084 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 528086, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 432, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2320)
[0000][PE] mean and std.dev: (643.18, 516.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.18, 60.57)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (359, 1253, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4784)
[0000][PE] mean and std.dev: (1095.37, 834.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202946 reads in 294.116 CPU sec, 55.696 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1202956
	[0000][ M::kt_pipeline] read 1202956 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527302, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 910, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4804)
[0000][PE] mean and std.dev: (1138.29, 1113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.04, 60.60)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 637, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2471)
[0000][PE] mean and std.dev: (687.07, 499.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203084 reads in 294.725 CPU sec, 52.385 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1203024
	[0000][ M::kt_pipeline] read 1203024 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527201, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 708, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3688)
[0000][PE] mean and std.dev: (819.91, 615.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.09, 60.69)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 965, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2474)
[0000][PE] mean and std.dev: (961.77, 465.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202956 reads in 296.404 CPU sec, 61.850 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1203044
	[0000][ M::kt_pipeline] read 1203044 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527320, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 1050, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3702)
[0000][PE] mean and std.dev: (988.54, 744.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.05, 60.57)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (398, 780, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4028)
[0000][PE] mean and std.dev: (1028.56, 768.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203024 reads in 297.649 CPU sec, 47.893 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000163, nseq: 1203068
	[0000][ M::kt_pipeline] read 1203068 sequences (180000163 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527649, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (696, 1153, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4221)
[0000][PE] mean and std.dev: (1115.23, 840.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.07, 60.60)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (362, 835, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3212)
[0000][PE] mean and std.dev: (832.36, 589.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203044 reads in 300.351 CPU sec, 61.263 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1202948
	[0000][ M::kt_pipeline] read 1202948 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 527962, 5, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.12, 60.56)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 1001, 2387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6693)
[0000][PE] mean and std.dev: (1384.12, 1233.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8846)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203068 reads in 298.988 CPU sec, 54.597 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1203030
	[0000][ M::kt_pipeline] read 1203030 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527759, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 321, 963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2469)
[0000][PE] mean and std.dev: (463.22, 446.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.25, 60.68)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (482, 1009, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3578)
[0000][PE] mean and std.dev: (937.04, 554.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202948 reads in 287.413 CPU sec, 48.783 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1203044
	[0000][ M::kt_pipeline] read 1203044 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 528047, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 1022, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5064)
[0000][PE] mean and std.dev: (1349.25, 1382.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.97, 60.54)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 847, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5198)
[0000][PE] mean and std.dev: (1189.62, 1272.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203030 reads in 288.718 CPU sec, 62.335 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1203038
	[0000][ M::kt_pipeline] read 1203038 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527730, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 1014, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3978)
[0000][PE] mean and std.dev: (988.85, 736.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.96, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 977, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6307)
[0000][PE] mean and std.dev: (1351.13, 1563.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203044 reads in 287.043 CPU sec, 58.010 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1203050
	[0000][ M::kt_pipeline] read 1203050 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527121, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 335, 689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1693)
[0000][PE] mean and std.dev: (457.11, 401.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.11, 60.62)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 310, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2614)
[0000][PE] mean and std.dev: (419.78, 325.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203038 reads in 287.460 CPU sec, 56.890 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1202962
	[0000][ M::kt_pipeline] read 1202962 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527615, 4, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 919, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (925.84, 716.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.02, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (322, 812, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (973.81, 909.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203050 reads in 292.765 CPU sec, 56.014 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1202912
	[0000][ M::kt_pipeline] read 1202912 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 528004, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 914, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4217)
[0000][PE] mean and std.dev: (1012.47, 752.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.22, 60.79)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1053, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4183)
[0000][PE] mean and std.dev: (1222.50, 772.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202962 reads in 287.047 CPU sec, 43.927 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1202980
	[0000][ M::kt_pipeline] read 1202980 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 527814, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 597, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3836)
[0000][PE] mean and std.dev: (859.39, 732.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (322.10, 60.76)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (162, 846, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3948)
[0000][PE] mean and std.dev: (924.67, 813.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202912 reads in 297.237 CPU sec, 55.121 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1203030
	[0000][ M::kt_pipeline] read 1203030 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527296, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 735, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (702.33, 454.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.19, 60.73)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (459, 1028, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4815)
[0000][PE] mean and std.dev: (1214.60, 1003.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202980 reads in 292.242 CPU sec, 45.461 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1203044
	[0000][ M::kt_pipeline] read 1203044 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 527136, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 551, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4287)
[0000][PE] mean and std.dev: (835.71, 724.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.08, 60.69)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (343, 944, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3448)
[0000][PE] mean and std.dev: (953.94, 692.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203030 reads in 291.727 CPU sec, 48.640 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1203048
	[0000][ M::kt_pipeline] read 1203048 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527594, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 657, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2941)
[0000][PE] mean and std.dev: (657.21, 424.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.14, 60.65)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1246, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (1424.78, 952.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203044 reads in 280.940 CPU sec, 32.727 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1203114
	[0000][ M::kt_pipeline] read 1203114 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527311, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 532, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2383)
[0000][PE] mean and std.dev: (454.33, 301.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.84, 60.54)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (550, 1047, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5197)
[0000][PE] mean and std.dev: (1191.85, 969.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203048 reads in 288.732 CPU sec, 54.267 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1203012
	[0000][ M::kt_pipeline] read 1203012 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527726, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 552, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3202)
[0000][PE] mean and std.dev: (657.33, 679.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.92, 60.75)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (516, 1308, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6168)
[0000][PE] mean and std.dev: (1660.00, 1393.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203114 reads in 294.659 CPU sec, 58.537 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1203090
	[0000][ M::kt_pipeline] read 1203090 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527603, 1, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 880, 3999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11367)
[0000][PE] mean and std.dev: (1989.42, 2036.45)
[0000][PE] low and high boundaries for proper pairs: (1, 15051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.96, 60.76)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 737, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4484)
[0000][PE] mean and std.dev: (1042.07, 1093.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203012 reads in 296.209 CPU sec, 53.666 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1203030
	[0000][ M::kt_pipeline] read 1203030 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 528069, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (631, 803, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2251)
[0000][PE] mean and std.dev: (941.89, 625.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.66, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 1058, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4636)
[0000][PE] mean and std.dev: (993.28, 775.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203090 reads in 301.629 CPU sec, 54.377 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000133, nseq: 1203060
	[0000][ M::kt_pipeline] read 1203060 sequences (180000133 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527325, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 905, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4496)
[0000][PE] mean and std.dev: (1218.57, 1081.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.75, 60.61)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 628, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5394)
[0000][PE] mean and std.dev: (1138.19, 1200.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203030 reads in 303.202 CPU sec, 58.499 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1202962
	[0000][ M::kt_pipeline] read 1202962 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527340, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 426, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2195)
[0000][PE] mean and std.dev: (573.05, 424.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.00, 60.73)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 925, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3568)
[0000][PE] mean and std.dev: (806.62, 661.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203060 reads in 288.864 CPU sec, 48.235 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1202988
	[0000][ M::kt_pipeline] read 1202988 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527606, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1016, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (1162.94, 1067.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.90, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (356, 926, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3788)
[0000][PE] mean and std.dev: (1009.60, 887.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202962 reads in 287.743 CPU sec, 43.421 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1202986
	[0000][ M::kt_pipeline] read 1202986 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527830, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 538, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4518)
[0000][PE] mean and std.dev: (1237.47, 1365.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.87, 60.60)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (494, 921, 3029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8099)
[0000][PE] mean and std.dev: (1550.68, 1423.35)
[0000][PE] low and high boundaries for proper pairs: (1, 10634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202988 reads in 290.640 CPU sec, 43.685 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1202978
	[0000][ M::kt_pipeline] read 1202978 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527491, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 576, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (942.90, 841.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.92, 60.67)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (225, 473, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3060)
[0000][PE] mean and std.dev: (700.90, 540.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202986 reads in 296.864 CPU sec, 51.917 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1202912
	[0000][ M::kt_pipeline] read 1202912 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 527694, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 264, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2645)
[0000][PE] mean and std.dev: (460.22, 436.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.80, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (370, 1106, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4168)
[0000][PE] mean and std.dev: (1049.19, 879.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202978 reads in 289.524 CPU sec, 48.597 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1202998
	[0000][ M::kt_pipeline] read 1202998 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527739, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 486, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (889.59, 850.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.70, 60.74)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (660, 1304, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4437)
[0000][PE] mean and std.dev: (1307.44, 933.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202912 reads in 301.837 CPU sec, 53.925 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000085, nseq: 1203062
	[0000][ M::kt_pipeline] read 1203062 sequences (180000085 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527638, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 309, 929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2443)
[0000][PE] mean and std.dev: (500.15, 442.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.82, 60.67)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 864, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3106)
[0000][PE] mean and std.dev: (779.46, 572.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202998 reads in 301.599 CPU sec, 60.696 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1202994
	[0000][ M::kt_pipeline] read 1202994 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527944, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 557, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3096)
[0000][PE] mean and std.dev: (547.41, 484.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.79, 60.66)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 836, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (1156.30, 726.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203062 reads in 290.649 CPU sec, 48.528 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1202960
	[0000][ M::kt_pipeline] read 1202960 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527763, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 870, 1892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5142)
[0000][PE] mean and std.dev: (1090.32, 965.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.74, 60.79)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (672, 1090, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4821)
[0000][PE] mean and std.dev: (1396.61, 1165.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202994 reads in 295.522 CPU sec, 50.089 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1203008
	[0000][ M::kt_pipeline] read 1203008 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527709, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 888, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3736)
[0000][PE] mean and std.dev: (734.19, 482.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.85, 60.61)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 499, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2990)
[0000][PE] mean and std.dev: (611.95, 455.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202960 reads in 292.325 CPU sec, 54.781 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1203006
	[0000][ M::kt_pipeline] read 1203006 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527476, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 218, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2710)
[0000][PE] mean and std.dev: (457.19, 541.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.70, 60.84)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1332, 2477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5269)
[0000][PE] mean and std.dev: (1676.86, 985.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203008 reads in 292.479 CPU sec, 56.890 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1202944
	[0000][ M::kt_pipeline] read 1202944 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527799, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 605, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2387)
[0000][PE] mean and std.dev: (701.00, 529.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.68, 60.78)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (532, 721, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3112)
[0000][PE] mean and std.dev: (904.27, 597.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203006 reads in 298.360 CPU sec, 50.578 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1202934
	[0000][ M::kt_pipeline] read 1202934 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 526973, 1, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 1355, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6088)
[0000][PE] mean and std.dev: (1608.35, 1458.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.67, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (401, 976, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4070)
[0000][PE] mean and std.dev: (1064.24, 758.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202944 reads in 297.101 CPU sec, 48.547 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1203056
	[0000][ M::kt_pipeline] read 1203056 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527068, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 602, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3505)
[0000][PE] mean and std.dev: (674.64, 680.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.58, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 1148, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4899)
[0000][PE] mean and std.dev: (1214.30, 912.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202934 reads in 301.971 CPU sec, 61.847 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1203126
	[0000][ M::kt_pipeline] read 1203126 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527512, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 906, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4590)
[0000][PE] mean and std.dev: (862.94, 657.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.78, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1059, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2848)
[0000][PE] mean and std.dev: (999.00, 475.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203056 reads in 288.025 CPU sec, 54.845 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1202994
	[0000][ M::kt_pipeline] read 1202994 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527824, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 868, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4359)
[0000][PE] mean and std.dev: (968.60, 844.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.65, 60.66)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (429, 1113, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2643)
[0000][PE] mean and std.dev: (818.38, 389.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203126 reads in 291.251 CPU sec, 56.987 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1202974
	[0000][ M::kt_pipeline] read 1202974 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 527578, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 1048, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6830)
[0000][PE] mean and std.dev: (1489.22, 1727.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.66, 60.80)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (527, 929, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2111)
[0000][PE] mean and std.dev: (789.46, 415.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202994 reads in 299.778 CPU sec, 47.149 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1203010
	[0000][ M::kt_pipeline] read 1203010 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527681, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 728, 4597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13255)
[0000][PE] mean and std.dev: (2242.38, 2784.43)
[0000][PE] low and high boundaries for proper pairs: (1, 17584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.81, 60.74)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 1001, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5205)
[0000][PE] mean and std.dev: (1320.64, 1271.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6854)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202974 reads in 288.745 CPU sec, 48.632 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1203014
	[0000][ M::kt_pipeline] read 1203014 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527336, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 404, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (687.25, 753.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.55, 60.77)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (576, 1171, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3417)
[0000][PE] mean and std.dev: (942.08, 527.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203010 reads in 289.998 CPU sec, 45.714 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1202934
	[0000][ M::kt_pipeline] read 1202934 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527439, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 346, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4703)
[0000][PE] mean and std.dev: (808.47, 681.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.42, 60.87)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 781, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (827.28, 695.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203014 reads in 293.862 CPU sec, 40.187 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1203010
	[0000][ M::kt_pipeline] read 1203010 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527574, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 321, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (736.89, 689.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.65, 60.79)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 849, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3983)
[0000][PE] mean and std.dev: (990.57, 700.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202934 reads in 292.116 CPU sec, 44.865 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1203050
	[0000][ M::kt_pipeline] read 1203050 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 528025, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 682, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3230)
[0000][PE] mean and std.dev: (801.22, 719.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.61, 60.81)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (165, 999, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4722)
[0000][PE] mean and std.dev: (860.06, 698.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203010 reads in 289.453 CPU sec, 45.254 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1203048
	[0000][ M::kt_pipeline] read 1203048 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527446, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 432, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2868)
[0000][PE] mean and std.dev: (667.00, 466.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.41, 60.72)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1655, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5021)
[0000][PE] mean and std.dev: (1518.29, 949.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203050 reads in 295.532 CPU sec, 44.468 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1203138
	[0000][ M::kt_pipeline] read 1203138 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527818, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 472, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (531.53, 500.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.46, 60.67)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 1152, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2649)
[0000][PE] mean and std.dev: (979.85, 472.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203048 reads in 292.351 CPU sec, 42.381 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1202830
	[0000][ M::kt_pipeline] read 1202830 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527011, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (647, 716, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2000)
[0000][PE] mean and std.dev: (779.40, 406.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.42, 60.50)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 761, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (973.92, 884.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203138 reads in 296.047 CPU sec, 42.777 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1202926
	[0000][ M::kt_pipeline] read 1202926 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527432, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (965, 1366, 2489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5537)
[0000][PE] mean and std.dev: (1483.53, 827.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.54, 60.59)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (641, 824, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2264)
[0000][PE] mean and std.dev: (849.75, 520.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202830 reads in 298.449 CPU sec, 54.403 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1202902
	[0000][ M::kt_pipeline] read 1202902 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 527552, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 1001, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4466)
[0000][PE] mean and std.dev: (953.64, 989.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.67, 60.52)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 851, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (824.55, 653.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202926 reads in 303.264 CPU sec, 53.050 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1202894
	[0000][ M::kt_pipeline] read 1202894 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527063, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (479, 1168, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3887)
[0000][PE] mean and std.dev: (1087.06, 787.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.62, 60.62)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1151, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5080)
[0000][PE] mean and std.dev: (1273.57, 799.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202902 reads in 298.489 CPU sec, 55.199 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1202950
	[0000][ M::kt_pipeline] read 1202950 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 527554, 4, 27)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.35, 60.35)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 864, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3095)
[0000][PE] mean and std.dev: (767.58, 634.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4046)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202894 reads in 295.557 CPU sec, 54.305 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000283, nseq: 1202894
	[0000][ M::kt_pipeline] read 1202894 sequences (180000283 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527388, 2, 37)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 498, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3044)
[0000][PE] mean and std.dev: (734.53, 623.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.56, 60.65)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1156, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4590)
[0000][PE] mean and std.dev: (1408.19, 1056.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202950 reads in 298.402 CPU sec, 55.551 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1202976
	[0000][ M::kt_pipeline] read 1202976 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527992, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 593, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4299)
[0000][PE] mean and std.dev: (763.58, 821.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.80, 60.57)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 945, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (954.61, 487.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202894 reads in 289.178 CPU sec, 49.564 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1203082
	[0000][ M::kt_pipeline] read 1203082 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527400, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 741, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1994)
[0000][PE] mean and std.dev: (595.74, 327.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.74, 60.56)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 400, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2872)
[0000][PE] mean and std.dev: (729.73, 650.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202976 reads in 294.077 CPU sec, 54.706 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1202888
	[0000][ M::kt_pipeline] read 1202888 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527245, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (682, 775, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2095)
[0000][PE] mean and std.dev: (730.17, 390.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.63, 60.58)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 913, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4795)
[0000][PE] mean and std.dev: (986.52, 1039.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203082 reads in 300.085 CPU sec, 46.906 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1202944
	[0000][ M::kt_pipeline] read 1202944 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 528155, 6, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 587, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2906)
[0000][PE] mean and std.dev: (698.61, 438.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.85, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1451, 3694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9304)
[0000][PE] mean and std.dev: (1937.07, 1739.11)
[0000][PE] low and high boundaries for proper pairs: (1, 12109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202888 reads in 304.764 CPU sec, 53.611 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1203276
	[0000][ M::kt_pipeline] read 1203276 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527457, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 551, 836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2162)
[0000][PE] mean and std.dev: (572.71, 454.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.63, 60.66)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 1035, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2927)
[0000][PE] mean and std.dev: (877.79, 548.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202944 reads in 304.324 CPU sec, 53.686 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1202938
	[0000][ M::kt_pipeline] read 1202938 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 527731, 2, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.87, 60.74)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 610, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (710.44, 520.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4268)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203276 reads in 303.329 CPU sec, 54.284 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1202954
	[0000][ M::kt_pipeline] read 1202954 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 526897, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (890, 1218, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4886)
[0000][PE] mean and std.dev: (1543.80, 1165.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.87, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 838, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4146)
[0000][PE] mean and std.dev: (785.90, 562.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202938 reads in 299.534 CPU sec, 51.764 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1203024
	[0000][ M::kt_pipeline] read 1203024 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527704, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (574, 1071, 3919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10609)
[0000][PE] mean and std.dev: (1782.00, 1603.38)
[0000][PE] low and high boundaries for proper pairs: (1, 13954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.87, 60.55)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (527, 1409, 2716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7094)
[0000][PE] mean and std.dev: (1716.40, 1391.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202954 reads in 289.662 CPU sec, 40.308 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1202904
	[0000][ M::kt_pipeline] read 1202904 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527438, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 348, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3045)
[0000][PE] mean and std.dev: (799.20, 816.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.77, 60.66)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 662, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4834)
[0000][PE] mean and std.dev: (1002.54, 840.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203024 reads in 310.957 CPU sec, 63.903 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1202982
	[0000][ M::kt_pipeline] read 1202982 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527579, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 1071, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4161)
[0000][PE] mean and std.dev: (973.69, 871.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.73, 60.54)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (433, 990, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3661)
[0000][PE] mean and std.dev: (914.23, 566.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202904 reads in 296.071 CPU sec, 49.137 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1202922
	[0000][ M::kt_pipeline] read 1202922 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527043, 0, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 531, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1714)
[0000][PE] mean and std.dev: (509.75, 322.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.83, 60.74)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (406, 751, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (1017.82, 788.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202982 reads in 301.733 CPU sec, 55.631 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1203088
	[0000][ M::kt_pipeline] read 1203088 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 528029, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 329, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2917)
[0000][PE] mean and std.dev: (643.95, 627.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.80, 60.57)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 796, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3883)
[0000][PE] mean and std.dev: (989.35, 722.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202922 reads in 300.796 CPU sec, 59.799 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1202880
	[0000][ M::kt_pipeline] read 1202880 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527523, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 411, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2939)
[0000][PE] mean and std.dev: (652.44, 668.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.88, 60.57)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1157, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (1169.06, 708.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203088 reads in 293.098 CPU sec, 48.692 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1202898
	[0000][ M::kt_pipeline] read 1202898 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527491, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 798, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2831)
[0000][PE] mean and std.dev: (687.19, 534.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.86, 60.68)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 1177, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5350)
[0000][PE] mean and std.dev: (1175.65, 909.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202880 reads in 295.424 CPU sec, 50.282 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1203012
	[0000][ M::kt_pipeline] read 1203012 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 526197, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 1183, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4231)
[0000][PE] mean and std.dev: (1097.33, 1021.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.18, 60.40)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (269, 743, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3374)
[0000][PE] mean and std.dev: (869.47, 795.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202898 reads in 325.950 CPU sec, 61.293 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1202936
	[0000][ M::kt_pipeline] read 1202936 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527378, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 863, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4217)
[0000][PE] mean and std.dev: (1104.86, 1021.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.88, 60.47)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 717, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4889)
[0000][PE] mean and std.dev: (959.59, 915.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203012 reads in 289.511 CPU sec, 49.697 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1203076
	[0000][ M::kt_pipeline] read 1203076 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527074, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 373, 746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1746)
[0000][PE] mean and std.dev: (360.17, 205.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.86, 60.56)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 777, 861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2089)
[0000][PE] mean and std.dev: (574.40, 422.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202936 reads in 301.192 CPU sec, 53.558 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1202930
	[0000][ M::kt_pipeline] read 1202930 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527074, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 365, 752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1842)
[0000][PE] mean and std.dev: (423.65, 324.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.03, 60.66)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 1046, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3837)
[0000][PE] mean and std.dev: (990.00, 856.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203076 reads in 302.656 CPU sec, 59.497 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1202938
	[0000][ M::kt_pipeline] read 1202938 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 526893, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 486, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2928)
[0000][PE] mean and std.dev: (713.38, 728.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.89, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 612, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (987.00, 932.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202930 reads in 301.778 CPU sec, 51.620 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1202912
	[0000][ M::kt_pipeline] read 1202912 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527442, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 745, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (876.62, 749.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.96, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (350, 951, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4622)
[0000][PE] mean and std.dev: (1233.90, 1038.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202938 reads in 291.109 CPU sec, 46.018 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1202906
	[0000][ M::kt_pipeline] read 1202906 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527498, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 968, 2827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8083)
[0000][PE] mean and std.dev: (1192.29, 1277.68)
[0000][PE] low and high boundaries for proper pairs: (1, 10711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.93, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 975, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (46, 1916)
[0000][PE] mean and std.dev: (907.16, 359.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202912 reads in 295.999 CPU sec, 46.013 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1202930
	[0000][ M::kt_pipeline] read 1202930 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527285, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 610, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3704)
[0000][PE] mean and std.dev: (792.32, 690.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.93, 60.64)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 685, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5836)
[0000][PE] mean and std.dev: (1116.24, 1016.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202906 reads in 286.905 CPU sec, 43.602 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1202984
	[0000][ M::kt_pipeline] read 1202984 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527649, 1, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (844, 899, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (1083.50, 591.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.91, 60.72)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 934, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (868.13, 676.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202930 reads in 294.116 CPU sec, 59.431 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1202976
	[0000][ M::kt_pipeline] read 1202976 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527571, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 220, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3565)
[0000][PE] mean and std.dev: (717.75, 686.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.91, 60.63)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 1016, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (1086.59, 804.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202984 reads in 304.918 CPU sec, 61.330 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1203088
	[0000][ M::kt_pipeline] read 1203088 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527255, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 1206, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6216)
[0000][PE] mean and std.dev: (1271.21, 1004.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.01, 60.56)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 918, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (981.96, 718.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202976 reads in 293.051 CPU sec, 47.591 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1203036
	[0000][ M::kt_pipeline] read 1203036 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527589, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (485, 879, 3396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9218)
[0000][PE] mean and std.dev: (1618.00, 1527.80)
[0000][PE] low and high boundaries for proper pairs: (1, 12129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.07, 60.52)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1219, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3311)
[0000][PE] mean and std.dev: (1189.50, 658.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203088 reads in 290.765 CPU sec, 44.421 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1202994
	[0000][ M::kt_pipeline] read 1202994 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527187, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 522, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5340)
[0000][PE] mean and std.dev: (699.89, 636.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.06, 60.66)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 808, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2290)
[0000][PE] mean and std.dev: (631.57, 419.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203036 reads in 300.025 CPU sec, 55.386 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1203014
	[0000][ M::kt_pipeline] read 1203014 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527666, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 870, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3660)
[0000][PE] mean and std.dev: (699.12, 549.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.93, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1293, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4331)
[0000][PE] mean and std.dev: (1128.33, 627.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202994 reads in 294.365 CPU sec, 57.150 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1203056
	[0000][ M::kt_pipeline] read 1203056 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527111, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 602, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2259)
[0000][PE] mean and std.dev: (664.50, 562.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.04, 60.65)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (464, 877, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2159)
[0000][PE] mean and std.dev: (705.06, 332.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203014 reads in 289.942 CPU sec, 46.791 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1203124
	[0000][ M::kt_pipeline] read 1203124 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 527399, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 898, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (812.37, 619.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.23, 60.53)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 853, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (908.52, 698.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203056 reads in 296.415 CPU sec, 51.348 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1202984
	[0000][ M::kt_pipeline] read 1202984 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 527286, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 925, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5974)
[0000][PE] mean and std.dev: (1119.89, 818.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.08, 60.63)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (339, 1015, 3781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10665)
[0000][PE] mean and std.dev: (1872.07, 2025.69)
[0000][PE] low and high boundaries for proper pairs: (1, 14107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203124 reads in 300.843 CPU sec, 58.954 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1202988
	[0000][ M::kt_pipeline] read 1202988 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527750, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 477, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (980.18, 1101.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.08, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 879, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4800)
[0000][PE] mean and std.dev: (1089.90, 1050.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202984 reads in 291.470 CPU sec, 51.830 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1203140
	[0000][ M::kt_pipeline] read 1203140 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 526893, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 575, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3303)
[0000][PE] mean and std.dev: (718.76, 617.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.08, 60.71)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1321, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6345)
[0000][PE] mean and std.dev: (1441.26, 1070.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202988 reads in 286.875 CPU sec, 40.294 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1203068
	[0000][ M::kt_pipeline] read 1203068 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 527423, 3, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 826, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2445)
[0000][PE] mean and std.dev: (498.11, 365.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.11, 60.54)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (352, 1125, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (1048.62, 785.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203140 reads in 296.129 CPU sec, 47.011 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1203016
	[0000][ M::kt_pipeline] read 1203016 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527527, 6, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 879, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5694)
[0000][PE] mean and std.dev: (955.06, 768.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.98, 60.64)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (714, 928, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4311)
[0000][PE] mean and std.dev: (1338.90, 993.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203068 reads in 292.340 CPU sec, 46.265 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1203066
	[0000][ M::kt_pipeline] read 1203066 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527637, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 794, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4683)
[0000][PE] mean and std.dev: (1124.94, 1109.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.19, 60.74)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (172, 777, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (819.44, 665.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203016 reads in 302.567 CPU sec, 61.904 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1203074
	[0000][ M::kt_pipeline] read 1203074 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527614, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 991, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5379)
[0000][PE] mean and std.dev: (1378.59, 1320.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (322.06, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 756, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (981.73, 797.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203066 reads in 297.544 CPU sec, 53.355 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1203010
	[0000][ M::kt_pipeline] read 1203010 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527349, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 979, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5299)
[0000][PE] mean and std.dev: (1142.72, 899.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.09, 60.70)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (344, 1194, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6017)
[0000][PE] mean and std.dev: (1264.24, 1228.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203074 reads in 295.678 CPU sec, 51.279 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1202970
	[0000][ M::kt_pipeline] read 1202970 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 526826, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 680, 2584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7272)
[0000][PE] mean and std.dev: (1329.43, 1416.97)
[0000][PE] low and high boundaries for proper pairs: (1, 9616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.99, 60.47)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 938, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4754)
[0000][PE] mean and std.dev: (1128.89, 913.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203010 reads in 296.492 CPU sec, 52.517 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1203118
	[0000][ M::kt_pipeline] read 1203118 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527631, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 1152, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6003)
[0000][PE] mean and std.dev: (1127.06, 807.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.01, 60.66)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (675, 951, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2334)
[0000][PE] mean and std.dev: (922.15, 310.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202970 reads in 297.030 CPU sec, 60.142 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1202978
	[0000][ M::kt_pipeline] read 1202978 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527206, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 511, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (809.16, 725.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.09, 60.55)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 896, 3739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10725)
[0000][PE] mean and std.dev: (2333.55, 2544.65)
[0000][PE] low and high boundaries for proper pairs: (1, 14218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203118 reads in 295.869 CPU sec, 52.544 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1203116
	[0000][ M::kt_pipeline] read 1203116 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527380, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 724, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4572)
[0000][PE] mean and std.dev: (936.73, 850.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.89, 60.52)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 1048, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4684)
[0000][PE] mean and std.dev: (1081.22, 1016.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202978 reads in 291.246 CPU sec, 42.450 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1202964
	[0000][ M::kt_pipeline] read 1202964 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 527686, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 974, 2672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7458)
[0000][PE] mean and std.dev: (1279.33, 1294.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.10, 60.67)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 1429, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4783)
[0000][PE] mean and std.dev: (1386.52, 1156.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203116 reads in 298.502 CPU sec, 44.494 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1202998
	[0000][ M::kt_pipeline] read 1202998 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527594, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 718, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4417)
[0000][PE] mean and std.dev: (977.82, 804.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.17, 60.75)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 446, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3766)
[0000][PE] mean and std.dev: (838.59, 797.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202964 reads in 300.218 CPU sec, 60.269 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1202986
	[0000][ M::kt_pipeline] read 1202986 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 527499, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 254, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (736.25, 774.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.24, 60.73)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1431, 4597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12307)
[0000][PE] mean and std.dev: (2216.64, 2091.71)
[0000][PE] low and high boundaries for proper pairs: (1, 16162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202998 reads in 290.696 CPU sec, 52.855 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1203014
	[0000][ M::kt_pipeline] read 1203014 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 528007, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (541, 667, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4852)
[0000][PE] mean and std.dev: (1053.32, 925.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.07, 60.63)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (550, 1119, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (1109.50, 717.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202986 reads in 292.455 CPU sec, 48.760 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1203038
	[0000][ M::kt_pipeline] read 1203038 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527783, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 589, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3634)
[0000][PE] mean and std.dev: (734.80, 634.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.08, 60.71)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 906, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3547)
[0000][PE] mean and std.dev: (872.16, 766.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203014 reads in 289.165 CPU sec, 52.435 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1202950
	[0000][ M::kt_pipeline] read 1202950 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 528131, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 757, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4054)
[0000][PE] mean and std.dev: (967.06, 878.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.92, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (170, 305, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (695.43, 738.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203038 reads in 302.104 CPU sec, 49.704 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1203014
	[0000][ M::kt_pipeline] read 1203014 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527472, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 629, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4735)
[0000][PE] mean and std.dev: (990.48, 1197.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.92, 60.77)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (345, 936, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4398)
[0000][PE] mean and std.dev: (1072.95, 756.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202950 reads in 300.656 CPU sec, 56.081 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1202988
	[0000][ M::kt_pipeline] read 1202988 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527612, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 506, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3210)
[0000][PE] mean and std.dev: (963.42, 965.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.86, 60.49)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 1201, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4497)
[0000][PE] mean and std.dev: (1193.44, 999.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203014 reads in 286.871 CPU sec, 59.816 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1202896
	[0000][ M::kt_pipeline] read 1202896 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527251, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 983, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4250)
[0000][PE] mean and std.dev: (926.17, 808.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.95, 60.72)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (346, 771, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2896)
[0000][PE] mean and std.dev: (848.17, 598.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202988 reads in 283.031 CPU sec, 37.914 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1203058
	[0000][ M::kt_pipeline] read 1203058 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 528087, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 312, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2627)
[0000][PE] mean and std.dev: (656.00, 667.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.89, 60.75)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1456, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (1281.43, 794.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202896 reads in 291.945 CPU sec, 48.597 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1203260
	[0000][ M::kt_pipeline] read 1203260 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527791, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 894, 5413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15543)
[0000][PE] mean and std.dev: (2210.11, 2507.06)
[0000][PE] low and high boundaries for proper pairs: (1, 20608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.88, 60.60)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 897, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4467)
[0000][PE] mean and std.dev: (965.96, 835.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203058 reads in 294.549 CPU sec, 55.271 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1202962
	[0000][ M::kt_pipeline] read 1202962 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527243, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1360, 1552, 3043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6409)
[0000][PE] mean and std.dev: (2010.31, 1231.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.80, 60.68)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 453, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4270)
[0000][PE] mean and std.dev: (780.44, 646.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203260 reads in 298.760 CPU sec, 54.420 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1203010
	[0000][ M::kt_pipeline] read 1203010 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 527465, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 497, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4165)
[0000][PE] mean and std.dev: (1083.73, 1133.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.89, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (338, 778, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2948)
[0000][PE] mean and std.dev: (870.64, 661.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202962 reads in 289.528 CPU sec, 39.146 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1203070
	[0000][ M::kt_pipeline] read 1203070 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527884, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 869, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5182)
[0000][PE] mean and std.dev: (1048.48, 964.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.98, 60.75)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (681, 863, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2421)
[0000][PE] mean and std.dev: (947.96, 524.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203010 reads in 293.867 CPU sec, 47.887 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1202788
	[0000][ M::kt_pipeline] read 1202788 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527642, 0, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 720, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (974.59, 814.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.62, 60.72)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1474, 2412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5022)
[0000][PE] mean and std.dev: (1554.45, 916.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203070 reads in 303.888 CPU sec, 46.600 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1203034
	[0000][ M::kt_pipeline] read 1203034 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518508, 0, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 916, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (759.94, 715.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.19, 60.58)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 748, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2658)
[0000][PE] mean and std.dev: (662.90, 395.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202788 reads in 383.924 CPU sec, 60.652 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1203056
	[0000][ M::kt_pipeline] read 1203056 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527701, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 403, 816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2064)
[0000][PE] mean and std.dev: (451.63, 284.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.72, 60.76)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1106, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3830)
[0000][PE] mean and std.dev: (1160.06, 740.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203034 reads in 292.661 CPU sec, 46.134 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1202972
	[0000][ M::kt_pipeline] read 1202972 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527065, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 652, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3675)
[0000][PE] mean and std.dev: (942.62, 925.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.92, 60.84)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1321, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4060)
[0000][PE] mean and std.dev: (1298.62, 989.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203056 reads in 294.608 CPU sec, 54.864 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1203160
	[0000][ M::kt_pipeline] read 1203160 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527542, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 814, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4816)
[0000][PE] mean and std.dev: (1068.94, 1246.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.57, 60.65)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 886, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2850)
[0000][PE] mean and std.dev: (1066.47, 626.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202972 reads in 293.126 CPU sec, 41.066 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1203000
	[0000][ M::kt_pipeline] read 1203000 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527618, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 217, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (769.47, 803.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.70, 60.65)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (391, 1219, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6196)
[0000][PE] mean and std.dev: (1495.54, 1316.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203160 reads in 292.237 CPU sec, 46.937 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1203062
	[0000][ M::kt_pipeline] read 1203062 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 527800, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 468, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2118)
[0000][PE] mean and std.dev: (649.73, 533.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.90, 60.55)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 965, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4270)
[0000][PE] mean and std.dev: (1246.58, 1101.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203000 reads in 291.793 CPU sec, 48.783 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1203060
	[0000][ M::kt_pipeline] read 1203060 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527724, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 934, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5325)
[0000][PE] mean and std.dev: (1268.50, 1051.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.89, 60.84)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 1538, 2650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7564)
[0000][PE] mean and std.dev: (1389.53, 1183.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203062 reads in 294.166 CPU sec, 53.131 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1203018
	[0000][ M::kt_pipeline] read 1203018 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527420, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 983, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4376)
[0000][PE] mean and std.dev: (951.00, 657.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.60, 60.80)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (325, 1155, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5287)
[0000][PE] mean and std.dev: (1216.90, 951.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203060 reads in 295.935 CPU sec, 50.244 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1202972
	[0000][ M::kt_pipeline] read 1202972 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 526976, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 873, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (1001.39, 921.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.63, 60.75)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 1535, 2519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7051)
[0000][PE] mean and std.dev: (1681.67, 1491.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203018 reads in 295.390 CPU sec, 55.626 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1203012
	[0000][ M::kt_pipeline] read 1203012 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527406, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (826, 988, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2533)
[0000][PE] mean and std.dev: (912.56, 387.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.84, 60.68)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 1082, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4132)
[0000][PE] mean and std.dev: (1016.90, 821.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202972 reads in 287.065 CPU sec, 47.718 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1203036
	[0000][ M::kt_pipeline] read 1203036 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527605, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 554, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2369)
[0000][PE] mean and std.dev: (644.76, 513.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.62, 60.75)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (286, 792, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4603)
[0000][PE] mean and std.dev: (941.94, 710.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203012 reads in 298.340 CPU sec, 59.166 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1203080
	[0000][ M::kt_pipeline] read 1203080 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527004, 0, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 353, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3516)
[0000][PE] mean and std.dev: (686.05, 523.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.57, 60.79)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 665, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (882.43, 763.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203036 reads in 289.897 CPU sec, 52.905 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1202992
	[0000][ M::kt_pipeline] read 1202992 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527303, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 1403, 2616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7294)
[0000][PE] mean and std.dev: (1300.45, 1051.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.56, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 897, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (1119.81, 899.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203080 reads in 299.429 CPU sec, 49.326 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1203018
	[0000][ M::kt_pipeline] read 1203018 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527298, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 1135, 3073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8715)
[0000][PE] mean and std.dev: (1834.53, 1825.22)
[0000][PE] low and high boundaries for proper pairs: (1, 11536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.42, 60.82)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (473, 1101, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (1098.91, 844.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5045)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202992 reads in 303.315 CPU sec, 44.569 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1202994
	[0000][ M::kt_pipeline] read 1202994 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527257, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 797, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2350)
[0000][PE] mean and std.dev: (520.40, 314.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.59, 60.81)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 995, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4968)
[0000][PE] mean and std.dev: (1250.92, 910.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203018 reads in 297.437 CPU sec, 55.223 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1203076
	[0000][ M::kt_pipeline] read 1203076 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527301, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 670, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2575)
[0000][PE] mean and std.dev: (650.46, 573.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.57, 60.63)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (483, 910, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4125)
[0000][PE] mean and std.dev: (1026.45, 711.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202994 reads in 291.402 CPU sec, 47.530 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1203100
	[0000][ M::kt_pipeline] read 1203100 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 527482, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (565, 821, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (723.50, 306.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.37, 60.60)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1291, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4939)
[0000][PE] mean and std.dev: (1469.81, 1005.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203076 reads in 301.030 CPU sec, 35.828 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1203080
	[0000][ M::kt_pipeline] read 1203080 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527138, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 569, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (694.75, 633.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.33, 60.41)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 766, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2605)
[0000][PE] mean and std.dev: (677.94, 415.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203100 reads in 300.690 CPU sec, 54.099 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1203070
	[0000][ M::kt_pipeline] read 1203070 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 526762, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (967, 1493, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (1382.53, 886.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.11, 60.66)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (454, 872, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2410)
[0000][PE] mean and std.dev: (826.19, 494.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3062)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203080 reads in 304.361 CPU sec, 62.504 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1202934
	[0000][ M::kt_pipeline] read 1202934 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 526949, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 752, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3419)
[0000][PE] mean and std.dev: (749.65, 667.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.28, 60.53)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 1035, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5591)
[0000][PE] mean and std.dev: (875.93, 670.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203070 reads in 298.597 CPU sec, 54.482 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1203020
	[0000][ M::kt_pipeline] read 1203020 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527602, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (621, 849, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3243)
[0000][PE] mean and std.dev: (853.28, 453.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.18, 60.45)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (655, 1039, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (1101.27, 671.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202934 reads in 300.226 CPU sec, 44.079 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1203024
	[0000][ M::kt_pipeline] read 1203024 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527604, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 676, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3660)
[0000][PE] mean and std.dev: (843.52, 593.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.13, 60.40)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 858, 2253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6197)
[0000][PE] mean and std.dev: (1055.85, 998.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203020 reads in 301.386 CPU sec, 55.122 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1203018
	[0000][ M::kt_pipeline] read 1203018 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527582, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 929, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5933)
[0000][PE] mean and std.dev: (1239.43, 1071.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.10, 60.42)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1522, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3931)
[0000][PE] mean and std.dev: (1324.76, 774.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203024 reads in 300.672 CPU sec, 54.270 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1202978
	[0000][ M::kt_pipeline] read 1202978 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527193, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 550, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (783.23, 760.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.27, 60.44)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (315, 836, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5937)
[0000][PE] mean and std.dev: (1173.17, 1091.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203018 reads in 299.863 CPU sec, 52.301 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1202976
	[0000][ M::kt_pipeline] read 1202976 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527267, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 746, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6802)
[0000][PE] mean and std.dev: (1138.72, 1190.75)
[0000][PE] low and high boundaries for proper pairs: (1, 9005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.40, 60.45)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 982, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3492)
[0000][PE] mean and std.dev: (996.24, 706.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202978 reads in 301.137 CPU sec, 58.257 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1203042
	[0000][ M::kt_pipeline] read 1203042 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527483, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 239, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4481)
[0000][PE] mean and std.dev: (750.29, 921.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.21, 60.50)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 982, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3825)
[0000][PE] mean and std.dev: (1149.68, 832.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202976 reads in 293.070 CPU sec, 43.699 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1202930
	[0000][ M::kt_pipeline] read 1202930 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527382, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 867, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3188)
[0000][PE] mean and std.dev: (786.00, 568.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.33, 60.42)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1355, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3105)
[0000][PE] mean and std.dev: (1162.93, 676.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203042 reads in 297.592 CPU sec, 51.119 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1203084
	[0000][ M::kt_pipeline] read 1203084 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527412, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 616, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4432)
[0000][PE] mean and std.dev: (866.38, 820.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.65, 60.63)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (479, 1180, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (1176.35, 811.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202930 reads in 291.758 CPU sec, 40.540 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1202912
	[0000][ M::kt_pipeline] read 1202912 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527526, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 681, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (732.41, 564.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.85, 60.56)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (450, 1057, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (1326.30, 1170.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203084 reads in 295.158 CPU sec, 45.394 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1203006
	[0000][ M::kt_pipeline] read 1203006 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 526859, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 808, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3081)
[0000][PE] mean and std.dev: (922.14, 728.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.65, 60.47)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 1113, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4409)
[0000][PE] mean and std.dev: (996.11, 957.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202912 reads in 294.878 CPU sec, 45.612 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1203116
	[0000][ M::kt_pipeline] read 1203116 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527633, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 867, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4626)
[0000][PE] mean and std.dev: (868.53, 710.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.53, 60.67)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (541, 894, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (987.20, 741.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203006 reads in 295.771 CPU sec, 44.099 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1203022
	[0000][ M::kt_pipeline] read 1203022 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 527252, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 488, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (772.54, 728.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.78, 60.75)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 1000, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (1096.05, 864.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203116 reads in 290.381 CPU sec, 42.085 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1202954
	[0000][ M::kt_pipeline] read 1202954 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527339, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 308, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2456)
[0000][PE] mean and std.dev: (636.95, 608.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.64, 60.68)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (269, 785, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3209)
[0000][PE] mean and std.dev: (772.32, 609.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4189)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203022 reads in 299.782 CPU sec, 49.630 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1202990
	[0000][ M::kt_pipeline] read 1202990 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527657, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 898, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3065)
[0000][PE] mean and std.dev: (810.91, 564.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.81, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (390, 895, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3291)
[0000][PE] mean and std.dev: (933.20, 658.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202954 reads in 295.260 CPU sec, 42.342 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1202950
	[0000][ M::kt_pipeline] read 1202950 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527331, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 567, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3645)
[0000][PE] mean and std.dev: (715.79, 575.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.81, 60.60)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1092, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (1375.19, 848.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202990 reads in 301.621 CPU sec, 55.962 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1203066
	[0000][ M::kt_pipeline] read 1203066 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527631, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 1201, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4978)
[0000][PE] mean and std.dev: (1145.57, 1009.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.61, 60.72)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1037, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2751)
[0000][PE] mean and std.dev: (882.53, 444.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202950 reads in 291.764 CPU sec, 41.135 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1203088
	[0000][ M::kt_pipeline] read 1203088 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527508, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 620, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2445)
[0000][PE] mean and std.dev: (643.00, 583.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.95, 60.62)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (482, 1004, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3977)
[0000][PE] mean and std.dev: (1011.35, 594.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203066 reads in 298.517 CPU sec, 45.163 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1203088
	[0000][ M::kt_pipeline] read 1203088 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527916, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 862, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (943.38, 738.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.83, 60.59)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 1006, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3896)
[0000][PE] mean and std.dev: (1099.68, 827.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203088 reads in 291.798 CPU sec, 44.890 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1203060
	[0000][ M::kt_pipeline] read 1203060 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527494, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 726, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (994.05, 972.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.96, 60.76)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 1081, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1186.22, 1048.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203088 reads in 294.116 CPU sec, 48.477 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1203048
	[0000][ M::kt_pipeline] read 1203048 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527516, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 503, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3543)
[0000][PE] mean and std.dev: (652.67, 591.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.52, 60.50)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (701, 1309, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3296)
[0000][PE] mean and std.dev: (1165.38, 823.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203060 reads in 297.793 CPU sec, 55.831 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1203088
	[0000][ M::kt_pipeline] read 1203088 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527089, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (469, 777, 2073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5281)
[0000][PE] mean and std.dev: (979.64, 792.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.64, 60.63)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (471, 1405, 2683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7107)
[0000][PE] mean and std.dev: (1612.46, 1188.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203048 reads in 293.737 CPU sec, 44.290 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1203100
	[0000][ M::kt_pipeline] read 1203100 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527337, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (583, 1073, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5710)
[0000][PE] mean and std.dev: (1418.70, 1196.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.82, 60.67)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 785, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4149)
[0000][PE] mean and std.dev: (885.86, 680.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203088 reads in 301.679 CPU sec, 50.598 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1203018
	[0000][ M::kt_pipeline] read 1203018 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527275, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 715, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4552)
[0000][PE] mean and std.dev: (828.12, 663.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.83, 60.74)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1397, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4619)
[0000][PE] mean and std.dev: (1332.82, 888.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203100 reads in 295.611 CPU sec, 46.918 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1202878
	[0000][ M::kt_pipeline] read 1202878 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527674, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 349, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3138)
[0000][PE] mean and std.dev: (656.09, 660.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.70, 60.56)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 1150, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6885)
[0000][PE] mean and std.dev: (1136.12, 954.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203018 reads in 290.176 CPU sec, 44.131 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1203100
	[0000][ M::kt_pipeline] read 1203100 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527787, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 518, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2860)
[0000][PE] mean and std.dev: (733.62, 706.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.83, 60.61)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 985, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2996)
[0000][PE] mean and std.dev: (921.87, 496.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202878 reads in 287.561 CPU sec, 46.500 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1203036
	[0000][ M::kt_pipeline] read 1203036 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527459, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 350, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4460)
[0000][PE] mean and std.dev: (715.59, 798.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.86, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 608, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (1049.53, 1097.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203100 reads in 291.219 CPU sec, 49.142 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1203082
	[0000][ M::kt_pipeline] read 1203082 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527229, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 335, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3008)
[0000][PE] mean and std.dev: (659.53, 609.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.78, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 1166, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4878)
[0000][PE] mean and std.dev: (1394.50, 1296.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203036 reads in 288.270 CPU sec, 44.635 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1202986
	[0000][ M::kt_pipeline] read 1202986 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 528412, 3, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (603, 1295, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (1157.25, 847.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.89, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (421, 1036, 2753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7417)
[0000][PE] mean and std.dev: (1236.06, 1068.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203082 reads in 291.087 CPU sec, 42.462 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1203082
	[0000][ M::kt_pipeline] read 1203082 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527545, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 271, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2989)
[0000][PE] mean and std.dev: (419.52, 361.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.83, 60.54)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 376, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2825)
[0000][PE] mean and std.dev: (694.68, 625.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202986 reads in 301.551 CPU sec, 58.122 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1202934
	[0000][ M::kt_pipeline] read 1202934 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527462, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 698, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4039)
[0000][PE] mean and std.dev: (896.12, 767.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.79, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (635, 1058, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2825)
[0000][PE] mean and std.dev: (963.71, 480.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203082 reads in 303.499 CPU sec, 49.967 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1203020
	[0000][ M::kt_pipeline] read 1203020 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527656, 0, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 228, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2964)
[0000][PE] mean and std.dev: (328.77, 318.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.87, 60.56)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (575, 1296, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6395)
[0000][PE] mean and std.dev: (1546.76, 1158.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202934 reads in 297.031 CPU sec, 52.684 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1203124
	[0000][ M::kt_pipeline] read 1203124 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527370, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 290, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4371)
[0000][PE] mean and std.dev: (782.42, 895.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.77, 60.66)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 833, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4178)
[0000][PE] mean and std.dev: (909.43, 726.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203020 reads in 291.727 CPU sec, 48.153 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1203044
	[0000][ M::kt_pipeline] read 1203044 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527698, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 1054, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (809.85, 696.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.97, 60.57)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (714, 1380, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5190)
[0000][PE] mean and std.dev: (1581.64, 1263.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203124 reads in 289.603 CPU sec, 44.226 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1203000
	[0000][ M::kt_pipeline] read 1203000 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527636, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 705, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4558)
[0000][PE] mean and std.dev: (850.71, 719.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.93, 60.57)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (416, 934, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3071)
[0000][PE] mean and std.dev: (991.35, 770.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203044 reads in 291.574 CPU sec, 49.932 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1203048
	[0000][ M::kt_pipeline] read 1203048 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527451, 3, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 1365, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5630)
[0000][PE] mean and std.dev: (1307.94, 1215.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.80, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (470, 888, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1967)
[0000][PE] mean and std.dev: (751.17, 357.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2466)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203000 reads in 298.006 CPU sec, 50.811 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1203008
	[0000][ M::kt_pipeline] read 1203008 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527072, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 894, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5253)
[0000][PE] mean and std.dev: (1139.68, 1240.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.87, 60.37)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 954, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (871.30, 537.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203048 reads in 295.599 CPU sec, 43.959 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1203060
	[0000][ M::kt_pipeline] read 1203060 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527594, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 514, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (908.53, 916.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.92, 60.66)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 1024, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4603)
[0000][PE] mean and std.dev: (1053.62, 877.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203008 reads in 293.172 CPU sec, 49.534 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1203076
	[0000][ M::kt_pipeline] read 1203076 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527160, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 674, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1826)
[0000][PE] mean and std.dev: (522.29, 270.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.89, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 862, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3244)
[0000][PE] mean and std.dev: (826.52, 550.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203060 reads in 292.924 CPU sec, 41.764 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1203050
	[0000][ M::kt_pipeline] read 1203050 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527263, 2, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 573, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (778.74, 644.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.85, 60.56)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (308, 887, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4592)
[0000][PE] mean and std.dev: (1122.26, 1017.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203076 reads in 287.787 CPU sec, 39.293 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1202966
	[0000][ M::kt_pipeline] read 1202966 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 527175, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 807, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4040)
[0000][PE] mean and std.dev: (894.82, 840.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.04, 60.58)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (350, 900, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (999.32, 672.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203050 reads in 293.395 CPU sec, 46.978 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1202950
	[0000][ M::kt_pipeline] read 1202950 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527867, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 1009, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4535)
[0000][PE] mean and std.dev: (966.58, 916.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.94, 60.54)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (592, 1348, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5164)
[0000][PE] mean and std.dev: (1376.45, 1002.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202966 reads in 290.704 CPU sec, 52.033 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1203124
	[0000][ M::kt_pipeline] read 1203124 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527408, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 685, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3390)
[0000][PE] mean and std.dev: (898.38, 828.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.95, 60.51)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 946, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (854.05, 693.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202950 reads in 291.981 CPU sec, 47.793 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1203058
	[0000][ M::kt_pipeline] read 1203058 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527870, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (597, 1249, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4392)
[0000][PE] mean and std.dev: (1086.58, 723.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.87, 60.42)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 1232, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4061)
[0000][PE] mean and std.dev: (1092.83, 743.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203124 reads in 288.375 CPU sec, 49.677 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1203046
	[0000][ M::kt_pipeline] read 1203046 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527020, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 1019, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5317)
[0000][PE] mean and std.dev: (1129.90, 877.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.80, 60.65)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (369, 1124, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4167)
[0000][PE] mean and std.dev: (1137.15, 851.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203058 reads in 297.070 CPU sec, 52.775 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1202994
	[0000][ M::kt_pipeline] read 1202994 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527227, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 809, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (863.50, 822.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.67, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 733, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4446)
[0000][PE] mean and std.dev: (945.50, 702.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203046 reads in 299.055 CPU sec, 57.241 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1202958
	[0000][ M::kt_pipeline] read 1202958 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 526934, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 306, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3675)
[0000][PE] mean and std.dev: (608.92, 573.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.85, 60.61)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (629, 1355, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5258)
[0000][PE] mean and std.dev: (1399.50, 912.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202994 reads in 298.322 CPU sec, 53.347 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1202968
	[0000][ M::kt_pipeline] read 1202968 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527688, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 1223, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5310)
[0000][PE] mean and std.dev: (1189.12, 1038.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.77, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (586, 1043, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4378)
[0000][PE] mean and std.dev: (1100.24, 871.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202958 reads in 291.811 CPU sec, 51.272 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1202886
	[0000][ M::kt_pipeline] read 1202886 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527733, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 780, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2556)
[0000][PE] mean and std.dev: (727.42, 501.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.85, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 996, 2660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7444)
[0000][PE] mean and std.dev: (1623.12, 1630.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202968 reads in 289.798 CPU sec, 45.333 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1203006
	[0000][ M::kt_pipeline] read 1203006 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527418, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 327, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2197)
[0000][PE] mean and std.dev: (564.62, 519.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.94, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (364, 1035, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (942.12, 792.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202886 reads in 302.187 CPU sec, 56.258 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1202982
	[0000][ M::kt_pipeline] read 1202982 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527398, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 784, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3897)
[0000][PE] mean and std.dev: (655.81, 479.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.97, 60.65)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 1041, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3976)
[0000][PE] mean and std.dev: (1006.73, 643.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203006 reads in 291.388 CPU sec, 53.375 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1203040
	[0000][ M::kt_pipeline] read 1203040 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527522, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 591, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3266)
[0000][PE] mean and std.dev: (816.54, 737.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.81, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (311, 630, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3122)
[0000][PE] mean and std.dev: (732.24, 532.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202982 reads in 288.307 CPU sec, 46.550 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1203138
	[0000][ M::kt_pipeline] read 1203138 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527504, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (907, 1188, 2642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6112)
[0000][PE] mean and std.dev: (1428.47, 1165.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.83, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 1003, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6339)
[0000][PE] mean and std.dev: (1176.33, 1176.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8386)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203040 reads in 302.650 CPU sec, 50.778 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1203096
	[0000][ M::kt_pipeline] read 1203096 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 527876, 5, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.92, 60.55)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 706, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3198)
[0000][PE] mean and std.dev: (773.89, 640.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4177)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203138 reads in 300.235 CPU sec, 51.929 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1203016
	[0000][ M::kt_pipeline] read 1203016 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527584, 8, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 626, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2137)
[0000][PE] mean and std.dev: (597.92, 370.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.81, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 993, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2785)
[0000][PE] mean and std.dev: (1050.52, 554.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203096 reads in 293.056 CPU sec, 55.707 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1203028
	[0000][ M::kt_pipeline] read 1203028 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527667, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 586, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (780.52, 618.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.93, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (368, 1069, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (966.36, 624.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203016 reads in 293.936 CPU sec, 51.833 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1203048
	[0000][ M::kt_pipeline] read 1203048 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527844, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 270, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2584)
[0000][PE] mean and std.dev: (490.15, 390.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.78, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (363, 1002, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4644)
[0000][PE] mean and std.dev: (1108.65, 787.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203028 reads in 301.665 CPU sec, 44.175 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1203036
	[0000][ M::kt_pipeline] read 1203036 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527516, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (654, 1290, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6069)
[0000][PE] mean and std.dev: (1448.14, 952.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.02, 60.62)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (311, 693, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3566)
[0000][PE] mean and std.dev: (830.17, 596.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203048 reads in 296.215 CPU sec, 44.168 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1203130
	[0000][ M::kt_pipeline] read 1203130 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527640, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (736, 795, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2134)
[0000][PE] mean and std.dev: (741.54, 442.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.77, 60.67)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (577, 944, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3133)
[0000][PE] mean and std.dev: (1003.69, 751.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203036 reads in 296.591 CPU sec, 54.072 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1203122
	[0000][ M::kt_pipeline] read 1203122 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527583, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (556, 850, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (1053.30, 847.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.71, 60.63)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 841, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2912)
[0000][PE] mean and std.dev: (755.92, 455.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203130 reads in 300.622 CPU sec, 62.438 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1203108
	[0000][ M::kt_pipeline] read 1203108 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527571, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (428, 1221, 2573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6863)
[0000][PE] mean and std.dev: (1540.79, 1149.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.85, 60.64)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 1048, 2510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7018)
[0000][PE] mean and std.dev: (1462.11, 1474.78)
[0000][PE] low and high boundaries for proper pairs: (1, 9272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203122 reads in 295.696 CPU sec, 46.839 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1203118
	[0000][ M::kt_pipeline] read 1203118 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527415, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 224, 819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2121)
[0000][PE] mean and std.dev: (449.00, 397.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.46, 60.60)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (320, 887, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3671)
[0000][PE] mean and std.dev: (972.72, 729.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203108 reads in 304.823 CPU sec, 50.062 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1203008
	[0000][ M::kt_pipeline] read 1203008 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527253, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 607, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3794)
[0000][PE] mean and std.dev: (733.65, 790.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.60, 60.64)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 312, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3216)
[0000][PE] mean and std.dev: (683.78, 659.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203118 reads in 293.635 CPU sec, 49.918 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1203012
	[0000][ M::kt_pipeline] read 1203012 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527889, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1016, 1597, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4604)
[0000][PE] mean and std.dev: (1439.53, 813.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.72, 60.74)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 842, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (900.96, 685.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203008 reads in 297.768 CPU sec, 52.257 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1203238
	[0000][ M::kt_pipeline] read 1203238 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527863, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 652, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4542)
[0000][PE] mean and std.dev: (786.47, 713.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.61, 60.62)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 808, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2627)
[0000][PE] mean and std.dev: (951.11, 574.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203012 reads in 312.084 CPU sec, 58.296 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1203030
	[0000][ M::kt_pipeline] read 1203030 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527689, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 513, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2617)
[0000][PE] mean and std.dev: (660.95, 669.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.65, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 1083, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3463)
[0000][PE] mean and std.dev: (938.25, 681.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203238 reads in 298.141 CPU sec, 48.208 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1203050
	[0000][ M::kt_pipeline] read 1203050 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527882, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 492, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3990)
[0000][PE] mean and std.dev: (672.20, 632.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.67, 60.66)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 887, 2324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6424)
[0000][PE] mean and std.dev: (1088.06, 941.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203030 reads in 294.614 CPU sec, 48.280 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1203090
	[0000][ M::kt_pipeline] read 1203090 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527602, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 679, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2237)
[0000][PE] mean and std.dev: (584.29, 396.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.58, 60.53)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 1056, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3500)
[0000][PE] mean and std.dev: (1056.16, 750.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203050 reads in 309.837 CPU sec, 64.841 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1203138
	[0000][ M::kt_pipeline] read 1203138 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 527111, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 564, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (604.33, 477.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.57, 60.68)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 1024, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3567)
[0000][PE] mean and std.dev: (1125.11, 717.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203090 reads in 311.720 CPU sec, 60.450 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1202982
	[0000][ M::kt_pipeline] read 1202982 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527547, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (669, 1413, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4536)
[0000][PE] mean and std.dev: (1250.19, 895.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.56, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 643, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3710)
[0000][PE] mean and std.dev: (944.32, 899.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203138 reads in 296.153 CPU sec, 50.789 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1203038
	[0000][ M::kt_pipeline] read 1203038 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527423, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 727, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4450)
[0000][PE] mean and std.dev: (839.83, 853.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.62, 60.76)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 949, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3637)
[0000][PE] mean and std.dev: (1009.26, 624.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202982 reads in 291.062 CPU sec, 44.021 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1203024
	[0000][ M::kt_pipeline] read 1203024 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527049, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 356, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (702.83, 710.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.63, 60.66)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (325, 974, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4930)
[0000][PE] mean and std.dev: (1241.45, 1062.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203038 reads in 297.867 CPU sec, 53.206 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1203060
	[0000][ M::kt_pipeline] read 1203060 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527417, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 931, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3779)
[0000][PE] mean and std.dev: (873.59, 846.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.50, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 616, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4986)
[0000][PE] mean and std.dev: (999.21, 1049.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203024 reads in 311.743 CPU sec, 60.427 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1203030
	[0000][ M::kt_pipeline] read 1203030 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527694, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (546, 1081, 2848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7452)
[0000][PE] mean and std.dev: (1585.79, 1312.62)
[0000][PE] low and high boundaries for proper pairs: (1, 9754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.54, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 393, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5056)
[0000][PE] mean and std.dev: (936.35, 975.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203060 reads in 301.558 CPU sec, 56.238 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1203138
	[0000][ M::kt_pipeline] read 1203138 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527420, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 771, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4126)
[0000][PE] mean and std.dev: (693.82, 443.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.26, 60.54)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 879, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3288)
[0000][PE] mean and std.dev: (814.88, 742.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203030 reads in 308.298 CPU sec, 60.138 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1203094
	[0000][ M::kt_pipeline] read 1203094 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527391, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 839, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3138)
[0000][PE] mean and std.dev: (965.67, 872.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.55, 60.80)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (608, 785, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3851)
[0000][PE] mean and std.dev: (935.79, 607.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203138 reads in 308.850 CPU sec, 44.994 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1203006
	[0000][ M::kt_pipeline] read 1203006 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527319, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 857, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3993)
[0000][PE] mean and std.dev: (859.06, 754.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.45, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 970, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4460)
[0000][PE] mean and std.dev: (963.79, 887.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203094 reads in 303.732 CPU sec, 52.256 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1203118
	[0000][ M::kt_pipeline] read 1203118 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527754, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 859, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5997)
[0000][PE] mean and std.dev: (1547.91, 1638.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.55, 60.63)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 749, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (965.23, 776.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203006 reads in 302.197 CPU sec, 49.009 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1203024
	[0000][ M::kt_pipeline] read 1203024 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 527360, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 732, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2501)
[0000][PE] mean and std.dev: (715.23, 503.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.16, 60.47)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1186, 3788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9594)
[0000][PE] mean and std.dev: (1936.00, 2021.56)
[0000][PE] low and high boundaries for proper pairs: (1, 12497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203118 reads in 298.974 CPU sec, 50.100 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1203194
	[0000][ M::kt_pipeline] read 1203194 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527444, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 335, 909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2271)
[0000][PE] mean and std.dev: (494.68, 417.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.07, 60.66)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1275, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5320)
[0000][PE] mean and std.dev: (1401.57, 855.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203024 reads in 293.113 CPU sec, 52.817 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1203034
	[0000][ M::kt_pipeline] read 1203034 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527885, 0, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 697, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2342)
[0000][PE] mean and std.dev: (622.68, 571.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.21, 60.61)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 937, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2948)
[0000][PE] mean and std.dev: (959.38, 609.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203194 reads in 296.033 CPU sec, 52.364 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1203034
	[0000][ M::kt_pipeline] read 1203034 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 528000, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (814, 874, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2527)
[0000][PE] mean and std.dev: (964.07, 596.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.13, 60.64)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (626, 1064, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3083)
[0000][PE] mean and std.dev: (994.91, 605.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203034 reads in 289.454 CPU sec, 50.344 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1203118
	[0000][ M::kt_pipeline] read 1203118 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527197, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 815, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (874.88, 931.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.23, 60.55)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (480, 1164, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (899.75, 612.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5108)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203034 reads in 289.858 CPU sec, 42.094 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1203074
	[0000][ M::kt_pipeline] read 1203074 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527192, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 1031, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3938)
[0000][PE] mean and std.dev: (951.96, 649.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.67, 60.44)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 313, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4045)
[0000][PE] mean and std.dev: (825.50, 1010.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203118 reads in 293.362 CPU sec, 45.499 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1203030
	[0000][ M::kt_pipeline] read 1203030 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527510, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 399, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3821)
[0000][PE] mean and std.dev: (794.71, 744.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (319.72, 60.16)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 850, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2263)
[0000][PE] mean and std.dev: (870.29, 449.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203074 reads in 297.777 CPU sec, 42.566 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1202984
	[0000][ M::kt_pipeline] read 1202984 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 527130, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 776, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3367)
[0000][PE] mean and std.dev: (745.55, 476.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (319.90, 60.26)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (701, 993, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4976)
[0000][PE] mean and std.dev: (1320.12, 993.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203030 reads in 301.096 CPU sec, 56.660 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1203178
	[0000][ M::kt_pipeline] read 1203178 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 527202, 3, 35)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.20, 60.34)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 1438, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3386)
[0000][PE] mean and std.dev: (1168.67, 706.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4277)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202984 reads in 305.913 CPU sec, 57.093 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1203142
	[0000][ M::kt_pipeline] read 1203142 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527112, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 371, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5035)
[0000][PE] mean and std.dev: (863.00, 966.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.16, 60.23)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 1064, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4570)
[0000][PE] mean and std.dev: (1089.26, 935.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203178 reads in 300.273 CPU sec, 59.775 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1203116
	[0000][ M::kt_pipeline] read 1203116 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527208, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 1082, 2588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7372)
[0000][PE] mean and std.dev: (1405.06, 1596.06)
[0000][PE] low and high boundaries for proper pairs: (1, 9764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.22, 60.24)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 907, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2868)
[0000][PE] mean and std.dev: (749.44, 661.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203142 reads in 301.618 CPU sec, 47.089 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1203108
	[0000][ M::kt_pipeline] read 1203108 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527374, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 674, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3896)
[0000][PE] mean and std.dev: (972.56, 917.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.17, 60.19)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 285, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2863)
[0000][PE] mean and std.dev: (452.83, 417.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203116 reads in 303.455 CPU sec, 54.879 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1203158
	[0000][ M::kt_pipeline] read 1203158 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527427, 10, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 1322, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5024)
[0000][PE] mean and std.dev: (1154.94, 811.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.46, 60.39)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (213, 1304, 7310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 21504)
[0000][PE] mean and std.dev: (3240.00, 3341.04)
[0000][PE] low and high boundaries for proper pairs: (1, 28601)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1322, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4163)
[0000][PE] mean and std.dev: (1321.41, 730.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203108 reads in 298.395 CPU sec, 56.169 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1203110
	[0000][ M::kt_pipeline] read 1203110 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527397, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 929, 2691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7529)
[0000][PE] mean and std.dev: (1440.38, 1639.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.61, 60.50)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (635, 1090, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (986.95, 648.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203158 reads in 296.645 CPU sec, 49.263 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1202990
	[0000][ M::kt_pipeline] read 1202990 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527340, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 797, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3496)
[0000][PE] mean and std.dev: (818.58, 721.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.74, 60.31)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 701, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2586)
[0000][PE] mean and std.dev: (680.41, 521.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203110 reads in 296.726 CPU sec, 52.480 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1203112
	[0000][ M::kt_pipeline] read 1203112 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 528057, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (771, 1261, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4257)
[0000][PE] mean and std.dev: (1300.70, 1032.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.79, 60.31)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 725, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5426)
[0000][PE] mean and std.dev: (1136.58, 1124.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202990 reads in 302.207 CPU sec, 58.236 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1203194
	[0000][ M::kt_pipeline] read 1203194 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527236, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 685, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3878)
[0000][PE] mean and std.dev: (734.94, 508.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.73, 60.50)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 920, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (62, 1922)
[0000][PE] mean and std.dev: (947.20, 332.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203112 reads in 293.344 CPU sec, 48.438 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1203044
	[0000][ M::kt_pipeline] read 1203044 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527190, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 1113, 3460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9918)
[0000][PE] mean and std.dev: (1812.40, 1849.08)
[0000][PE] low and high boundaries for proper pairs: (1, 13147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.80, 60.40)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1142, 2763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6705)
[0000][PE] mean and std.dev: (1757.04, 1290.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203194 reads in 291.739 CPU sec, 52.650 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1203004
	[0000][ M::kt_pipeline] read 1203004 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527688, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 963, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2997)
[0000][PE] mean and std.dev: (863.46, 563.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.86, 60.43)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 827, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4148)
[0000][PE] mean and std.dev: (934.53, 596.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203044 reads in 288.712 CPU sec, 42.661 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1203128
	[0000][ M::kt_pipeline] read 1203128 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 528281, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 993, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (901.50, 631.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.71, 60.41)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (709, 994, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3121)
[0000][PE] mean and std.dev: (941.15, 533.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203004 reads in 294.296 CPU sec, 55.258 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1203098
	[0000][ M::kt_pipeline] read 1203098 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527347, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (108, 441, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2733)
[0000][PE] mean and std.dev: (505.19, 502.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.75, 60.34)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (374, 1046, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4634)
[0000][PE] mean and std.dev: (1207.67, 942.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203128 reads in 298.132 CPU sec, 53.448 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1203086
	[0000][ M::kt_pipeline] read 1203086 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527665, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 320, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4616)
[0000][PE] mean and std.dev: (856.57, 1018.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.86, 60.61)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (415, 1271, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4561)
[0000][PE] mean and std.dev: (1062.45, 716.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203098 reads in 297.712 CPU sec, 53.183 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1203158
	[0000][ M::kt_pipeline] read 1203158 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527368, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 821, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4489)
[0000][PE] mean and std.dev: (948.20, 793.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.79, 60.43)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1084, 3027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7699)
[0000][PE] mean and std.dev: (1471.11, 1393.10)
[0000][PE] low and high boundaries for proper pairs: (1, 10035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203086 reads in 293.556 CPU sec, 51.377 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1203052
	[0000][ M::kt_pipeline] read 1203052 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527660, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 1199, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4734)
[0000][PE] mean and std.dev: (920.71, 668.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.97, 60.41)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (452, 741, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2627)
[0000][PE] mean and std.dev: (692.22, 371.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203158 reads in 293.374 CPU sec, 45.087 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1203034
	[0000][ M::kt_pipeline] read 1203034 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 527481, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 345, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2891)
[0000][PE] mean and std.dev: (652.00, 663.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.82, 60.45)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 737, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2334)
[0000][PE] mean and std.dev: (724.64, 503.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203052 reads in 284.986 CPU sec, 41.045 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1203144
	[0000][ M::kt_pipeline] read 1203144 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 527291, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 326, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1374)
[0000][PE] mean and std.dev: (278.12, 138.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.82, 60.36)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 815, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2897)
[0000][PE] mean and std.dev: (759.15, 538.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203034 reads in 299.104 CPU sec, 62.068 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1203046
	[0000][ M::kt_pipeline] read 1203046 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527707, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 692, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2853)
[0000][PE] mean and std.dev: (631.06, 499.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.87, 60.41)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (459, 950, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4323)
[0000][PE] mean and std.dev: (918.42, 767.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203144 reads in 292.111 CPU sec, 56.102 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1203154
	[0000][ M::kt_pipeline] read 1203154 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527432, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 504, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2781)
[0000][PE] mean and std.dev: (602.50, 464.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.94, 60.32)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 1355, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4118)
[0000][PE] mean and std.dev: (1298.31, 884.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203046 reads in 293.231 CPU sec, 59.563 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1203102
	[0000][ M::kt_pipeline] read 1203102 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527835, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1181, 1561, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4097)
[0000][PE] mean and std.dev: (1563.74, 798.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.89, 60.47)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 695, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2603)
[0000][PE] mean and std.dev: (746.54, 656.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203154 reads in 293.807 CPU sec, 50.844 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1202990
	[0000][ M::kt_pipeline] read 1202990 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527521, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 508, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (642.33, 522.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.82, 60.51)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 1079, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3189)
[0000][PE] mean and std.dev: (806.28, 468.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203102 reads in 291.785 CPU sec, 47.522 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1203140
	[0000][ M::kt_pipeline] read 1203140 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527300, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 1237, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6110)
[0000][PE] mean and std.dev: (1192.56, 1257.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.91, 60.43)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (662, 1166, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (1009.19, 682.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202990 reads in 287.599 CPU sec, 42.979 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1203152
	[0000][ M::kt_pipeline] read 1203152 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 527045, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 1089, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6123)
[0000][PE] mean and std.dev: (1393.19, 1435.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.95, 60.41)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 680, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (703.76, 521.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203140 reads in 295.869 CPU sec, 45.899 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1203072
	[0000][ M::kt_pipeline] read 1203072 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527223, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 938, 2596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7340)
[0000][PE] mean and std.dev: (1650.86, 1915.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.77, 60.45)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 873, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4009)
[0000][PE] mean and std.dev: (876.79, 592.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203152 reads in 300.720 CPU sec, 53.541 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1203112
	[0000][ M::kt_pipeline] read 1203112 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527434, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 774, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4140)
[0000][PE] mean and std.dev: (965.29, 941.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.63, 60.58)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 335, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2260)
[0000][PE] mean and std.dev: (562.79, 448.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203072 reads in 293.264 CPU sec, 51.934 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1202882
	[0000][ M::kt_pipeline] read 1202882 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527718, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 879, 4568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13264)
[0000][PE] mean and std.dev: (1983.12, 2388.02)
[0000][PE] low and high boundaries for proper pairs: (1, 17612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.76, 60.52)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 341, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2583)
[0000][PE] mean and std.dev: (594.12, 512.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203112 reads in 293.324 CPU sec, 47.594 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1203202
	[0000][ M::kt_pipeline] read 1203202 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527388, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 831, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5450)
[0000][PE] mean and std.dev: (1138.68, 885.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.86, 60.45)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 575, 3722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10712)
[0000][PE] mean and std.dev: (1310.54, 1410.51)
[0000][PE] low and high boundaries for proper pairs: (1, 14207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202882 reads in 289.565 CPU sec, 45.179 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1203246
	[0000][ M::kt_pipeline] read 1203246 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527332, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 989, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4410)
[0000][PE] mean and std.dev: (1024.84, 992.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.78, 60.36)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (176, 351, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2525)
[0000][PE] mean and std.dev: (561.52, 478.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203202 reads in 291.769 CPU sec, 34.831 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1203086
	[0000][ M::kt_pipeline] read 1203086 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527182, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 1140, 3458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9764)
[0000][PE] mean and std.dev: (1879.38, 2024.00)
[0000][PE] low and high boundaries for proper pairs: (1, 12917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.86, 60.52)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 1134, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4633)
[0000][PE] mean and std.dev: (1232.19, 1044.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203246 reads in 294.875 CPU sec, 49.059 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1203078
	[0000][ M::kt_pipeline] read 1203078 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 527833, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 270, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4277)
[0000][PE] mean and std.dev: (859.00, 1092.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.78, 60.50)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 818, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4319)
[0000][PE] mean and std.dev: (971.35, 874.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203086 reads in 294.996 CPU sec, 64.032 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1203100
	[0000][ M::kt_pipeline] read 1203100 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527429, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 877, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6093)
[0000][PE] mean and std.dev: (1100.19, 940.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.04, 60.45)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (655, 1028, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5062)
[0000][PE] mean and std.dev: (1359.00, 1007.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203078 reads in 291.154 CPU sec, 56.000 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1202994
	[0000][ M::kt_pipeline] read 1202994 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527252, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 356, 630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1378)
[0000][PE] mean and std.dev: (316.17, 142.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.11, 60.53)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 1057, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4997)
[0000][PE] mean and std.dev: (1342.94, 1143.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203100 reads in 291.104 CPU sec, 44.314 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1203036
	[0000][ M::kt_pipeline] read 1203036 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 527622, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 726, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2822)
[0000][PE] mean and std.dev: (734.33, 446.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.06, 60.44)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (378, 775, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2988)
[0000][PE] mean and std.dev: (860.23, 542.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202994 reads in 294.056 CPU sec, 57.179 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1203102
	[0000][ M::kt_pipeline] read 1203102 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527507, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 893, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2895)
[0000][PE] mean and std.dev: (945.19, 593.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.46, 60.41)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1076, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5181)
[0000][PE] mean and std.dev: (1463.25, 1141.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203036 reads in 295.330 CPU sec, 44.140 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1203082
	[0000][ M::kt_pipeline] read 1203082 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 527595, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (803, 1217, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3251)
[0000][PE] mean and std.dev: (984.82, 519.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.49, 60.66)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 748, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2912)
[0000][PE] mean and std.dev: (733.00, 609.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203102 reads in 302.088 CPU sec, 58.864 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1203066
	[0000][ M::kt_pipeline] read 1203066 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527459, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 949, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6174)
[0000][PE] mean and std.dev: (1394.29, 1489.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.34, 60.40)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (495, 1136, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3348)
[0000][PE] mean and std.dev: (924.68, 480.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203082 reads in 298.216 CPU sec, 51.040 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1203132
	[0000][ M::kt_pipeline] read 1203132 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 526944, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 628, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6616)
[0000][PE] mean and std.dev: (1351.29, 1411.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.10, 60.33)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 831, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (990.95, 990.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203066 reads in 303.695 CPU sec, 56.569 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1202916
	[0000][ M::kt_pipeline] read 1202916 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527224, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 490, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2118)
[0000][PE] mean and std.dev: (685.87, 576.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.24, 60.36)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1321, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5236)
[0000][PE] mean and std.dev: (1613.04, 1336.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203132 reads in 295.378 CPU sec, 65.094 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1203026
	[0000][ M::kt_pipeline] read 1203026 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527658, 6, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 1202, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6848)
[0000][PE] mean and std.dev: (1253.61, 1183.13)
[0000][PE] low and high boundaries for proper pairs: (1, 9074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.31, 60.39)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (361, 804, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4141)
[0000][PE] mean and std.dev: (1044.79, 910.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202916 reads in 292.576 CPU sec, 48.141 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1203022
	[0000][ M::kt_pipeline] read 1203022 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527177, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 584, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4128)
[0000][PE] mean and std.dev: (805.87, 783.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.19, 60.38)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1240, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (1257.85, 839.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203026 reads in 303.688 CPU sec, 53.573 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1202980
	[0000][ M::kt_pipeline] read 1202980 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527827, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 613, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3470)
[0000][PE] mean and std.dev: (755.90, 749.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.18, 60.32)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (269, 1603, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6461)
[0000][PE] mean and std.dev: (1482.21, 1109.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203022 reads in 302.320 CPU sec, 48.818 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1203036
	[0000][ M::kt_pipeline] read 1203036 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527619, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 891, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3740)
[0000][PE] mean and std.dev: (852.50, 578.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.10, 60.42)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 416, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4802)
[0000][PE] mean and std.dev: (1073.22, 1208.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202980 reads in 293.577 CPU sec, 46.109 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1203020
	[0000][ M::kt_pipeline] read 1203020 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527342, 6, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 706, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5099)
[0000][PE] mean and std.dev: (1102.79, 829.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.60, 60.74)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 620, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (743.54, 614.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203036 reads in 296.226 CPU sec, 49.680 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1203218
	[0000][ M::kt_pipeline] read 1203218 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 526971, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 313, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2837)
[0000][PE] mean and std.dev: (621.68, 647.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.35, 60.59)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (669, 853, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4470)
[0000][PE] mean and std.dev: (1257.06, 1228.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203020 reads in 294.194 CPU sec, 49.204 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1203032
	[0000][ M::kt_pipeline] read 1203032 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527218, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 340, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3017)
[0000][PE] mean and std.dev: (498.43, 383.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.36, 60.55)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 833, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2090)
[0000][PE] mean and std.dev: (734.92, 355.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203218 reads in 292.268 CPU sec, 52.840 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1203086
	[0000][ M::kt_pipeline] read 1203086 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527197, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 282, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (595.53, 527.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.25, 60.51)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 370, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4894)
[0000][PE] mean and std.dev: (992.26, 1288.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203032 reads in 295.779 CPU sec, 59.051 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1203058
	[0000][ M::kt_pipeline] read 1203058 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527392, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 671, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5409)
[0000][PE] mean and std.dev: (1025.94, 1186.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.24, 60.56)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 733, 2367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6611)
[0000][PE] mean and std.dev: (1251.18, 1303.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203086 reads in 301.061 CPU sec, 60.893 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1203178
	[0000][ M::kt_pipeline] read 1203178 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527285, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 1002, 2041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5643)
[0000][PE] mean and std.dev: (1233.22, 1099.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.22, 60.52)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (399, 740, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4689)
[0000][PE] mean and std.dev: (1168.00, 1055.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203058 reads in 304.683 CPU sec, 60.338 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1202982
	[0000][ M::kt_pipeline] read 1202982 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527591, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 272, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3460)
[0000][PE] mean and std.dev: (613.60, 620.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.31, 60.45)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1680, 3200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7538)
[0000][PE] mean and std.dev: (2180.88, 1690.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203178 reads in 293.975 CPU sec, 52.161 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000273, nseq: 1202966
	[0000][ M::kt_pipeline] read 1202966 sequences (180000273 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527682, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (798, 1284, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3198)
[0000][PE] mean and std.dev: (1141.12, 723.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.18, 60.62)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 1458, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6541)
[0000][PE] mean and std.dev: (1504.88, 1535.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202982 reads in 291.203 CPU sec, 51.688 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1202956
	[0000][ M::kt_pipeline] read 1202956 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527661, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (860, 1377, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5210)
[0000][PE] mean and std.dev: (1546.59, 971.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.19, 60.46)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 378, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3138)
[0000][PE] mean and std.dev: (725.30, 677.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202966 reads in 295.846 CPU sec, 62.971 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1202940
	[0000][ M::kt_pipeline] read 1202940 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527214, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 223, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2573)
[0000][PE] mean and std.dev: (517.44, 565.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.25, 60.49)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (506, 966, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3575)
[0000][PE] mean and std.dev: (1016.81, 691.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202956 reads in 300.131 CPU sec, 49.765 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1202982
	[0000][ M::kt_pipeline] read 1202982 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527706, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 410, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (643.31, 703.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.08, 60.35)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (490, 781, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1942)
[0000][PE] mean and std.dev: (729.56, 362.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202940 reads in 290.508 CPU sec, 48.979 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1203024
	[0000][ M::kt_pipeline] read 1203024 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527496, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 753, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4546)
[0000][PE] mean and std.dev: (1014.95, 965.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.24, 60.52)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (588, 1087, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (1130.53, 627.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202982 reads in 303.388 CPU sec, 60.353 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1202998
	[0000][ M::kt_pipeline] read 1202998 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527746, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 706, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3039)
[0000][PE] mean and std.dev: (646.72, 491.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.95, 60.46)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1447, 2585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6275)
[0000][PE] mean and std.dev: (1616.30, 1167.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203024 reads in 297.883 CPU sec, 54.273 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1202896
	[0000][ M::kt_pipeline] read 1202896 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527463, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 721, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (618.44, 522.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.04, 60.54)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (506, 919, 2792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7364)
[0000][PE] mean and std.dev: (1409.86, 1118.44)
[0000][PE] low and high boundaries for proper pairs: (1, 9650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202998 reads in 291.625 CPU sec, 48.174 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1203100
	[0000][ M::kt_pipeline] read 1203100 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527501, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 351, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2966)
[0000][PE] mean and std.dev: (564.40, 512.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.16, 60.43)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 378, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2695)
[0000][PE] mean and std.dev: (618.00, 508.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202896 reads in 292.955 CPU sec, 57.560 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1202988
	[0000][ M::kt_pipeline] read 1202988 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527379, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 683, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3126)
[0000][PE] mean and std.dev: (659.54, 541.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.02, 60.40)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (593, 986, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (878.88, 444.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203100 reads in 289.141 CPU sec, 47.499 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1203002
	[0000][ M::kt_pipeline] read 1203002 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527266, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 598, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4022)
[0000][PE] mean and std.dev: (828.29, 618.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.96, 60.45)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (513, 1089, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3405)
[0000][PE] mean and std.dev: (1189.35, 796.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202988 reads in 303.422 CPU sec, 63.588 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1202990
	[0000][ M::kt_pipeline] read 1202990 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527648, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 391, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (644.58, 574.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.04, 60.45)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (314, 1135, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (866.17, 606.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203002 reads in 291.410 CPU sec, 52.295 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1202992
	[0000][ M::kt_pipeline] read 1202992 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527650, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 440, 892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2174)
[0000][PE] mean and std.dev: (606.13, 509.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.12, 60.45)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (639, 889, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (1020.48, 620.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202990 reads in 284.458 CPU sec, 44.258 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1203042
	[0000][ M::kt_pipeline] read 1203042 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527406, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 774, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3745)
[0000][PE] mean and std.dev: (780.67, 603.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.14, 60.53)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (387, 952, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3525)
[0000][PE] mean and std.dev: (897.28, 620.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202992 reads in 300.746 CPU sec, 47.631 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1203108
	[0000][ M::kt_pipeline] read 1203108 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527404, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 849, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (913.14, 756.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.04, 60.55)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (404, 941, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3098)
[0000][PE] mean and std.dev: (895.60, 553.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203042 reads in 302.833 CPU sec, 63.711 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1203018
	[0000][ M::kt_pipeline] read 1203018 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527511, 2, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 607, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2802)
[0000][PE] mean and std.dev: (701.07, 656.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.02, 60.43)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 493, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2645)
[0000][PE] mean and std.dev: (684.03, 558.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203108 reads in 302.833 CPU sec, 53.112 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1203000
	[0000][ M::kt_pipeline] read 1203000 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527705, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 314, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2394)
[0000][PE] mean and std.dev: (509.60, 429.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.94, 60.54)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (164, 946, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4937)
[0000][PE] mean and std.dev: (987.95, 927.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203018 reads in 294.764 CPU sec, 53.110 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1202994
	[0000][ M::kt_pipeline] read 1202994 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527538, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 598, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6670)
[0000][PE] mean and std.dev: (1073.27, 1428.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.93, 60.54)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 498, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3618)
[0000][PE] mean and std.dev: (849.52, 727.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203000 reads in 288.787 CPU sec, 49.693 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1203140
	[0000][ M::kt_pipeline] read 1203140 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527292, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 1071, 3776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10906)
[0000][PE] mean and std.dev: (2058.13, 2299.06)
[0000][PE] low and high boundaries for proper pairs: (1, 14471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.85, 60.62)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 1194, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3588)
[0000][PE] mean and std.dev: (1098.20, 744.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202994 reads in 292.376 CPU sec, 63.418 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1203026
	[0000][ M::kt_pipeline] read 1203026 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527284, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 749, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (780.65, 744.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.10, 60.48)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 1005, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4499)
[0000][PE] mean and std.dev: (1072.60, 995.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203140 reads in 286.718 CPU sec, 42.038 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1203164
	[0000][ M::kt_pipeline] read 1203164 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 527406, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 554, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2419)
[0000][PE] mean and std.dev: (533.36, 459.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.91, 60.47)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (393, 992, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (993.62, 618.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203026 reads in 283.337 CPU sec, 37.163 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1203128
	[0000][ M::kt_pipeline] read 1203128 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527205, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (459, 1110, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4617)
[0000][PE] mean and std.dev: (1111.53, 775.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.88, 60.41)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 900, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (1057.86, 971.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203164 reads in 298.252 CPU sec, 51.667 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1203032
	[0000][ M::kt_pipeline] read 1203032 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527647, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1313, 2934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8052)
[0000][PE] mean and std.dev: (1621.85, 1416.64)
[0000][PE] low and high boundaries for proper pairs: (1, 10611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.93, 60.78)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (592, 1193, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5482)
[0000][PE] mean and std.dev: (1348.39, 1085.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203128 reads in 290.290 CPU sec, 50.031 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1203026
	[0000][ M::kt_pipeline] read 1203026 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 526995, 10, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 312, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4243)
[0000][PE] mean and std.dev: (595.15, 569.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.92, 60.52)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (601, 1567, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4558)
[0000][PE] mean and std.dev: (1528.30, 1182.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6256)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (593, 1039, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (1223.61, 910.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203032 reads in 295.237 CPU sec, 54.962 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1202818
	[0000][ M::kt_pipeline] read 1202818 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527712, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1387, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4628)
[0000][PE] mean and std.dev: (1331.74, 939.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.95, 60.46)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 727, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3777)
[0000][PE] mean and std.dev: (903.42, 770.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203026 reads in 296.134 CPU sec, 53.838 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1203186
	[0000][ M::kt_pipeline] read 1203186 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527503, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 452, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2195)
[0000][PE] mean and std.dev: (624.59, 541.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.93, 60.47)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (217, 704, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (728.64, 495.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202818 reads in 297.054 CPU sec, 53.139 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1203066
	[0000][ M::kt_pipeline] read 1203066 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527468, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 963, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4855)
[0000][PE] mean and std.dev: (1266.38, 1177.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.76, 60.53)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (474, 982, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4689)
[0000][PE] mean and std.dev: (1191.46, 828.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203186 reads in 287.197 CPU sec, 50.546 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1202996
	[0000][ M::kt_pipeline] read 1202996 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527289, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 381, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4075)
[0000][PE] mean and std.dev: (760.88, 938.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.64, 60.52)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (513, 928, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3675)
[0000][PE] mean and std.dev: (995.44, 659.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203066 reads in 296.649 CPU sec, 61.803 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1202884
	[0000][ M::kt_pipeline] read 1202884 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527263, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 585, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3820)
[0000][PE] mean and std.dev: (794.81, 696.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.78, 60.60)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (377, 990, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5258)
[0000][PE] mean and std.dev: (1136.81, 903.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202996 reads in 287.532 CPU sec, 48.366 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1202754
	[0000][ M::kt_pipeline] read 1202754 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 527417, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 812, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2900)
[0000][PE] mean and std.dev: (658.83, 483.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.71, 60.47)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 818, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2430)
[0000][PE] mean and std.dev: (782.64, 482.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202884 reads in 294.343 CPU sec, 42.240 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1202716
	[0000][ M::kt_pipeline] read 1202716 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 526470, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 727, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4703)
[0000][PE] mean and std.dev: (879.43, 788.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.10, 60.04)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (573, 775, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3561)
[0000][PE] mean and std.dev: (995.79, 590.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202754 reads in 315.883 CPU sec, 49.414 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1202774
	[0000][ M::kt_pipeline] read 1202774 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 526268, 0, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (578, 720, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (1039.52, 729.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.05, 60.17)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 828, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4482)
[0000][PE] mean and std.dev: (970.39, 930.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202716 reads in 322.869 CPU sec, 52.626 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1202696
	[0000][ M::kt_pipeline] read 1202696 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 526428, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 619, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6695)
[0000][PE] mean and std.dev: (1005.76, 955.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.42, 60.05)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 767, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6087)
[0000][PE] mean and std.dev: (1334.27, 1459.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202774 reads in 328.323 CPU sec, 70.003 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1202740
	[0000][ M::kt_pipeline] read 1202740 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 526001, 2, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 426, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2739)
[0000][PE] mean and std.dev: (460.00, 393.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.65, 60.25)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 732, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (934.52, 807.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202696 reads in 324.127 CPU sec, 52.523 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1202710
	[0000][ M::kt_pipeline] read 1202710 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 526344, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 779, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3126)
[0000][PE] mean and std.dev: (771.33, 711.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.78, 60.26)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 1171, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4071)
[0000][PE] mean and std.dev: (1176.00, 711.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202740 reads in 317.016 CPU sec, 57.313 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1202762
	[0000][ M::kt_pipeline] read 1202762 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 526815, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 319, 517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1123)
[0000][PE] mean and std.dev: (305.05, 152.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.97, 60.38)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 860, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (876.31, 838.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202710 reads in 308.863 CPU sec, 40.639 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1202640
	[0000][ M::kt_pipeline] read 1202640 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 526844, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 445, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4370)
[0000][PE] mean and std.dev: (917.43, 912.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.04, 60.26)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (365, 1180, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4964)
[0000][PE] mean and std.dev: (1183.80, 851.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202762 reads in 324.659 CPU sec, 54.253 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1202804
	[0000][ M::kt_pipeline] read 1202804 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 526401, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 770, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5227)
[0000][PE] mean and std.dev: (896.14, 1004.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.95, 60.32)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (324, 696, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (640.18, 414.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202640 reads in 318.477 CPU sec, 61.860 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1202726
	[0000][ M::kt_pipeline] read 1202726 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527045, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 1329, 4885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14155)
[0000][PE] mean and std.dev: (2134.29, 2176.39)
[0000][PE] low and high boundaries for proper pairs: (1, 18790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.11, 60.35)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (397, 896, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (992.30, 607.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202804 reads in 321.065 CPU sec, 52.939 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1202722
	[0000][ M::kt_pipeline] read 1202722 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 526873, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 867, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4369)
[0000][PE] mean and std.dev: (1084.00, 955.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.88, 60.32)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 338, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2290)
[0000][PE] mean and std.dev: (620.27, 477.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202726 reads in 305.005 CPU sec, 37.106 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1202844
	[0000][ M::kt_pipeline] read 1202844 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 527064, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 294, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3754)
[0000][PE] mean and std.dev: (604.64, 581.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.30, 60.26)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1152, 2963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7095)
[0000][PE] mean and std.dev: (1798.83, 1650.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202722 reads in 304.280 CPU sec, 34.479 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1202660
	[0000][ M::kt_pipeline] read 1202660 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527116, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 854, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (946.05, 720.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.07, 60.29)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (420, 1027, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3702)
[0000][PE] mean and std.dev: (832.89, 490.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202844 reads in 319.758 CPU sec, 57.304 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1202758
	[0000][ M::kt_pipeline] read 1202758 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527152, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 288, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2470)
[0000][PE] mean and std.dev: (501.18, 479.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.07, 60.24)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1315, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5118)
[0000][PE] mean and std.dev: (1410.78, 1063.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202660 reads in 311.039 CPU sec, 53.054 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1202768
	[0000][ M::kt_pipeline] read 1202768 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527373, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 252, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2647)
[0000][PE] mean and std.dev: (496.12, 518.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.12, 60.44)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 856, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (970.85, 836.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202758 reads in 311.031 CPU sec, 52.928 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1202682
	[0000][ M::kt_pipeline] read 1202682 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 527519, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 370, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2794)
[0000][PE] mean and std.dev: (600.04, 586.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.47, 60.35)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (134, 774, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (750.50, 783.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202768 reads in 314.123 CPU sec, 54.392 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1202670
	[0000][ M::kt_pipeline] read 1202670 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 526929, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 1179, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6110)
[0000][PE] mean and std.dev: (1337.63, 1078.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.33, 60.30)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (55, 419, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (749.20, 800.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4483)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 635, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4311)
[0000][PE] mean and std.dev: (869.58, 832.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202682 reads in 318.176 CPU sec, 53.853 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1202712
	[0000][ M::kt_pipeline] read 1202712 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 527079, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 548, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (752.11, 756.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.23, 60.38)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (480, 819, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3555)
[0000][PE] mean and std.dev: (1007.91, 806.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202670 reads in 308.845 CPU sec, 41.853 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1202882
	[0000][ M::kt_pipeline] read 1202882 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 526629, 0, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 766, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (914.83, 768.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.31, 60.30)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (350, 1030, 2542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6926)
[0000][PE] mean and std.dev: (1329.12, 1084.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202712 reads in 318.157 CPU sec, 53.381 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1202818
	[0000][ M::kt_pipeline] read 1202818 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 526530, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 1058, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4324)
[0000][PE] mean and std.dev: (1055.25, 766.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.14, 60.26)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 936, 2952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8298)
[0000][PE] mean and std.dev: (2032.07, 2305.86)
[0000][PE] low and high boundaries for proper pairs: (1, 11256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202882 reads in 321.323 CPU sec, 67.295 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1202660
	[0000][ M::kt_pipeline] read 1202660 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 526452, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 1156, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (975.22, 578.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.19, 60.36)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (405, 912, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5250)
[0000][PE] mean and std.dev: (1097.25, 728.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202818 reads in 336.062 CPU sec, 57.454 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1202768
	[0000][ M::kt_pipeline] read 1202768 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 526407, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 823, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5103)
[0000][PE] mean and std.dev: (1019.85, 989.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.05, 60.15)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 803, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4123)
[0000][PE] mean and std.dev: (949.54, 879.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5405)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202660 reads in 338.097 CPU sec, 54.559 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1202822
	[0000][ M::kt_pipeline] read 1202822 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525341, 0, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 432, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2375)
[0000][PE] mean and std.dev: (621.21, 511.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.88, 60.06)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 579, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3039)
[0000][PE] mean and std.dev: (773.46, 611.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202768 reads in 350.271 CPU sec, 49.167 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1202752
	[0000][ M::kt_pipeline] read 1202752 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525350, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 372, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2307)
[0000][PE] mean and std.dev: (353.71, 305.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 517)
[0000][PE] mean and std.dev: (320.48, 59.85)
[0000][PE] low and high boundaries for proper pairs: (43, 596)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (492, 1242, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5874)
[0000][PE] mean and std.dev: (1337.00, 986.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202822 reads in 344.290 CPU sec, 48.021 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1202794
	[0000][ M::kt_pipeline] read 1202794 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524405, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 655, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2876)
[0000][PE] mean and std.dev: (770.43, 778.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.16, 59.91)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (177, 1000, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3411)
[0000][PE] mean and std.dev: (854.28, 739.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202752 reads in 351.076 CPU sec, 61.514 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1202788
	[0000][ M::kt_pipeline] read 1202788 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525717, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 974, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4714)
[0000][PE] mean and std.dev: (1032.00, 794.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.42, 59.89)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1089, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (1133.76, 624.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202794 reads in 349.138 CPU sec, 56.470 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1202788
	[0000][ M::kt_pipeline] read 1202788 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 525601, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 480, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (793.31, 797.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 517)
[0000][PE] mean and std.dev: (320.55, 59.83)
[0000][PE] low and high boundaries for proper pairs: (43, 596)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (182, 1082, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4712)
[0000][PE] mean and std.dev: (1036.71, 855.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202788 reads in 356.624 CPU sec, 61.927 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1202946
	[0000][ M::kt_pipeline] read 1202946 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 525602, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 289, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (621.62, 620.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.51, 59.94)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 964, 2884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8226)
[0000][PE] mean and std.dev: (1876.57, 2249.03)
[0000][PE] low and high boundaries for proper pairs: (1, 10897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202788 reads in 350.444 CPU sec, 59.824 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1202870
	[0000][ M::kt_pipeline] read 1202870 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 525271, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 424, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5893)
[0000][PE] mean and std.dev: (1026.20, 1187.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 517)
[0000][PE] mean and std.dev: (320.60, 60.01)
[0000][PE] low and high boundaries for proper pairs: (43, 596)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1220, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4262)
[0000][PE] mean and std.dev: (1171.85, 644.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202946 reads in 340.717 CPU sec, 54.370 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1202836
	[0000][ M::kt_pipeline] read 1202836 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527004, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 645, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4206)
[0000][PE] mean and std.dev: (857.58, 711.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.61, 60.51)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (714, 1048, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5274)
[0000][PE] mean and std.dev: (1318.79, 888.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202870 reads in 318.634 CPU sec, 57.362 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1202900
	[0000][ M::kt_pipeline] read 1202900 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 526980, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 933, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3826)
[0000][PE] mean and std.dev: (924.09, 629.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.06, 60.49)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1450, 2598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6206)
[0000][PE] mean and std.dev: (1648.33, 1262.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202836 reads in 304.400 CPU sec, 53.489 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1202804
	[0000][ M::kt_pipeline] read 1202804 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 526963, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 594, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2459)
[0000][PE] mean and std.dev: (663.12, 543.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.07, 60.44)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1167, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4689)
[0000][PE] mean and std.dev: (1447.25, 959.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202900 reads in 301.088 CPU sec, 55.456 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1202836
	[0000][ M::kt_pipeline] read 1202836 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 526993, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 892, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4380)
[0000][PE] mean and std.dev: (1009.33, 761.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.24, 60.67)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 387, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2661)
[0000][PE] mean and std.dev: (602.60, 481.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202804 reads in 308.523 CPU sec, 53.334 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1202822
	[0000][ M::kt_pipeline] read 1202822 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527074, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 265, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2735)
[0000][PE] mean and std.dev: (544.53, 585.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.15, 60.57)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1671, 3071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7663)
[0000][PE] mean and std.dev: (1999.62, 1380.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202836 reads in 309.284 CPU sec, 50.355 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1202950
	[0000][ M::kt_pipeline] read 1202950 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527749, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 1183, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5015)
[0000][PE] mean and std.dev: (1274.62, 1073.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.05, 60.60)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 641, 1293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3421)
[0000][PE] mean and std.dev: (758.54, 599.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202822 reads in 301.521 CPU sec, 51.453 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1202804
	[0000][ M::kt_pipeline] read 1202804 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527535, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 933, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (852.14, 644.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.28, 60.57)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (587, 964, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5390)
[0000][PE] mean and std.dev: (1338.45, 1276.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202950 reads in 301.254 CPU sec, 52.886 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1202890
	[0000][ M::kt_pipeline] read 1202890 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 526884, 3, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 819, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3465)
[0000][PE] mean and std.dev: (898.96, 845.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.49, 60.82)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (182, 281, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3821)
[0000][PE] mean and std.dev: (887.19, 963.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202804 reads in 300.881 CPU sec, 54.122 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1202844
	[0000][ M::kt_pipeline] read 1202844 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527396, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 690, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3153)
[0000][PE] mean and std.dev: (710.00, 541.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.15, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 1107, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3296)
[0000][PE] mean and std.dev: (1005.52, 551.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202890 reads in 294.591 CPU sec, 47.840 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1202734
	[0000][ M::kt_pipeline] read 1202734 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527455, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 1104, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4130)
[0000][PE] mean and std.dev: (924.53, 692.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.23, 60.60)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (509, 1938, 2844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7514)
[0000][PE] mean and std.dev: (2074.76, 1779.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202844 reads in 300.921 CPU sec, 50.170 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1202836
	[0000][ M::kt_pipeline] read 1202836 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527760, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 611, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5173)
[0000][PE] mean and std.dev: (961.28, 771.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.35, 60.78)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 869, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3272)
[0000][PE] mean and std.dev: (943.95, 744.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4254)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202734 reads in 300.361 CPU sec, 56.349 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1202874
	[0000][ M::kt_pipeline] read 1202874 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527355, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 425, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3260)
[0000][PE] mean and std.dev: (677.56, 681.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.48, 60.84)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (375, 1008, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (996.43, 741.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202836 reads in 296.137 CPU sec, 48.691 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1202774
	[0000][ M::kt_pipeline] read 1202774 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527165, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 491, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5363)
[0000][PE] mean and std.dev: (932.41, 895.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.45, 60.80)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 839, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (980.89, 762.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202874 reads in 297.218 CPU sec, 44.356 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1202822
	[0000][ M::kt_pipeline] read 1202822 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527684, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 297, 628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1398)
[0000][PE] mean and std.dev: (306.58, 159.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.48, 60.86)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (324, 1116, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5592)
[0000][PE] mean and std.dev: (1156.48, 811.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202774 reads in 294.485 CPU sec, 44.802 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1202750
	[0000][ M::kt_pipeline] read 1202750 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527127, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 838, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4123)
[0000][PE] mean and std.dev: (907.00, 616.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.51, 60.87)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (658, 1412, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (1257.77, 725.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202822 reads in 307.243 CPU sec, 52.322 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1202788
	[0000][ M::kt_pipeline] read 1202788 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527479, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 331, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3057)
[0000][PE] mean and std.dev: (525.39, 480.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.49, 60.83)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1221, 3037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7103)
[0000][PE] mean and std.dev: (1662.37, 1039.22)
[0000][PE] low and high boundaries for proper pairs: (1, 9136)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202750 reads in 285.319 CPU sec, 34.338 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1202890
	[0000][ M::kt_pipeline] read 1202890 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527467, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 1383, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5410)
[0000][PE] mean and std.dev: (1367.00, 1237.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.38, 60.65)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 645, 2707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7589)
[0000][PE] mean and std.dev: (1315.00, 1370.80)
[0000][PE] low and high boundaries for proper pairs: (1, 10030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202788 reads in 295.350 CPU sec, 56.140 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1202876
	[0000][ M::kt_pipeline] read 1202876 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527480, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (712, 1398, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6247)
[0000][PE] mean and std.dev: (1564.67, 1514.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.44, 60.86)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (631, 1093, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4852)
[0000][PE] mean and std.dev: (1252.60, 980.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202890 reads in 297.022 CPU sec, 44.612 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000211, nseq: 1202836
	[0000][ M::kt_pipeline] read 1202836 sequences (180000211 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 526950, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 1252, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (1074.75, 884.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.25, 60.52)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (509, 955, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3524)
[0000][PE] mean and std.dev: (1038.95, 615.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202876 reads in 304.985 CPU sec, 52.769 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1202834
	[0000][ M::kt_pipeline] read 1202834 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 526945, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 340, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (540.17, 507.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.55, 60.98)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1241, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5065)
[0000][PE] mean and std.dev: (1623.00, 960.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202836 reads in 302.232 CPU sec, 52.259 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1202930
	[0000][ M::kt_pipeline] read 1202930 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527524, 0, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 444, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5140)
[0000][PE] mean and std.dev: (1123.87, 1558.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.33, 60.67)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 773, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3934)
[0000][PE] mean and std.dev: (993.29, 918.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202834 reads in 296.075 CPU sec, 40.995 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1202728
	[0000][ M::kt_pipeline] read 1202728 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 526991, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 761, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2970)
[0000][PE] mean and std.dev: (654.52, 657.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.43, 60.74)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (478, 781, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4669)
[0000][PE] mean and std.dev: (1218.89, 1093.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202930 reads in 301.896 CPU sec, 43.801 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1202690
	[0000][ M::kt_pipeline] read 1202690 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527502, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 498, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3818)
[0000][PE] mean and std.dev: (680.45, 714.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.14, 60.68)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 733, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4639)
[0000][PE] mean and std.dev: (906.00, 733.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202728 reads in 298.124 CPU sec, 47.237 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1202750
	[0000][ M::kt_pipeline] read 1202750 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527116, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 180, 697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1833)
[0000][PE] mean and std.dev: (348.14, 352.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.97, 60.51)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 1039, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5468)
[0000][PE] mean and std.dev: (1189.05, 974.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202690 reads in 294.734 CPU sec, 51.034 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1202634
	[0000][ M::kt_pipeline] read 1202634 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527659, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 517, 709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1557)
[0000][PE] mean and std.dev: (484.62, 223.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.13, 60.69)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 877, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4171)
[0000][PE] mean and std.dev: (1011.95, 768.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202750 reads in 287.722 CPU sec, 48.389 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1202846
	[0000][ M::kt_pipeline] read 1202846 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527580, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 614, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5854)
[0000][PE] mean and std.dev: (1119.78, 977.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.14, 60.50)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (498, 752, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (861.30, 561.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202634 reads in 294.363 CPU sec, 54.711 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1202844
	[0000][ M::kt_pipeline] read 1202844 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 527597, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 426, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3576)
[0000][PE] mean and std.dev: (610.91, 693.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.02, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (659, 1218, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2729)
[0000][PE] mean and std.dev: (1008.42, 519.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202846 reads in 295.615 CPU sec, 52.288 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1202878
	[0000][ M::kt_pipeline] read 1202878 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527020, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 739, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (838.04, 524.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.98, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 949, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5526)
[0000][PE] mean and std.dev: (1308.80, 1083.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202844 reads in 289.943 CPU sec, 42.072 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1202780
	[0000][ M::kt_pipeline] read 1202780 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527892, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 390, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6046)
[0000][PE] mean and std.dev: (898.30, 985.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.06, 60.70)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (372, 853, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5019)
[0000][PE] mean and std.dev: (1009.75, 841.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202878 reads in 292.381 CPU sec, 46.875 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1202810
	[0000][ M::kt_pipeline] read 1202810 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 526869, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 989, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6193)
[0000][PE] mean and std.dev: (1365.36, 1451.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.05, 60.67)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 1093, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5892)
[0000][PE] mean and std.dev: (1204.71, 1285.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202780 reads in 293.382 CPU sec, 39.444 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1202730
	[0000][ M::kt_pipeline] read 1202730 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527301, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 932, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3937)
[0000][PE] mean and std.dev: (811.00, 686.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.13, 60.65)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 774, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4486)
[0000][PE] mean and std.dev: (1002.86, 932.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202810 reads in 295.708 CPU sec, 43.619 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1202840
	[0000][ M::kt_pipeline] read 1202840 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527256, 2, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 1380, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4446)
[0000][PE] mean and std.dev: (1130.78, 826.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.36, 60.81)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (576, 1066, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5256)
[0000][PE] mean and std.dev: (1407.66, 1175.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202730 reads in 299.685 CPU sec, 61.381 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1202824
	[0000][ M::kt_pipeline] read 1202824 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 526847, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 944, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6305)
[0000][PE] mean and std.dev: (1113.62, 970.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.06, 60.67)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 390, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2805)
[0000][PE] mean and std.dev: (645.00, 543.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202840 reads in 292.847 CPU sec, 50.467 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1202726
	[0000][ M::kt_pipeline] read 1202726 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527322, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 319, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (606.95, 617.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.11, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 567, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3000)
[0000][PE] mean and std.dev: (650.95, 480.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202824 reads in 297.802 CPU sec, 51.726 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1202808
	[0000][ M::kt_pipeline] read 1202808 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527243, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 341, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5462)
[0000][PE] mean and std.dev: (1094.35, 1191.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.99, 60.87)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (434, 876, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5453)
[0000][PE] mean and std.dev: (1015.25, 720.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202726 reads in 304.557 CPU sec, 55.211 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1202764
	[0000][ M::kt_pipeline] read 1202764 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527462, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 489, 858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2172)
[0000][PE] mean and std.dev: (522.00, 416.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.84, 60.53)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 1177, 3416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9642)
[0000][PE] mean and std.dev: (1615.24, 1673.99)
[0000][PE] low and high boundaries for proper pairs: (1, 12755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202808 reads in 293.481 CPU sec, 43.346 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1202726
	[0000][ M::kt_pipeline] read 1202726 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 526883, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 659, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4048)
[0000][PE] mean and std.dev: (691.12, 562.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.91, 60.57)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1344, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4292)
[0000][PE] mean and std.dev: (1238.28, 716.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202764 reads in 296.926 CPU sec, 50.836 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1202746
	[0000][ M::kt_pipeline] read 1202746 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527598, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 696, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5257)
[0000][PE] mean and std.dev: (896.90, 905.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.93, 60.66)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (475, 920, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (1011.78, 713.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202726 reads in 299.343 CPU sec, 50.143 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000195, nseq: 1202732
	[0000][ M::kt_pipeline] read 1202732 sequences (180000195 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527640, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (551, 864, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2624)
[0000][PE] mean and std.dev: (751.71, 393.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.85, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 808, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5181)
[0000][PE] mean and std.dev: (1037.12, 791.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202746 reads in 297.629 CPU sec, 49.111 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1202830
	[0000][ M::kt_pipeline] read 1202830 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527451, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 573, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (1038.93, 1137.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.90, 60.56)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 787, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (839.82, 580.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202732 reads in 295.845 CPU sec, 48.889 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1202832
	[0000][ M::kt_pipeline] read 1202832 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527296, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 884, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3038)
[0000][PE] mean and std.dev: (861.94, 574.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.85, 60.83)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 756, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2783)
[0000][PE] mean and std.dev: (619.08, 428.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202830 reads in 292.959 CPU sec, 49.513 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1202764
	[0000][ M::kt_pipeline] read 1202764 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527054, 7, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (689, 965, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (1084.18, 647.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.89, 60.86)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (527, 1066, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5390)
[0000][PE] mean and std.dev: (1385.94, 1200.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202832 reads in 292.696 CPU sec, 35.430 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1202844
	[0000][ M::kt_pipeline] read 1202844 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527097, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 977, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5041)
[0000][PE] mean and std.dev: (1048.00, 873.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.95, 60.78)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 829, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5262)
[0000][PE] mean and std.dev: (1099.78, 960.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202764 reads in 303.599 CPU sec, 49.363 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1202850
	[0000][ M::kt_pipeline] read 1202850 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527102, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 685, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2597)
[0000][PE] mean and std.dev: (600.12, 545.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.81, 60.75)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 938, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4286)
[0000][PE] mean and std.dev: (903.13, 708.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202844 reads in 306.047 CPU sec, 46.833 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1202762
	[0000][ M::kt_pipeline] read 1202762 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527132, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 991, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3334)
[0000][PE] mean and std.dev: (817.07, 539.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.85, 60.86)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 657, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4357)
[0000][PE] mean and std.dev: (1062.63, 1087.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202850 reads in 298.448 CPU sec, 53.623 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1202736
	[0000][ M::kt_pipeline] read 1202736 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527600, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (564, 860, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2844)
[0000][PE] mean and std.dev: (829.56, 650.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.71, 60.66)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (160, 963, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5578)
[0000][PE] mean and std.dev: (1180.94, 1148.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202762 reads in 301.604 CPU sec, 49.113 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1202710
	[0000][ M::kt_pipeline] read 1202710 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527444, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 1247, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6200)
[0000][PE] mean and std.dev: (1348.24, 1212.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.76, 60.58)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (392, 1102, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5348)
[0000][PE] mean and std.dev: (1205.05, 891.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202736 reads in 310.970 CPU sec, 49.849 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1202764
	[0000][ M::kt_pipeline] read 1202764 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527373, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 1204, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5831)
[0000][PE] mean and std.dev: (1118.89, 879.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.80, 60.58)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (655, 937, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2413)
[0000][PE] mean and std.dev: (914.58, 576.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3219)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202710 reads in 308.921 CPU sec, 49.644 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1202774
	[0000][ M::kt_pipeline] read 1202774 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 526870, 2, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (575, 836, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2189)
[0000][PE] mean and std.dev: (756.15, 403.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.72, 60.61)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 1199, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5085)
[0000][PE] mean and std.dev: (1221.69, 969.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202764 reads in 306.483 CPU sec, 44.765 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1202800
	[0000][ M::kt_pipeline] read 1202800 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 526621, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 298, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4245)
[0000][PE] mean and std.dev: (765.67, 689.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.32, 60.35)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 1069, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6280)
[0000][PE] mean and std.dev: (1260.56, 1271.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202774 reads in 314.071 CPU sec, 57.613 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1202722
	[0000][ M::kt_pipeline] read 1202722 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 526726, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 358, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2973)
[0000][PE] mean and std.dev: (671.04, 585.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.77, 60.52)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 447, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3264)
[0000][PE] mean and std.dev: (728.11, 640.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202800 reads in 321.485 CPU sec, 49.785 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1202742
	[0000][ M::kt_pipeline] read 1202742 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527297, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 471, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5125)
[0000][PE] mean and std.dev: (1027.91, 1235.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.79, 60.53)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (379, 959, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5818)
[0000][PE] mean and std.dev: (1227.35, 1032.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202722 reads in 310.747 CPU sec, 55.419 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1202772
	[0000][ M::kt_pipeline] read 1202772 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527232, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 764, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3296)
[0000][PE] mean and std.dev: (814.68, 572.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.01, 60.47)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (618, 984, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4542)
[0000][PE] mean and std.dev: (1139.22, 877.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202742 reads in 307.347 CPU sec, 56.258 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1202716
	[0000][ M::kt_pipeline] read 1202716 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 526694, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 733, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2653)
[0000][PE] mean and std.dev: (654.47, 479.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.91, 60.65)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 861, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (795.15, 577.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202772 reads in 309.898 CPU sec, 53.443 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1202846
	[0000][ M::kt_pipeline] read 1202846 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 527780, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 313, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2850)
[0000][PE] mean and std.dev: (540.00, 529.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.97, 60.65)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 1334, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5373)
[0000][PE] mean and std.dev: (1404.53, 1246.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202716 reads in 303.598 CPU sec, 52.293 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1202706
	[0000][ M::kt_pipeline] read 1202706 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527365, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 769, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4288)
[0000][PE] mean and std.dev: (901.90, 771.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.03, 60.50)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (624, 846, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2040)
[0000][PE] mean and std.dev: (747.36, 376.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202846 reads in 307.026 CPU sec, 43.284 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1202600
	[0000][ M::kt_pipeline] read 1202600 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527197, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 422, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2943)
[0000][PE] mean and std.dev: (539.00, 388.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.82, 60.46)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (331, 459, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2758)
[0000][PE] mean and std.dev: (706.22, 539.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202706 reads in 307.181 CPU sec, 48.488 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1202728
	[0000][ M::kt_pipeline] read 1202728 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 527316, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 748, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3601)
[0000][PE] mean and std.dev: (788.15, 625.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.00, 60.47)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (345, 1080, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3714)
[0000][PE] mean and std.dev: (1103.29, 881.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202600 reads in 309.482 CPU sec, 47.472 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1202824
	[0000][ M::kt_pipeline] read 1202824 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 526720, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 710, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4408)
[0000][PE] mean and std.dev: (1029.57, 1064.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.16, 60.57)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (624, 1352, 2265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5547)
[0000][PE] mean and std.dev: (1491.06, 1145.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7188)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202728 reads in 314.450 CPU sec, 54.229 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1202738
	[0000][ M::kt_pipeline] read 1202738 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527744, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (469, 998, 2849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7609)
[0000][PE] mean and std.dev: (1765.72, 1600.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.90, 60.52)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 959, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2425)
[0000][PE] mean and std.dev: (911.81, 409.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202824 reads in 309.611 CPU sec, 44.701 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1202810
	[0000][ M::kt_pipeline] read 1202810 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 526552, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 624, 1011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2731)
[0000][PE] mean and std.dev: (613.07, 495.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.09, 60.50)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 1197, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3266)
[0000][PE] mean and std.dev: (1173.28, 755.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202738 reads in 313.312 CPU sec, 50.654 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1202710
	[0000][ M::kt_pipeline] read 1202710 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527216, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 1089, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5103)
[0000][PE] mean and std.dev: (978.95, 713.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.11, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 865, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5792)
[0000][PE] mean and std.dev: (1169.00, 1082.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202810 reads in 305.756 CPU sec, 42.066 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1202738
	[0000][ M::kt_pipeline] read 1202738 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527340, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 826, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (803.28, 574.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.05, 60.64)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 829, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3060)
[0000][PE] mean and std.dev: (837.30, 682.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202710 reads in 311.648 CPU sec, 45.179 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1202720
	[0000][ M::kt_pipeline] read 1202720 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527122, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (540, 1000, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (1147.00, 1002.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.06, 60.55)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 1031, 2617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7183)
[0000][PE] mean and std.dev: (1257.11, 1127.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9466)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202738 reads in 317.213 CPU sec, 54.651 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1202792
	[0000][ M::kt_pipeline] read 1202792 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527750, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 316, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4785)
[0000][PE] mean and std.dev: (817.04, 920.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.06, 60.67)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 987, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3627)
[0000][PE] mean and std.dev: (1029.17, 837.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202720 reads in 308.518 CPU sec, 46.231 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1202794
	[0000][ M::kt_pipeline] read 1202794 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 526596, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 940, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3563)
[0000][PE] mean and std.dev: (877.80, 792.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.10, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (367, 1186, 2772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7582)
[0000][PE] mean and std.dev: (1593.72, 1795.62)
[0000][PE] low and high boundaries for proper pairs: (1, 9987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202792 reads in 314.411 CPU sec, 44.718 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1202800
	[0000][ M::kt_pipeline] read 1202800 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527060, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (485, 963, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3845)
[0000][PE] mean and std.dev: (1001.55, 701.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.08, 60.54)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 973, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3079)
[0000][PE] mean and std.dev: (760.56, 684.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202794 reads in 319.046 CPU sec, 52.295 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1202894
	[0000][ M::kt_pipeline] read 1202894 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 526125, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 524, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4543)
[0000][PE] mean and std.dev: (1027.80, 1074.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.83, 60.51)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (354, 931, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4305)
[0000][PE] mean and std.dev: (1041.75, 823.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202800 reads in 315.353 CPU sec, 56.990 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1202882
	[0000][ M::kt_pipeline] read 1202882 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 526662, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 1050, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (1201.29, 1054.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.79, 60.54)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (370, 1005, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (884.62, 584.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202894 reads in 320.426 CPU sec, 46.730 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1202810
	[0000][ M::kt_pipeline] read 1202810 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 526475, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 633, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3716)
[0000][PE] mean and std.dev: (868.45, 676.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.56, 60.32)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1155, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3269)
[0000][PE] mean and std.dev: (1207.46, 713.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202882 reads in 329.529 CPU sec, 50.354 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1203014
	[0000][ M::kt_pipeline] read 1203014 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 526530, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 401, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (735.24, 711.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.17, 60.13)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1093, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (962.00, 535.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202810 reads in 335.549 CPU sec, 45.785 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1202978
	[0000][ M::kt_pipeline] read 1202978 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 526130, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 366, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2391)
[0000][PE] mean and std.dev: (516.87, 398.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.31, 60.22)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 965, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3496)
[0000][PE] mean and std.dev: (912.44, 647.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203014 reads in 344.880 CPU sec, 43.423 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1202954
	[0000][ M::kt_pipeline] read 1202954 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 525690, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (568, 884, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4033)
[0000][PE] mean and std.dev: (1110.82, 783.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.72, 60.48)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1248, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4603)
[0000][PE] mean and std.dev: (1262.37, 900.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202978 reads in 336.804 CPU sec, 52.521 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1203040
	[0000][ M::kt_pipeline] read 1203040 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 526339, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 936, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4996)
[0000][PE] mean and std.dev: (1006.26, 1147.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.64, 60.47)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 1010, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4572)
[0000][PE] mean and std.dev: (881.20, 621.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202954 reads in 325.323 CPU sec, 51.954 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1202802
	[0000][ M::kt_pipeline] read 1202802 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 526911, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 235, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 731)
[0000][PE] mean and std.dev: (221.64, 68.25)
[0000][PE] low and high boundaries for proper pairs: (1, 916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.98, 60.61)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1099, 2586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6098)
[0000][PE] mean and std.dev: (1370.35, 1238.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7854)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203040 reads in 312.308 CPU sec, 38.477 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1202808
	[0000][ M::kt_pipeline] read 1202808 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527473, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 696, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (965.88, 917.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.50, 60.80)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 714, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4713)
[0000][PE] mean and std.dev: (918.63, 757.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202802 reads in 301.844 CPU sec, 50.742 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1202800
	[0000][ M::kt_pipeline] read 1202800 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527540, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 665, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3035)
[0000][PE] mean and std.dev: (714.57, 543.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.59, 60.81)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (438, 931, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4977)
[0000][PE] mean and std.dev: (1122.25, 863.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202808 reads in 295.533 CPU sec, 46.770 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1202838
	[0000][ M::kt_pipeline] read 1202838 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527762, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 758, 2736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7724)
[0000][PE] mean and std.dev: (1394.31, 1455.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.50, 60.80)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 689, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (760.75, 610.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202800 reads in 301.648 CPU sec, 47.663 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1202832
	[0000][ M::kt_pipeline] read 1202832 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527779, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 361, 987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2517)
[0000][PE] mean and std.dev: (657.41, 590.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.53, 60.85)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (403, 1152, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4321)
[0000][PE] mean and std.dev: (979.90, 629.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5627)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202838 reads in 298.973 CPU sec, 52.940 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1202886
	[0000][ M::kt_pipeline] read 1202886 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 527857, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 1177, 3075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8563)
[0000][PE] mean and std.dev: (2146.00, 2605.73)
[0000][PE] low and high boundaries for proper pairs: (1, 12569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.69, 60.85)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (179, 974, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (867.00, 798.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202832 reads in 289.388 CPU sec, 29.942 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1202858
	[0000][ M::kt_pipeline] read 1202858 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527512, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 359, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3804)
[0000][PE] mean and std.dev: (807.54, 687.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.88, 60.87)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 876, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3527)
[0000][PE] mean and std.dev: (845.45, 633.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202886 reads in 302.547 CPU sec, 49.132 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1202732
	[0000][ M::kt_pipeline] read 1202732 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527394, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 1273, 2705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7799)
[0000][PE] mean and std.dev: (1682.67, 2016.99)
[0000][PE] low and high boundaries for proper pairs: (1, 10346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (323.03, 60.92)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 901, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2868)
[0000][PE] mean and std.dev: (821.81, 628.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202858 reads in 302.215 CPU sec, 50.464 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1202728
	[0000][ M::kt_pipeline] read 1202728 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527798, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 711, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4162)
[0000][PE] mean and std.dev: (981.09, 961.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.88, 60.84)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (624, 1157, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4449)
[0000][PE] mean and std.dev: (1394.81, 1253.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202732 reads in 299.905 CPU sec, 44.814 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1202754
	[0000][ M::kt_pipeline] read 1202754 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527749, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 217, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4312)
[0000][PE] mean and std.dev: (756.56, 889.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.79, 60.75)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 709, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5051)
[0000][PE] mean and std.dev: (941.59, 840.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202728 reads in 301.856 CPU sec, 48.433 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1202910
	[0000][ M::kt_pipeline] read 1202910 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527840, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 1049, 2771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7875)
[0000][PE] mean and std.dev: (1253.14, 1168.88)
[0000][PE] low and high boundaries for proper pairs: (1, 10427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.79, 60.83)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 846, 3280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9380)
[0000][PE] mean and std.dev: (1471.71, 1348.49)
[0000][PE] low and high boundaries for proper pairs: (1, 12430)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202754 reads in 292.352 CPU sec, 41.208 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1202894
	[0000][ M::kt_pipeline] read 1202894 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527327, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 236, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5369)
[0000][PE] mean and std.dev: (880.31, 1052.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.73, 60.79)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (375, 762, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3921)
[0000][PE] mean and std.dev: (908.17, 742.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5103)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202910 reads in 300.285 CPU sec, 49.934 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1202810
	[0000][ M::kt_pipeline] read 1202810 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 526910, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 398, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3058)
[0000][PE] mean and std.dev: (713.88, 688.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.79, 60.87)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 597, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4269)
[0000][PE] mean and std.dev: (1106.61, 1116.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202894 reads in 302.063 CPU sec, 44.557 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1202958
	[0000][ M::kt_pipeline] read 1202958 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527332, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 872, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (679.86, 555.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.73, 60.86)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (311, 831, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4805)
[0000][PE] mean and std.dev: (1018.89, 811.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202810 reads in 298.240 CPU sec, 44.236 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1202956
	[0000][ M::kt_pipeline] read 1202956 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527661, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 691, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4890)
[0000][PE] mean and std.dev: (1047.52, 1078.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.71, 60.88)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (704, 1353, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4181)
[0000][PE] mean and std.dev: (1422.69, 876.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202958 reads in 304.776 CPU sec, 42.748 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1202800
	[0000][ M::kt_pipeline] read 1202800 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527624, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 1043, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5268)
[0000][PE] mean and std.dev: (1265.84, 1108.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.67, 60.72)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1212, 2992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7328)
[0000][PE] mean and std.dev: (1833.23, 1735.76)
[0000][PE] low and high boundaries for proper pairs: (1, 9496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202956 reads in 304.507 CPU sec, 47.369 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1202904
	[0000][ M::kt_pipeline] read 1202904 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527223, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 707, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (786.50, 731.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.78, 60.90)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 745, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3645)
[0000][PE] mean and std.dev: (752.35, 511.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202800 reads in 298.556 CPU sec, 41.345 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1202710
	[0000][ M::kt_pipeline] read 1202710 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527377, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 712, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2528)
[0000][PE] mean and std.dev: (688.64, 592.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.91, 60.97)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 997, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3883)
[0000][PE] mean and std.dev: (1006.88, 845.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202904 reads in 299.519 CPU sec, 51.976 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1202876
	[0000][ M::kt_pipeline] read 1202876 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 524066, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 560, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3096)
[0000][PE] mean and std.dev: (679.27, 658.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 525)
[0000][PE] mean and std.dev: (321.16, 61.40)
[0000][PE] low and high boundaries for proper pairs: (33, 607)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (468, 1065, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (999.04, 530.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202710 reads in 335.960 CPU sec, 50.784 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1202832
	[0000][ M::kt_pipeline] read 1202832 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527421, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 739, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3608)
[0000][PE] mean and std.dev: (870.38, 576.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.62, 60.84)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (162, 879, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6144)
[0000][PE] mean and std.dev: (1152.94, 1110.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202876 reads in 301.799 CPU sec, 58.355 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1202914
	[0000][ M::kt_pipeline] read 1202914 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527902, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 448, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3479)
[0000][PE] mean and std.dev: (707.38, 673.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.67, 60.87)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (401, 656, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (763.14, 552.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4045)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202832 reads in 297.322 CPU sec, 48.861 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1202946
	[0000][ M::kt_pipeline] read 1202946 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527653, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 923, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (859.63, 607.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.70, 60.84)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 907, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (1058.00, 889.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6219)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202914 reads in 304.385 CPU sec, 46.160 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1202864
	[0000][ M::kt_pipeline] read 1202864 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527334, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 731, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4054)
[0000][PE] mean and std.dev: (714.05, 649.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.45, 60.82)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 882, 2173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5867)
[0000][PE] mean and std.dev: (1245.00, 1110.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202946 reads in 291.751 CPU sec, 37.493 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1202994
	[0000][ M::kt_pipeline] read 1202994 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527554, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 964, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6208)
[0000][PE] mean and std.dev: (1100.68, 1007.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.59, 60.91)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 816, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2520)
[0000][PE] mean and std.dev: (719.05, 505.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202864 reads in 298.263 CPU sec, 45.770 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1202770
	[0000][ M::kt_pipeline] read 1202770 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527131, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 773, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (1093.50, 1050.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.69, 60.78)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 591, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2341)
[0000][PE] mean and std.dev: (627.62, 443.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202994 reads in 300.356 CPU sec, 47.797 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1202714
	[0000][ M::kt_pipeline] read 1202714 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 527204, 4, 22)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.45, 60.92)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (414, 888, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2565)
[0000][PE] mean and std.dev: (857.29, 530.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3282)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202770 reads in 297.934 CPU sec, 46.353 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1202740
	[0000][ M::kt_pipeline] read 1202740 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527134, 2, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 1004, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4148)
[0000][PE] mean and std.dev: (1008.20, 798.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.51, 60.78)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (299, 802, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (886.35, 698.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202714 reads in 290.196 CPU sec, 39.095 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1202820
	[0000][ M::kt_pipeline] read 1202820 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527526, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 591, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5643)
[0000][PE] mean and std.dev: (1237.75, 1272.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.72, 60.91)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1436, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3553)
[0000][PE] mean and std.dev: (1417.48, 701.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4386)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202740 reads in 319.062 CPU sec, 49.860 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1202654
	[0000][ M::kt_pipeline] read 1202654 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527349, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (651, 817, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6612)
[0000][PE] mean and std.dev: (1245.65, 937.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.44, 60.81)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 759, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3741)
[0000][PE] mean and std.dev: (1018.40, 890.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202820 reads in 301.139 CPU sec, 53.310 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1202822
	[0000][ M::kt_pipeline] read 1202822 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527272, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 772, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3760)
[0000][PE] mean and std.dev: (796.00, 702.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.24, 60.62)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 609, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2749)
[0000][PE] mean and std.dev: (668.59, 533.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202654 reads in 297.648 CPU sec, 44.295 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1202750
	[0000][ M::kt_pipeline] read 1202750 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527590, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 1375, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7100)
[0000][PE] mean and std.dev: (1323.76, 1071.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.21, 60.71)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 899, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2454)
[0000][PE] mean and std.dev: (947.62, 611.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202822 reads in 298.781 CPU sec, 42.251 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1202826
	[0000][ M::kt_pipeline] read 1202826 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527344, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 947, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3485)
[0000][PE] mean and std.dev: (917.07, 632.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.23, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 302, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (20, 545)
[0000][PE] mean and std.dev: (250.82, 64.42)
[0000][PE] low and high boundaries for proper pairs: (1, 650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202750 reads in 300.495 CPU sec, 37.205 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1202942
	[0000][ M::kt_pipeline] read 1202942 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527506, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 896, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4313)
[0000][PE] mean and std.dev: (959.16, 882.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.24, 60.62)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (538, 1083, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3244)
[0000][PE] mean and std.dev: (1092.52, 842.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202826 reads in 296.651 CPU sec, 44.516 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1202842
	[0000][ M::kt_pipeline] read 1202842 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527520, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 750, 2533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7187)
[0000][PE] mean and std.dev: (842.27, 828.57)
[0000][PE] low and high boundaries for proper pairs: (1, 9514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.34, 60.90)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (344, 1297, 2908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8036)
[0000][PE] mean and std.dev: (1751.36, 1760.66)
[0000][PE] low and high boundaries for proper pairs: (1, 10600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202942 reads in 293.259 CPU sec, 35.650 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1202766
	[0000][ M::kt_pipeline] read 1202766 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 528236, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 309, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2857)
[0000][PE] mean and std.dev: (599.17, 563.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.54, 60.87)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1103, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4810)
[0000][PE] mean and std.dev: (1125.50, 611.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202842 reads in 290.845 CPU sec, 32.796 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1202766
	[0000][ M::kt_pipeline] read 1202766 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527528, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 389, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4377)
[0000][PE] mean and std.dev: (798.65, 910.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.42, 60.79)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 867, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4843)
[0000][PE] mean and std.dev: (980.33, 841.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202766 reads in 304.741 CPU sec, 39.701 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1202874
	[0000][ M::kt_pipeline] read 1202874 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527301, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 775, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4399)
[0000][PE] mean and std.dev: (780.12, 687.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.07, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (336, 745, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3426)
[0000][PE] mean and std.dev: (974.48, 716.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202766 reads in 298.177 CPU sec, 51.759 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1202786
	[0000][ M::kt_pipeline] read 1202786 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527691, 0, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 997, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3982)
[0000][PE] mean and std.dev: (1088.96, 816.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.06, 60.76)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 984, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3665)
[0000][PE] mean and std.dev: (933.64, 574.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202874 reads in 295.020 CPU sec, 41.597 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1202866
	[0000][ M::kt_pipeline] read 1202866 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527614, 8, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 580, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3499)
[0000][PE] mean and std.dev: (683.19, 576.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.16, 60.60)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1071, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (1177.56, 740.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202786 reads in 301.467 CPU sec, 36.021 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1202884
	[0000][ M::kt_pipeline] read 1202884 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 526945, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 687, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3720)
[0000][PE] mean and std.dev: (917.57, 827.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.13, 60.77)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 494, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2725)
[0000][PE] mean and std.dev: (707.30, 584.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202866 reads in 297.704 CPU sec, 26.768 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1202762
	[0000][ M::kt_pipeline] read 1202762 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527775, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 649, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2645)
[0000][PE] mean and std.dev: (580.20, 408.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.40, 60.82)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (377, 1451, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5864)
[0000][PE] mean and std.dev: (1492.43, 1145.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202884 reads in 292.771 CPU sec, 32.002 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1202790
	[0000][ M::kt_pipeline] read 1202790 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527311, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 1336, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5390)
[0000][PE] mean and std.dev: (1149.73, 906.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.20, 60.73)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 1368, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (1154.25, 880.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202762 reads in 307.801 CPU sec, 46.686 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1202846
	[0000][ M::kt_pipeline] read 1202846 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527053, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 757, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3225)
[0000][PE] mean and std.dev: (890.96, 730.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.12, 60.66)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 799, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4660)
[0000][PE] mean and std.dev: (1091.71, 861.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202790 reads in 299.761 CPU sec, 30.852 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1202810
	[0000][ M::kt_pipeline] read 1202810 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527648, 2, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 635, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2595)
[0000][PE] mean and std.dev: (827.43, 745.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.38, 61.02)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (372, 952, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4275)
[0000][PE] mean and std.dev: (1021.21, 660.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202846 reads in 306.012 CPU sec, 43.013 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1202722
	[0000][ M::kt_pipeline] read 1202722 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527745, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 771, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6136)
[0000][PE] mean and std.dev: (1216.70, 1308.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.09, 60.84)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 967, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (1068.68, 984.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202810 reads in 287.060 CPU sec, 29.230 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1202794
	[0000][ M::kt_pipeline] read 1202794 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527321, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 996, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4802)
[0000][PE] mean and std.dev: (1056.05, 1112.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.45, 60.79)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 812, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2921)
[0000][PE] mean and std.dev: (750.77, 582.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202722 reads in 296.857 CPU sec, 38.039 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1202746
	[0000][ M::kt_pipeline] read 1202746 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527549, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 455, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (661.68, 634.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.31, 60.93)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 1078, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3807)
[0000][PE] mean and std.dev: (1002.46, 618.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202794 reads in 289.192 CPU sec, 36.301 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1202660
	[0000][ M::kt_pipeline] read 1202660 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527066, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 234, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2192)
[0000][PE] mean and std.dev: (445.05, 508.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.10, 60.67)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 1436, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5845)
[0000][PE] mean and std.dev: (1542.42, 1284.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202746 reads in 303.154 CPU sec, 55.570 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1202640
	[0000][ M::kt_pipeline] read 1202640 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 526706, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 769, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3070)
[0000][PE] mean and std.dev: (761.71, 503.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.87, 60.67)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (174, 930, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3279)
[0000][PE] mean and std.dev: (891.71, 810.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202660 reads in 298.650 CPU sec, 39.823 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1202824
	[0000][ M::kt_pipeline] read 1202824 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527152, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 378, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2125)
[0000][PE] mean and std.dev: (592.15, 627.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.07, 60.68)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (355, 891, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (952.04, 751.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202640 reads in 299.090 CPU sec, 34.479 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1202724
	[0000][ M::kt_pipeline] read 1202724 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527186, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (667, 1027, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4153)
[0000][PE] mean and std.dev: (1282.11, 915.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.04, 60.60)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 735, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3229)
[0000][PE] mean and std.dev: (662.29, 443.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4219)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202824 reads in 294.486 CPU sec, 36.159 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1202648
	[0000][ M::kt_pipeline] read 1202648 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527317, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (732, 1235, 2121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4899)
[0000][PE] mean and std.dev: (1397.06, 1096.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.97, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 975, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (834.40, 569.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202724 reads in 305.253 CPU sec, 42.272 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1202738
	[0000][ M::kt_pipeline] read 1202738 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527480, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 787, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4262)
[0000][PE] mean and std.dev: (882.93, 816.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.96, 60.65)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 1117, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4721)
[0000][PE] mean and std.dev: (979.05, 675.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202648 reads in 300.541 CPU sec, 29.789 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1202756
	[0000][ M::kt_pipeline] read 1202756 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 526971, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 508, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3587)
[0000][PE] mean and std.dev: (692.54, 621.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.17, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 1113, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3916)
[0000][PE] mean and std.dev: (1120.42, 735.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202738 reads in 306.942 CPU sec, 43.894 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1202766
	[0000][ M::kt_pipeline] read 1202766 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527568, 1, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 271, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (579.64, 480.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.96, 60.63)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 814, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3468)
[0000][PE] mean and std.dev: (734.19, 580.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202756 reads in 305.726 CPU sec, 39.705 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1202698
	[0000][ M::kt_pipeline] read 1202698 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527205, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 402, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (538.44, 442.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.10, 60.57)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 872, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (923.32, 796.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202766 reads in 303.319 CPU sec, 39.938 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1202662
	[0000][ M::kt_pipeline] read 1202662 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527173, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 1148, 2584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7176)
[0000][PE] mean and std.dev: (1247.71, 1054.22)
[0000][PE] low and high boundaries for proper pairs: (1, 9472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.13, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (374, 804, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5699)
[0000][PE] mean and std.dev: (1097.28, 906.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202698 reads in 297.827 CPU sec, 38.744 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1202718
	[0000][ M::kt_pipeline] read 1202718 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 526867, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 173, 265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 459)
[0000][PE] mean and std.dev: (176.65, 53.90)
[0000][PE] low and high boundaries for proper pairs: (1, 556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.97, 60.71)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 1070, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (940.59, 631.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202662 reads in 299.589 CPU sec, 37.619 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1202808
	[0000][ M::kt_pipeline] read 1202808 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527733, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 501, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5209)
[0000][PE] mean and std.dev: (925.00, 916.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.86, 60.46)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 870, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (1064.41, 696.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202718 reads in 301.112 CPU sec, 38.027 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1202772
	[0000][ M::kt_pipeline] read 1202772 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 526800, 0, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 208, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3708)
[0000][PE] mean and std.dev: (702.13, 866.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.13, 60.57)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (510, 1549, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5517)
[0000][PE] mean and std.dev: (1441.09, 1186.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202808 reads in 305.989 CPU sec, 44.510 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1202830
	[0000][ M::kt_pipeline] read 1202830 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 526600, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 784, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4298)
[0000][PE] mean and std.dev: (904.00, 998.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.13, 60.46)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 875, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4266)
[0000][PE] mean and std.dev: (946.04, 743.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202772 reads in 295.911 CPU sec, 36.870 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1202628
	[0000][ M::kt_pipeline] read 1202628 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 527284, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (459, 1209, 2533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6681)
[0000][PE] mean and std.dev: (1304.92, 1099.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.26, 60.56)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1440, 2477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5583)
[0000][PE] mean and std.dev: (1423.20, 910.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7136)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202830 reads in 304.158 CPU sec, 36.847 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1202730
	[0000][ M::kt_pipeline] read 1202730 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 526900, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 778, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5539)
[0000][PE] mean and std.dev: (1018.17, 895.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.13, 60.57)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (714, 1447, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3846)
[0000][PE] mean and std.dev: (1209.81, 839.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202628 reads in 295.160 CPU sec, 31.935 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000043, nseq: 1202788
	[0000][ M::kt_pipeline] read 1202788 sequences (180000043 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527000, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 678, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6311)
[0000][PE] mean and std.dev: (1039.62, 1038.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.10, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (350, 869, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (924.69, 645.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202730 reads in 297.806 CPU sec, 38.977 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1202876
	[0000][ M::kt_pipeline] read 1202876 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527479, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 534, 773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1963)
[0000][PE] mean and std.dev: (495.80, 448.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.98, 60.54)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 864, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4215)
[0000][PE] mean and std.dev: (1073.35, 852.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202788 reads in 303.407 CPU sec, 35.495 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1202770
	[0000][ M::kt_pipeline] read 1202770 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 526741, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (103, 157, 544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1426)
[0000][PE] mean and std.dev: (237.33, 221.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.64, 60.52)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (578, 1339, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5738)
[0000][PE] mean and std.dev: (1304.27, 1036.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202876 reads in 313.397 CPU sec, 44.006 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1202874
	[0000][ M::kt_pipeline] read 1202874 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527254, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 744, 2610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7330)
[0000][PE] mean and std.dev: (1548.64, 1918.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.04, 60.66)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (339, 800, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4188)
[0000][PE] mean and std.dev: (1075.33, 886.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202770 reads in 294.766 CPU sec, 34.340 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1202738
	[0000][ M::kt_pipeline] read 1202738 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 528107, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 854, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (788.11, 610.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.51, 60.74)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 714, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2508)
[0000][PE] mean and std.dev: (680.65, 434.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202874 reads in 362.974 CPU sec, 51.978 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1202810
	[0000][ M::kt_pipeline] read 1202810 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527348, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 825, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4469)
[0000][PE] mean and std.dev: (1217.72, 1073.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.47, 60.79)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (557, 926, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (925.96, 589.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202738 reads in 304.759 CPU sec, 37.548 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1202836
	[0000][ M::kt_pipeline] read 1202836 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527104, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 624, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2772)
[0000][PE] mean and std.dev: (573.19, 418.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.19, 60.58)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 845, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3175)
[0000][PE] mean and std.dev: (842.54, 702.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202810 reads in 310.872 CPU sec, 39.388 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1202826
	[0000][ M::kt_pipeline] read 1202826 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 526867, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 684, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2761)
[0000][PE] mean and std.dev: (614.72, 403.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.95, 60.45)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (529, 839, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3778)
[0000][PE] mean and std.dev: (964.30, 590.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202836 reads in 308.858 CPU sec, 42.193 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1202912
	[0000][ M::kt_pipeline] read 1202912 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527017, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 359, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4586)
[0000][PE] mean and std.dev: (846.21, 962.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.96, 60.57)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 969, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3090)
[0000][PE] mean and std.dev: (907.69, 695.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202826 reads in 302.571 CPU sec, 40.470 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000261, nseq: 1203108
	[0000][ M::kt_pipeline] read 1203108 sequences (180000261 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 526630, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 760, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3171)
[0000][PE] mean and std.dev: (757.74, 468.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.82, 60.54)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 1474, 3950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11290)
[0000][PE] mean and std.dev: (2314.04, 2333.72)
[0000][PE] low and high boundaries for proper pairs: (1, 14960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202912 reads in 324.632 CPU sec, 46.803 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1203022
	[0000][ M::kt_pipeline] read 1203022 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 526162, 4, 27)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.78, 60.42)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (317, 854, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (795.69, 506.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4449)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203108 reads in 320.051 CPU sec, 37.440 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1202918
	[0000][ M::kt_pipeline] read 1202918 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 526532, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 724, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3774)
[0000][PE] mean and std.dev: (1070.89, 1082.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.78, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 618, 1293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3335)
[0000][PE] mean and std.dev: (750.41, 597.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203022 reads in 317.065 CPU sec, 40.016 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1202880
	[0000][ M::kt_pipeline] read 1202880 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 526810, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 556, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5093)
[0000][PE] mean and std.dev: (810.50, 760.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.03, 60.56)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (569, 858, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2306)
[0000][PE] mean and std.dev: (918.28, 573.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202918 reads in 314.688 CPU sec, 46.466 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1202830
	[0000][ M::kt_pipeline] read 1202830 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527220, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (637, 755, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (33, 1543)
[0000][PE] mean and std.dev: (701.88, 325.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.22, 60.60)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (389, 1001, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4385)
[0000][PE] mean and std.dev: (1108.81, 848.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202880 reads in 300.258 CPU sec, 34.503 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1202814
	[0000][ M::kt_pipeline] read 1202814 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527147, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 541, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2902)
[0000][PE] mean and std.dev: (794.91, 786.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.50, 60.82)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 879, 3042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8562)
[0000][PE] mean and std.dev: (1301.38, 1172.24)
[0000][PE] low and high boundaries for proper pairs: (1, 11322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202830 reads in 310.590 CPU sec, 44.829 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1202852
	[0000][ M::kt_pipeline] read 1202852 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527538, 5, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 592, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2645)
[0000][PE] mean and std.dev: (689.18, 585.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.61, 60.84)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 703, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4322)
[0000][PE] mean and std.dev: (958.88, 892.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202814 reads in 286.343 CPU sec, 35.051 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1202812
	[0000][ M::kt_pipeline] read 1202812 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527584, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 767, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4713)
[0000][PE] mean and std.dev: (1001.94, 950.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.56, 60.75)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (528, 1046, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4494)
[0000][PE] mean and std.dev: (1205.50, 920.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202852 reads in 300.339 CPU sec, 42.375 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1202754
	[0000][ M::kt_pipeline] read 1202754 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527272, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (590, 1342, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4526)
[0000][PE] mean and std.dev: (1177.33, 747.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.74, 60.97)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1202, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5110)
[0000][PE] mean and std.dev: (1429.22, 983.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202812 reads in 297.177 CPU sec, 42.792 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1202870
	[0000][ M::kt_pipeline] read 1202870 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527064, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 889, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (970.71, 818.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.72, 60.88)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (552, 1042, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2532)
[0000][PE] mean and std.dev: (939.00, 404.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202754 reads in 299.348 CPU sec, 43.852 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1202824
	[0000][ M::kt_pipeline] read 1202824 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 526871, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 240, 281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 559)
[0000][PE] mean and std.dev: (183.00, 61.00)
[0000][PE] low and high boundaries for proper pairs: (1, 698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.56, 60.79)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (722, 1083, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4880)
[0000][PE] mean and std.dev: (1261.21, 847.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202870 reads in 290.602 CPU sec, 29.026 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1202720
	[0000][ M::kt_pipeline] read 1202720 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527191, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 500, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (615.79, 554.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.76, 60.88)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1188, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (1125.11, 671.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202824 reads in 298.784 CPU sec, 36.817 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1202826
	[0000][ M::kt_pipeline] read 1202826 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527801, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 309, 830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2076)
[0000][PE] mean and std.dev: (445.67, 314.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.64, 60.74)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 771, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3226)
[0000][PE] mean and std.dev: (680.64, 401.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202720 reads in 294.975 CPU sec, 33.990 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1202790
	[0000][ M::kt_pipeline] read 1202790 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 527226, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 613, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (809.38, 686.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.62, 60.81)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 820, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5814)
[0000][PE] mean and std.dev: (1173.12, 1096.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202826 reads in 300.692 CPU sec, 43.362 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1202862
	[0000][ M::kt_pipeline] read 1202862 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 527251, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 925, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1176.97, 1036.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.82, 60.83)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (344, 823, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4319)
[0000][PE] mean and std.dev: (1189.41, 1017.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202790 reads in 292.337 CPU sec, 28.627 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1202870
	[0000][ M::kt_pipeline] read 1202870 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527926, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 542, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (606.26, 538.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.84, 60.91)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 324, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2513)
[0000][PE] mean and std.dev: (620.10, 502.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202862 reads in 294.823 CPU sec, 35.767 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1202852
	[0000][ M::kt_pipeline] read 1202852 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 528004, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (800, 1547, 3117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7751)
[0000][PE] mean and std.dev: (1692.91, 1306.86)
[0000][PE] low and high boundaries for proper pairs: (1, 10068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.85, 61.00)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 977, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3274)
[0000][PE] mean and std.dev: (891.89, 668.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202870 reads in 288.905 CPU sec, 33.302 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1202762
	[0000][ M::kt_pipeline] read 1202762 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527765, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 1067, 2893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7875)
[0000][PE] mean and std.dev: (1892.82, 2106.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.65, 60.73)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1132, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (1194.95, 701.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202852 reads in 287.545 CPU sec, 25.669 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1202822
	[0000][ M::kt_pipeline] read 1202822 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527361, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 393, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3897)
[0000][PE] mean and std.dev: (896.64, 849.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.68, 60.87)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (370, 914, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3565)
[0000][PE] mean and std.dev: (1069.62, 878.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202762 reads in 302.623 CPU sec, 44.776 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1202764
	[0000][ M::kt_pipeline] read 1202764 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527469, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 617, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4370)
[0000][PE] mean and std.dev: (881.93, 741.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.61, 60.76)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 328, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3889)
[0000][PE] mean and std.dev: (741.44, 651.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5095)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202822 reads in 286.108 CPU sec, 27.511 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1202820
	[0000][ M::kt_pipeline] read 1202820 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527354, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (648, 2053, 2657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6675)
[0000][PE] mean and std.dev: (1766.29, 1521.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.69, 60.74)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (439, 829, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4237)
[0000][PE] mean and std.dev: (1285.11, 1171.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202764 reads in 288.561 CPU sec, 27.436 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1202836
	[0000][ M::kt_pipeline] read 1202836 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 526826, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 337, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3765)
[0000][PE] mean and std.dev: (848.81, 764.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.78, 60.84)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1174, 2477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5847)
[0000][PE] mean and std.dev: (1476.88, 976.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202820 reads in 294.820 CPU sec, 33.765 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1202766
	[0000][ M::kt_pipeline] read 1202766 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527982, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 1387, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5012)
[0000][PE] mean and std.dev: (1300.00, 1257.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.66, 60.87)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (314, 721, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1841)
[0000][PE] mean and std.dev: (564.86, 303.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202836 reads in 286.462 CPU sec, 29.078 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1202858
	[0000][ M::kt_pipeline] read 1202858 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527353, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 824, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5712)
[0000][PE] mean and std.dev: (913.71, 780.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.63, 60.88)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (382, 721, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4465)
[0000][PE] mean and std.dev: (916.67, 651.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202766 reads in 294.212 CPU sec, 34.668 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1202810
	[0000][ M::kt_pipeline] read 1202810 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 526806, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 699, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (949.26, 785.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.52, 60.73)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (346, 1018, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5167)
[0000][PE] mean and std.dev: (1160.95, 1168.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202858 reads in 290.566 CPU sec, 27.435 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1202764
	[0000][ M::kt_pipeline] read 1202764 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527128, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 822, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2652)
[0000][PE] mean and std.dev: (756.92, 669.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.64, 60.79)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (549, 784, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2091)
[0000][PE] mean and std.dev: (628.75, 354.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202810 reads in 298.721 CPU sec, 36.234 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1202804
	[0000][ M::kt_pipeline] read 1202804 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527029, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 1002, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5042)
[0000][PE] mean and std.dev: (1139.61, 997.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.51, 60.80)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1147, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (1116.37, 784.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202764 reads in 295.779 CPU sec, 40.144 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1202934
	[0000][ M::kt_pipeline] read 1202934 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527372, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 213, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (501.95, 505.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.43, 60.83)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (440, 1021, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (826.00, 456.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202804 reads in 292.731 CPU sec, 31.112 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1202858
	[0000][ M::kt_pipeline] read 1202858 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 526976, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 766, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3129)
[0000][PE] mean and std.dev: (678.56, 604.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.70, 60.97)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (513, 710, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2634)
[0000][PE] mean and std.dev: (783.65, 459.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202934 reads in 295.531 CPU sec, 33.811 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1202736
	[0000][ M::kt_pipeline] read 1202736 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 527516, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 743, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (936.21, 838.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.60, 60.84)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 568, 1069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2709)
[0000][PE] mean and std.dev: (669.48, 553.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202858 reads in 292.534 CPU sec, 31.475 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1202918
	[0000][ M::kt_pipeline] read 1202918 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527500, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 496, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4182)
[0000][PE] mean and std.dev: (936.89, 916.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.38, 60.83)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 325, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3979)
[0000][PE] mean and std.dev: (718.65, 752.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202736 reads in 296.948 CPU sec, 38.760 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1202916
	[0000][ M::kt_pipeline] read 1202916 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 527440, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 887, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3842)
[0000][PE] mean and std.dev: (1042.22, 891.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.46, 60.85)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 464, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2936)
[0000][PE] mean and std.dev: (676.25, 595.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202918 reads in 295.762 CPU sec, 28.828 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1202848
	[0000][ M::kt_pipeline] read 1202848 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527738, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 962, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6010)
[0000][PE] mean and std.dev: (1325.89, 1207.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.67, 60.95)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 593, 2319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6477)
[0000][PE] mean and std.dev: (1320.41, 1367.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202916 reads in 297.136 CPU sec, 36.798 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1202734
	[0000][ M::kt_pipeline] read 1202734 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527647, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 330, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2733)
[0000][PE] mean and std.dev: (648.61, 575.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.32, 60.68)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 733, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4048)
[0000][PE] mean and std.dev: (916.13, 770.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202848 reads in 295.688 CPU sec, 30.133 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1202782
	[0000][ M::kt_pipeline] read 1202782 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527345, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 1023, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5281)
[0000][PE] mean and std.dev: (1050.69, 878.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.20, 60.64)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (549, 662, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (818.10, 563.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202734 reads in 300.871 CPU sec, 43.347 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1202722
	[0000][ M::kt_pipeline] read 1202722 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 527110, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 812, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3112)
[0000][PE] mean and std.dev: (819.00, 527.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.30, 60.86)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 995, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5485)
[0000][PE] mean and std.dev: (1194.83, 1090.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202782 reads in 297.229 CPU sec, 48.443 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1202846
	[0000][ M::kt_pipeline] read 1202846 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527245, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 865, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3567)
[0000][PE] mean and std.dev: (784.56, 551.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.21, 60.68)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 953, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3280)
[0000][PE] mean and std.dev: (914.23, 687.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202722 reads in 294.508 CPU sec, 40.885 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1202828
	[0000][ M::kt_pipeline] read 1202828 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527191, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 399, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2836)
[0000][PE] mean and std.dev: (690.44, 645.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.37, 60.84)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 316, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2969)
[0000][PE] mean and std.dev: (819.71, 760.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202846 reads in 297.967 CPU sec, 45.221 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1202842
	[0000][ M::kt_pipeline] read 1202842 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 526989, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 286, 701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1669)
[0000][PE] mean and std.dev: (421.33, 274.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.37, 60.88)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 918, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2248)
[0000][PE] mean and std.dev: (880.46, 389.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202828 reads in 295.028 CPU sec, 37.719 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1202814
	[0000][ M::kt_pipeline] read 1202814 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527358, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 189, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1786)
[0000][PE] mean and std.dev: (359.47, 420.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.40, 60.90)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 915, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4107)
[0000][PE] mean and std.dev: (909.61, 640.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202842 reads in 295.497 CPU sec, 43.350 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1202730
	[0000][ M::kt_pipeline] read 1202730 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527102, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 495, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (649.32, 553.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.45, 60.81)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1412, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5147)
[0000][PE] mean and std.dev: (1427.56, 930.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202814 reads in 296.055 CPU sec, 38.671 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1202796
	[0000][ M::kt_pipeline] read 1202796 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527679, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 925, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6312)
[0000][PE] mean and std.dev: (1021.37, 945.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.98, 60.78)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 480, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (829.65, 800.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202730 reads in 294.833 CPU sec, 39.482 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1202738
	[0000][ M::kt_pipeline] read 1202738 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527007, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 794, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5875)
[0000][PE] mean and std.dev: (1165.35, 901.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.01, 60.67)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 871, 3184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9074)
[0000][PE] mean and std.dev: (1324.15, 1295.21)
[0000][PE] low and high boundaries for proper pairs: (1, 12019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202796 reads in 295.732 CPU sec, 36.131 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1202768
	[0000][ M::kt_pipeline] read 1202768 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527778, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 240, 455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 921)
[0000][PE] mean and std.dev: (261.58, 86.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.12, 60.74)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1047, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4685)
[0000][PE] mean and std.dev: (1377.43, 1016.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202738 reads in 285.203 CPU sec, 25.007 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1202926
	[0000][ M::kt_pipeline] read 1202926 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527224, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 214, 839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2255)
[0000][PE] mean and std.dev: (474.06, 479.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.18, 60.84)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (374, 946, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6092)
[0000][PE] mean and std.dev: (1194.14, 848.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202768 reads in 296.860 CPU sec, 35.765 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1202842
	[0000][ M::kt_pipeline] read 1202842 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527613, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 397, 794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2072)
[0000][PE] mean and std.dev: (609.06, 602.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.46, 60.83)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 1178, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (1135.72, 511.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202926 reads in 297.575 CPU sec, 38.471 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1202852
	[0000][ M::kt_pipeline] read 1202852 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527466, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (560, 996, 2827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7361)
[0000][PE] mean and std.dev: (1564.88, 1339.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.32, 60.97)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 852, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (993.05, 556.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202842 reads in 300.163 CPU sec, 38.006 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1202812
	[0000][ M::kt_pipeline] read 1202812 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 527682, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 288, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2755)
[0000][PE] mean and std.dev: (518.40, 438.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.12, 60.64)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 695, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (659.08, 513.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202852 reads in 298.025 CPU sec, 36.308 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1202868
	[0000][ M::kt_pipeline] read 1202868 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527455, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 845, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5747)
[0000][PE] mean and std.dev: (1238.06, 1272.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.19, 60.78)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (690, 1120, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2796)
[0000][PE] mean and std.dev: (953.67, 543.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202812 reads in 289.232 CPU sec, 31.177 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1202824
	[0000][ M::kt_pipeline] read 1202824 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 527502, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 527, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3027)
[0000][PE] mean and std.dev: (668.62, 502.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.07, 60.75)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (336, 626, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5559)
[0000][PE] mean and std.dev: (994.61, 839.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202868 reads in 301.832 CPU sec, 32.746 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1202648
	[0000][ M::kt_pipeline] read 1202648 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527640, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 209, 573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1379)
[0000][PE] mean and std.dev: (254.00, 178.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.07, 60.73)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 750, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3405)
[0000][PE] mean and std.dev: (882.64, 732.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202824 reads in 296.276 CPU sec, 35.942 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1202664
	[0000][ M::kt_pipeline] read 1202664 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 527548, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 513, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4267)
[0000][PE] mean and std.dev: (795.52, 702.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.14, 60.81)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1108, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2831)
[0000][PE] mean and std.dev: (1167.61, 691.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202648 reads in 293.765 CPU sec, 34.531 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1202694
	[0000][ M::kt_pipeline] read 1202694 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527730, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (492, 982, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5628)
[0000][PE] mean and std.dev: (1321.46, 1177.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.82, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 477, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3215)
[0000][PE] mean and std.dev: (780.05, 652.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202664 reads in 296.752 CPU sec, 31.481 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1202788
	[0000][ M::kt_pipeline] read 1202788 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527192, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 802, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (818.56, 676.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.94, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (709, 1139, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2887)
[0000][PE] mean and std.dev: (1070.04, 568.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202694 reads in 292.802 CPU sec, 36.004 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1202796
	[0000][ M::kt_pipeline] read 1202796 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527507, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (801, 1682, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4749)
[0000][PE] mean and std.dev: (1430.85, 893.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.13, 60.63)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (299, 724, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (842.48, 733.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202788 reads in 300.859 CPU sec, 30.724 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1202704
	[0000][ M::kt_pipeline] read 1202704 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527332, 5, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 222, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2114)
[0000][PE] mean and std.dev: (326.50, 295.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.88, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (335, 958, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5063)
[0000][PE] mean and std.dev: (1273.09, 1143.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202796 reads in 303.802 CPU sec, 38.506 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1202646
	[0000][ M::kt_pipeline] read 1202646 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527640, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 241, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (893.82, 913.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.08, 60.62)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202704 reads in 292.185 CPU sec, 35.264 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1202728
	[0000][ M::kt_pipeline] read 1202728 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527536, 3, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 1020, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3407)
[0000][PE] mean and std.dev: (612.50, 526.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.14, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (541, 1330, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (1193.27, 765.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202646 reads in 290.618 CPU sec, 33.023 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1202770
	[0000][ M::kt_pipeline] read 1202770 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527812, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (664, 826, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3943)
[0000][PE] mean and std.dev: (1052.27, 682.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.04, 60.53)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (436, 769, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2860)
[0000][PE] mean and std.dev: (913.00, 668.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202728 reads in 303.614 CPU sec, 29.543 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1202900
	[0000][ M::kt_pipeline] read 1202900 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527583, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 511, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (664.75, 623.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.04, 60.67)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (342, 1102, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5706)
[0000][PE] mean and std.dev: (1357.42, 1137.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202770 reads in 285.168 CPU sec, 27.864 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1202866
	[0000][ M::kt_pipeline] read 1202866 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527028, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 309, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3524)
[0000][PE] mean and std.dev: (838.09, 1055.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.10, 60.54)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 833, 2942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8438)
[0000][PE] mean and std.dev: (1361.57, 1631.86)
[0000][PE] low and high boundaries for proper pairs: (1, 11186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202900 reads in 303.140 CPU sec, 43.528 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1202850
	[0000][ M::kt_pipeline] read 1202850 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527614, 4, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 525, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (733.67, 626.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.12, 60.48)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 1074, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4566)
[0000][PE] mean and std.dev: (1086.53, 970.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202866 reads in 297.505 CPU sec, 39.639 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1202750
	[0000][ M::kt_pipeline] read 1202750 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 526945, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 622, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (945.00, 960.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.07, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (436, 984, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (770.00, 427.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202850 reads in 304.203 CPU sec, 40.841 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1202902
	[0000][ M::kt_pipeline] read 1202902 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 526801, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 672, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3776)
[0000][PE] mean and std.dev: (1001.76, 1164.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.32, 60.77)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (336, 730, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3036)
[0000][PE] mean and std.dev: (939.95, 779.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202750 reads in 292.579 CPU sec, 33.595 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1202640
	[0000][ M::kt_pipeline] read 1202640 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 527260, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 646, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3814)
[0000][PE] mean and std.dev: (897.57, 915.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.21, 60.56)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (610, 886, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3136)
[0000][PE] mean and std.dev: (1010.50, 614.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202902 reads in 297.356 CPU sec, 34.961 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1202784
	[0000][ M::kt_pipeline] read 1202784 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527706, 5, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 277, 2121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5947)
[0000][PE] mean and std.dev: (1180.00, 1186.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.15, 60.62)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1376, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3034)
[0000][PE] mean and std.dev: (1212.80, 526.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202640 reads in 293.323 CPU sec, 32.015 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1202744
	[0000][ M::kt_pipeline] read 1202744 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527742, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (698, 1116, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3986)
[0000][PE] mean and std.dev: (1262.00, 879.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.12, 60.64)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 649, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (842.97, 649.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202784 reads in 298.008 CPU sec, 35.082 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1202922
	[0000][ M::kt_pipeline] read 1202922 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 526880, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 323, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2113)
[0000][PE] mean and std.dev: (466.60, 444.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.21, 60.63)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 720, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4566)
[0000][PE] mean and std.dev: (1208.30, 1078.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202744 reads in 299.854 CPU sec, 25.410 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1202818
	[0000][ M::kt_pipeline] read 1202818 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527124, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 491, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3914)
[0000][PE] mean and std.dev: (742.74, 743.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.25, 60.65)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (331, 791, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (814.11, 550.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202922 reads in 303.933 CPU sec, 34.359 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1202812
	[0000][ M::kt_pipeline] read 1202812 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527646, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 602, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4355)
[0000][PE] mean and std.dev: (597.43, 490.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.29, 60.63)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (642, 1265, 2970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7626)
[0000][PE] mean and std.dev: (1865.20, 1647.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202818 reads in 299.916 CPU sec, 24.065 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1202750
	[0000][ M::kt_pipeline] read 1202750 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 528005, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (845, 1210, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (1084.36, 715.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.02, 60.58)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (322, 933, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (837.35, 625.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202812 reads in 303.401 CPU sec, 30.389 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1202776
	[0000][ M::kt_pipeline] read 1202776 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 526977, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (792, 1451, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (1579.18, 1007.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.46, 60.42)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (516, 903, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4251)
[0000][PE] mean and std.dev: (1041.17, 757.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202750 reads in 329.072 CPU sec, 39.466 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1202810
	[0000][ M::kt_pipeline] read 1202810 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527559, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 1246, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4742)
[0000][PE] mean and std.dev: (1305.53, 1174.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.65, 60.81)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 540, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2791)
[0000][PE] mean and std.dev: (684.67, 601.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202776 reads in 302.837 CPU sec, 29.361 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1202860
	[0000][ M::kt_pipeline] read 1202860 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527254, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 1079, 3271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9271)
[0000][PE] mean and std.dev: (2054.50, 2512.52)
[0000][PE] low and high boundaries for proper pairs: (1, 12271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.41, 60.78)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 910, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5641)
[0000][PE] mean and std.dev: (1396.15, 1501.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202810 reads in 300.293 CPU sec, 28.841 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1202894
	[0000][ M::kt_pipeline] read 1202894 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527373, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1088, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5559)
[0000][PE] mean and std.dev: (1161.59, 958.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.23, 60.55)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 1035, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3825)
[0000][PE] mean and std.dev: (787.79, 536.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202860 reads in 308.988 CPU sec, 26.675 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1202824
	[0000][ M::kt_pipeline] read 1202824 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 526645, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (639, 1054, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4674)
[0000][PE] mean and std.dev: (1363.86, 1192.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.52, 60.83)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 923, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5154)
[0000][PE] mean and std.dev: (1297.48, 1251.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202894 reads in 298.889 CPU sec, 31.782 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1202792
	[0000][ M::kt_pipeline] read 1202792 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527467, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 881, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4672)
[0000][PE] mean and std.dev: (1011.92, 864.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.21, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 1273, 2433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5889)
[0000][PE] mean and std.dev: (1605.94, 1292.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202824 reads in 305.292 CPU sec, 27.119 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1203082
	[0000][ M::kt_pipeline] read 1203082 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 526698, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 910, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5714)
[0000][PE] mean and std.dev: (1073.91, 1020.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.36, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 910, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3910)
[0000][PE] mean and std.dev: (710.58, 504.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202792 reads in 309.619 CPU sec, 34.043 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1202904
	[0000][ M::kt_pipeline] read 1202904 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 526751, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 855, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (974.46, 976.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.17, 60.64)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 722, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3977)
[0000][PE] mean and std.dev: (1032.43, 941.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203082 reads in 301.264 CPU sec, 33.062 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1202814
	[0000][ M::kt_pipeline] read 1202814 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527685, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 1015, 4757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13445)
[0000][PE] mean and std.dev: (1850.46, 1984.38)
[0000][PE] low and high boundaries for proper pairs: (1, 17789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.50, 60.71)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 923, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5620)
[0000][PE] mean and std.dev: (812.90, 732.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202904 reads in 309.770 CPU sec, 24.117 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1202712
	[0000][ M::kt_pipeline] read 1202712 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527369, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 712, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3928)
[0000][PE] mean and std.dev: (688.13, 568.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.51, 60.82)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 958, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5012)
[0000][PE] mean and std.dev: (1150.52, 1108.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6607)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202814 reads in 303.473 CPU sec, 26.324 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1202772
	[0000][ M::kt_pipeline] read 1202772 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527794, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 525, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1757)
[0000][PE] mean and std.dev: (420.47, 307.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.40, 60.66)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 753, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3696)
[0000][PE] mean and std.dev: (954.60, 823.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202712 reads in 292.954 CPU sec, 26.733 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1202748
	[0000][ M::kt_pipeline] read 1202748 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527127, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 801, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2752)
[0000][PE] mean and std.dev: (761.57, 592.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.45, 60.72)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1017, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (58, 2003)
[0000][PE] mean and std.dev: (861.19, 385.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2405)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202772 reads in 300.999 CPU sec, 27.592 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1202790
	[0000][ M::kt_pipeline] read 1202790 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527903, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 1034, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3341)
[0000][PE] mean and std.dev: (1006.59, 888.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.54, 60.85)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (620, 1063, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4940)
[0000][PE] mean and std.dev: (1322.13, 1118.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202748 reads in 291.718 CPU sec, 32.131 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1202644
	[0000][ M::kt_pipeline] read 1202644 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527312, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (911, 1180, 2861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6761)
[0000][PE] mean and std.dev: (1470.25, 1213.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.40, 60.54)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 1203, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5273)
[0000][PE] mean and std.dev: (1340.91, 1140.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202790 reads in 300.471 CPU sec, 26.543 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1202948
	[0000][ M::kt_pipeline] read 1202948 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 526783, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 318, 881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2231)
[0000][PE] mean and std.dev: (525.43, 565.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.81, 60.83)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 1180, 2868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8082)
[0000][PE] mean and std.dev: (1392.72, 1365.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202644 reads in 300.606 CPU sec, 34.509 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1202792
	[0000][ M::kt_pipeline] read 1202792 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527186, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (529, 1365, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5584)
[0000][PE] mean and std.dev: (1428.38, 936.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.64, 60.89)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 929, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5692)
[0000][PE] mean and std.dev: (1280.10, 1173.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202948 reads in 293.659 CPU sec, 24.464 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1202814
	[0000][ M::kt_pipeline] read 1202814 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527315, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 614, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (820.17, 760.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.53, 60.75)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 973, 3147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7601)
[0000][PE] mean and std.dev: (2177.00, 2072.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10466)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202792 reads in 306.179 CPU sec, 33.740 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1202814
	[0000][ M::kt_pipeline] read 1202814 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527244, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 656, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3623)
[0000][PE] mean and std.dev: (759.43, 592.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.71, 60.67)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 946, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4118)
[0000][PE] mean and std.dev: (891.75, 633.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5405)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202814 reads in 302.756 CPU sec, 26.412 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1202894
	[0000][ M::kt_pipeline] read 1202894 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527614, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 615, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5866)
[0000][PE] mean and std.dev: (1149.48, 1195.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.74, 60.76)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (325, 539, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4576)
[0000][PE] mean and std.dev: (990.10, 849.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202814 reads in 295.913 CPU sec, 35.207 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1202866
	[0000][ M::kt_pipeline] read 1202866 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527007, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 668, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3135)
[0000][PE] mean and std.dev: (720.62, 635.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.67, 60.74)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (225, 435, 838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2064)
[0000][PE] mean and std.dev: (535.06, 372.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202894 reads in 297.638 CPU sec, 27.214 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1202780
	[0000][ M::kt_pipeline] read 1202780 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527719, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 1074, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5229)
[0000][PE] mean and std.dev: (1225.29, 1066.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.68, 60.80)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 940, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4245)
[0000][PE] mean and std.dev: (1005.05, 835.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202866 reads in 305.215 CPU sec, 38.077 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1202838
	[0000][ M::kt_pipeline] read 1202838 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527945, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 793, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2972)
[0000][PE] mean and std.dev: (857.22, 585.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.76, 60.84)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 877, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3553)
[0000][PE] mean and std.dev: (975.95, 717.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202780 reads in 301.553 CPU sec, 43.844 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1202800
	[0000][ M::kt_pipeline] read 1202800 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527303, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (600, 1585, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4350)
[0000][PE] mean and std.dev: (1218.16, 744.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.79, 60.87)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (405, 841, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3633)
[0000][PE] mean and std.dev: (946.30, 866.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202838 reads in 299.941 CPU sec, 36.964 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1202842
	[0000][ M::kt_pipeline] read 1202842 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527371, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 641, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2973)
[0000][PE] mean and std.dev: (599.40, 398.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.65, 60.81)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 818, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (841.65, 695.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202800 reads in 300.918 CPU sec, 36.072 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1202692
	[0000][ M::kt_pipeline] read 1202692 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527788, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 1054, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (1144.43, 1123.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.66, 60.93)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 248, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (685.61, 641.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202842 reads in 300.611 CPU sec, 32.010 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000089, nseq: 1202804
	[0000][ M::kt_pipeline] read 1202804 sequences (180000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527309, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 928, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3761)
[0000][PE] mean and std.dev: (804.37, 589.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.67, 60.91)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (385, 795, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (923.92, 600.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202692 reads in 294.042 CPU sec, 37.610 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1202768
	[0000][ M::kt_pipeline] read 1202768 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 526898, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 774, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6974)
[0000][PE] mean and std.dev: (1272.29, 1350.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.62, 60.82)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 805, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5467)
[0000][PE] mean and std.dev: (941.07, 747.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202804 reads in 302.862 CPU sec, 27.205 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1202830
	[0000][ M::kt_pipeline] read 1202830 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527906, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 694, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2809)
[0000][PE] mean and std.dev: (715.32, 554.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.50, 60.81)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 915, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3993)
[0000][PE] mean and std.dev: (1029.46, 966.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202768 reads in 296.871 CPU sec, 27.690 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1202812
	[0000][ M::kt_pipeline] read 1202812 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 527287, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 213, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 884)
[0000][PE] mean and std.dev: (214.00, 111.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.89, 60.97)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 801, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (1028.71, 911.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202830 reads in 293.801 CPU sec, 27.134 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1202844
	[0000][ M::kt_pipeline] read 1202844 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527363, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 296, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (507.40, 490.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.68, 60.85)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1182, 2423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5821)
[0000][PE] mean and std.dev: (1396.54, 998.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202812 reads in 302.309 CPU sec, 28.718 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1202766
	[0000][ M::kt_pipeline] read 1202766 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 527178, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 325, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3013)
[0000][PE] mean and std.dev: (590.43, 626.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.55, 60.75)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 749, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (817.28, 755.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202844 reads in 295.151 CPU sec, 27.627 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1202794
	[0000][ M::kt_pipeline] read 1202794 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527483, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 745, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4294)
[0000][PE] mean and std.dev: (1021.88, 875.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.79, 60.84)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 929, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4041)
[0000][PE] mean and std.dev: (1018.94, 775.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202766 reads in 292.051 CPU sec, 28.982 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1202894
	[0000][ M::kt_pipeline] read 1202894 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527399, 4, 37)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 481, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (815.32, 674.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.47, 60.83)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (357, 1008, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4266)
[0000][PE] mean and std.dev: (910.21, 584.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202794 reads in 300.022 CPU sec, 30.124 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1202922
	[0000][ M::kt_pipeline] read 1202922 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527952, 3, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 249, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2305)
[0000][PE] mean and std.dev: (488.55, 550.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.60, 60.91)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 748, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (1016.66, 904.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202894 reads in 301.902 CPU sec, 27.549 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1202810
	[0000][ M::kt_pipeline] read 1202810 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527498, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 915, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2676)
[0000][PE] mean and std.dev: (820.61, 587.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.58, 60.96)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 764, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3223)
[0000][PE] mean and std.dev: (686.62, 449.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202922 reads in 293.085 CPU sec, 34.214 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1202828
	[0000][ M::kt_pipeline] read 1202828 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527457, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 818, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3936)
[0000][PE] mean and std.dev: (860.80, 729.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.33, 60.83)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1098, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (1060.36, 620.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202810 reads in 295.757 CPU sec, 36.008 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1202924
	[0000][ M::kt_pipeline] read 1202924 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527407, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 778, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (609.21, 417.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.50, 60.89)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (333, 688, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3777)
[0000][PE] mean and std.dev: (773.54, 634.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202828 reads in 295.566 CPU sec, 36.831 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1202804
	[0000][ M::kt_pipeline] read 1202804 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527288, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 620, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4153)
[0000][PE] mean and std.dev: (941.35, 985.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.41, 60.82)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 670, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3979)
[0000][PE] mean and std.dev: (876.33, 804.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202924 reads in 296.476 CPU sec, 30.953 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1202818
	[0000][ M::kt_pipeline] read 1202818 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527686, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 462, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2752)
[0000][PE] mean and std.dev: (495.08, 327.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.53, 60.88)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (390, 728, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4485)
[0000][PE] mean and std.dev: (893.57, 702.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202804 reads in 291.653 CPU sec, 29.216 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1202798
	[0000][ M::kt_pipeline] read 1202798 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 526739, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 726, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5075)
[0000][PE] mean and std.dev: (1026.00, 999.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.46, 60.79)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 1057, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5060)
[0000][PE] mean and std.dev: (1157.47, 769.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202818 reads in 290.034 CPU sec, 25.636 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1202912
	[0000][ M::kt_pipeline] read 1202912 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527520, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 429, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3629)
[0000][PE] mean and std.dev: (709.20, 687.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.28, 60.70)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (269, 1247, 2540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7082)
[0000][PE] mean and std.dev: (1380.96, 1152.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202798 reads in 293.739 CPU sec, 29.414 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1202760
	[0000][ M::kt_pipeline] read 1202760 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527520, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 509, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3082)
[0000][PE] mean and std.dev: (714.00, 647.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.40, 60.79)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 335, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5520)
[0000][PE] mean and std.dev: (1005.56, 911.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202912 reads in 289.208 CPU sec, 27.831 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1202708
	[0000][ M::kt_pipeline] read 1202708 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 528033, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 733, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3717)
[0000][PE] mean and std.dev: (983.62, 960.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.46, 60.86)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (414, 936, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4362)
[0000][PE] mean and std.dev: (1039.38, 647.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202760 reads in 291.173 CPU sec, 25.238 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1202866
	[0000][ M::kt_pipeline] read 1202866 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 527072, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 395, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (825.94, 821.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.52, 60.83)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 732, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (777.35, 602.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202708 reads in 297.615 CPU sec, 32.153 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1202878
	[0000][ M::kt_pipeline] read 1202878 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527572, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 529, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (755.14, 584.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.16, 60.63)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1146, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3854)
[0000][PE] mean and std.dev: (1194.33, 846.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202866 reads in 298.523 CPU sec, 29.704 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1202866
	[0000][ M::kt_pipeline] read 1202866 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527515, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 298, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1621)
[0000][PE] mean and std.dev: (347.29, 338.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.31, 60.96)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 747, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3293)
[0000][PE] mean and std.dev: (1008.18, 901.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202878 reads in 295.629 CPU sec, 28.650 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1202888
	[0000][ M::kt_pipeline] read 1202888 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527679, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 843, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4963)
[0000][PE] mean and std.dev: (1076.77, 1116.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.47, 60.88)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (166, 402, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3136)
[0000][PE] mean and std.dev: (584.71, 487.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202866 reads in 288.662 CPU sec, 27.950 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1202854
	[0000][ M::kt_pipeline] read 1202854 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527017, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 848, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4856)
[0000][PE] mean and std.dev: (1137.08, 1174.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.18, 60.78)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (369, 915, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (1143.89, 927.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202888 reads in 290.690 CPU sec, 21.992 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1202852
	[0000][ M::kt_pipeline] read 1202852 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527607, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 328, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2533)
[0000][PE] mean and std.dev: (609.14, 508.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.07, 60.72)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1037, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2425)
[0000][PE] mean and std.dev: (955.21, 457.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202854 reads in 296.294 CPU sec, 31.383 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1202838
	[0000][ M::kt_pipeline] read 1202838 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 527233, 3, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 880, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3107)
[0000][PE] mean and std.dev: (888.97, 694.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.42, 60.80)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (286, 732, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2992)
[0000][PE] mean and std.dev: (809.23, 582.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202852 reads in 288.016 CPU sec, 25.922 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1202828
	[0000][ M::kt_pipeline] read 1202828 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527761, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 756, 2423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6677)
[0000][PE] mean and std.dev: (1401.04, 1550.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.10, 60.56)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 691, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2151)
[0000][PE] mean and std.dev: (628.87, 344.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202838 reads in 302.002 CPU sec, 35.058 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1202840
	[0000][ M::kt_pipeline] read 1202840 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527161, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 841, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (771.50, 673.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.13, 60.78)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1903, 3242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8106)
[0000][PE] mean and std.dev: (2394.11, 2050.28)
[0000][PE] low and high boundaries for proper pairs: (1, 10595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202828 reads in 295.637 CPU sec, 36.086 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1202742
	[0000][ M::kt_pipeline] read 1202742 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527192, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 437, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2517)
[0000][PE] mean and std.dev: (689.65, 602.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.10, 60.72)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (613, 1232, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3355)
[0000][PE] mean and std.dev: (1088.20, 645.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202840 reads in 295.536 CPU sec, 23.425 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1202872
	[0000][ M::kt_pipeline] read 1202872 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527342, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 590, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5750)
[0000][PE] mean and std.dev: (1299.24, 1460.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.24, 60.62)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 879, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2965)
[0000][PE] mean and std.dev: (864.50, 613.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202742 reads in 303.799 CPU sec, 35.589 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1202810
	[0000][ M::kt_pipeline] read 1202810 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527346, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 329, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5549)
[0000][PE] mean and std.dev: (1266.65, 1552.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.99, 60.83)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (604, 1203, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (1136.15, 703.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202872 reads in 293.017 CPU sec, 32.100 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1202836
	[0000][ M::kt_pipeline] read 1202836 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527464, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 331, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3208)
[0000][PE] mean and std.dev: (708.20, 681.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (322.08, 60.81)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 691, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5622)
[0000][PE] mean and std.dev: (966.29, 927.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202810 reads in 289.718 CPU sec, 25.200 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1202884
	[0000][ M::kt_pipeline] read 1202884 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 526977, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 714, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (897.71, 779.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.02, 60.66)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (325, 922, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (965.05, 680.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202836 reads in 297.289 CPU sec, 32.434 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1202860
	[0000][ M::kt_pipeline] read 1202860 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527339, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 753, 2956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8356)
[0000][PE] mean and std.dev: (1192.25, 1252.55)
[0000][PE] low and high boundaries for proper pairs: (1, 11056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (322.00, 60.88)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (386, 901, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4550)
[0000][PE] mean and std.dev: (1144.48, 988.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202884 reads in 307.780 CPU sec, 30.814 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1202868
	[0000][ M::kt_pipeline] read 1202868 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527478, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 625, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3117)
[0000][PE] mean and std.dev: (736.12, 735.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.94, 60.81)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (362, 975, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4100)
[0000][PE] mean and std.dev: (1036.05, 632.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202860 reads in 306.617 CPU sec, 34.259 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1202798
	[0000][ M::kt_pipeline] read 1202798 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527120, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 608, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6422)
[0000][PE] mean and std.dev: (1083.70, 1085.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.91, 60.79)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 906, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3753)
[0000][PE] mean and std.dev: (911.00, 762.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202868 reads in 296.959 CPU sec, 30.788 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1202742
	[0000][ M::kt_pipeline] read 1202742 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 526820, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 266, 838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2074)
[0000][PE] mean and std.dev: (401.00, 433.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.41, 60.43)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 782, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4192)
[0000][PE] mean and std.dev: (769.88, 558.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202798 reads in 312.055 CPU sec, 31.630 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1202720
	[0000][ M::kt_pipeline] read 1202720 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527028, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 818, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (899.50, 742.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.19, 60.42)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 312, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3070)
[0000][PE] mean and std.dev: (690.35, 698.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202742 reads in 310.569 CPU sec, 23.820 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1202754
	[0000][ M::kt_pipeline] read 1202754 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 526819, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (789, 1450, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4569)
[0000][PE] mean and std.dev: (1165.61, 743.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.07, 60.22)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 1164, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5944)
[0000][PE] mean and std.dev: (1083.86, 992.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202720 reads in 316.801 CPU sec, 32.593 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1202864
	[0000][ M::kt_pipeline] read 1202864 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527203, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 755, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3602)
[0000][PE] mean and std.dev: (806.43, 635.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.61, 60.48)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 1251, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4127)
[0000][PE] mean and std.dev: (903.68, 590.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202754 reads in 301.225 CPU sec, 23.941 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1202712
	[0000][ M::kt_pipeline] read 1202712 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527108, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 483, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4869)
[0000][PE] mean and std.dev: (1007.21, 987.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.72, 60.65)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 698, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2512)
[0000][PE] mean and std.dev: (757.26, 620.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202864 reads in 310.124 CPU sec, 29.018 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1202830
	[0000][ M::kt_pipeline] read 1202830 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 526817, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 431, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4199)
[0000][PE] mean and std.dev: (493.21, 441.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.63, 60.47)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 1027, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (1017.19, 714.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202712 reads in 310.613 CPU sec, 31.694 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1202848
	[0000][ M::kt_pipeline] read 1202848 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 526935, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 718, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3109)
[0000][PE] mean and std.dev: (921.18, 859.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.92, 60.75)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 701, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2586)
[0000][PE] mean and std.dev: (770.08, 581.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202830 reads in 303.536 CPU sec, 30.569 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1202814
	[0000][ M::kt_pipeline] read 1202814 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 526952, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 883, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2991)
[0000][PE] mean and std.dev: (807.77, 611.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.11, 60.55)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 824, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6987)
[0000][PE] mean and std.dev: (1458.21, 1414.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202848 reads in 306.211 CPU sec, 28.058 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1202766
	[0000][ M::kt_pipeline] read 1202766 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527155, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 1103, 2474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6966)
[0000][PE] mean and std.dev: (1222.79, 1154.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.04, 60.52)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 784, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3638)
[0000][PE] mean and std.dev: (811.16, 806.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202814 reads in 304.778 CPU sec, 27.568 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1202688
	[0000][ M::kt_pipeline] read 1202688 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527371, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 1316, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5558)
[0000][PE] mean and std.dev: (1350.07, 1027.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.09, 60.44)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (325, 579, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2287)
[0000][PE] mean and std.dev: (647.17, 417.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202766 reads in 295.124 CPU sec, 22.778 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1202768
	[0000][ M::kt_pipeline] read 1202768 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527145, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 638, 779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1913)
[0000][PE] mean and std.dev: (574.86, 467.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.13, 60.55)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 792, 2430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6652)
[0000][PE] mean and std.dev: (1653.43, 1781.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202688 reads in 300.085 CPU sec, 24.624 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1202816
	[0000][ M::kt_pipeline] read 1202816 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 527579, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 626, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4022)
[0000][PE] mean and std.dev: (907.74, 896.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.14, 60.60)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 278, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3947)
[0000][PE] mean and std.dev: (696.14, 759.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202768 reads in 295.891 CPU sec, 29.803 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1202750
	[0000][ M::kt_pipeline] read 1202750 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 527392, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 543, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5889)
[0000][PE] mean and std.dev: (1263.85, 1323.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.19, 60.54)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 396, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4512)
[0000][PE] mean and std.dev: (973.41, 989.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202816 reads in 299.114 CPU sec, 21.603 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1202752
	[0000][ M::kt_pipeline] read 1202752 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527438, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 1243, 2353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6495)
[0000][PE] mean and std.dev: (1480.78, 1495.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.38, 60.79)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (546, 1071, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4056)
[0000][PE] mean and std.dev: (1135.86, 843.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202750 reads in 299.290 CPU sec, 28.992 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1202876
	[0000][ M::kt_pipeline] read 1202876 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527663, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 262, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4156)
[0000][PE] mean and std.dev: (660.65, 616.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.32, 60.75)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 266, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2941)
[0000][PE] mean and std.dev: (618.76, 588.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202752 reads in 303.050 CPU sec, 28.786 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1202754
	[0000][ M::kt_pipeline] read 1202754 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 526675, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 842, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (991.33, 838.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.10, 60.55)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 1034, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4959)
[0000][PE] mean and std.dev: (1033.17, 785.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202876 reads in 294.624 CPU sec, 23.131 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1202792
	[0000][ M::kt_pipeline] read 1202792 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527142, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 744, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3748)
[0000][PE] mean and std.dev: (695.86, 596.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.14, 60.64)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 1279, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4502)
[0000][PE] mean and std.dev: (1141.80, 877.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202754 reads in 302.799 CPU sec, 32.873 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1202796
	[0000][ M::kt_pipeline] read 1202796 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 527109, 6, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 1020, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4632)
[0000][PE] mean and std.dev: (941.86, 680.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.15, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (345, 939, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (913.04, 662.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202792 reads in 294.500 CPU sec, 26.843 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1202842
	[0000][ M::kt_pipeline] read 1202842 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527386, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 724, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (838.08, 736.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.18, 60.67)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (516, 1014, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3162)
[0000][PE] mean and std.dev: (1044.35, 739.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202796 reads in 304.262 CPU sec, 32.040 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1202814
	[0000][ M::kt_pipeline] read 1202814 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527146, 0, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 521, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4212)
[0000][PE] mean and std.dev: (819.10, 746.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.37, 60.81)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 1019, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4079)
[0000][PE] mean and std.dev: (1056.80, 733.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202842 reads in 298.195 CPU sec, 28.994 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1202776
	[0000][ M::kt_pipeline] read 1202776 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 526951, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 1090, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3203)
[0000][PE] mean and std.dev: (1016.50, 620.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.32, 60.53)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 738, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3774)
[0000][PE] mean and std.dev: (823.45, 606.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202814 reads in 307.602 CPU sec, 33.425 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1202816
	[0000][ M::kt_pipeline] read 1202816 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 527648, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 656, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (1087.50, 1096.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.50, 60.97)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (454, 1031, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3304)
[0000][PE] mean and std.dev: (935.71, 507.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4254)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202776 reads in 294.369 CPU sec, 27.528 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1202822
	[0000][ M::kt_pipeline] read 1202822 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 527371, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 445, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (810.83, 794.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.41, 60.76)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1244, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3840)
[0000][PE] mean and std.dev: (1312.67, 818.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202816 reads in 300.782 CPU sec, 26.331 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1202752
	[0000][ M::kt_pipeline] read 1202752 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527067, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (838, 960, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2596)
[0000][PE] mean and std.dev: (1061.74, 583.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.15, 60.55)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1054, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2733)
[0000][PE] mean and std.dev: (895.50, 457.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202822 reads in 290.828 CPU sec, 24.951 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1202896
	[0000][ M::kt_pipeline] read 1202896 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527232, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 197, 791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2063)
[0000][PE] mean and std.dev: (312.81, 274.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.13, 60.62)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 793, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3139)
[0000][PE] mean and std.dev: (741.81, 530.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202752 reads in 300.218 CPU sec, 25.380 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1202824
	[0000][ M::kt_pipeline] read 1202824 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 526780, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 1019, 2436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6750)
[0000][PE] mean and std.dev: (1458.38, 1517.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.23, 60.68)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (348, 1026, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3459)
[0000][PE] mean and std.dev: (995.60, 661.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202896 reads in 298.834 CPU sec, 26.076 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1202814
	[0000][ M::kt_pipeline] read 1202814 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527345, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 484, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2945)
[0000][PE] mean and std.dev: (534.36, 416.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.19, 60.62)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 403, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2358)
[0000][PE] mean and std.dev: (560.48, 413.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202824 reads in 316.135 CPU sec, 29.316 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1202784
	[0000][ M::kt_pipeline] read 1202784 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 526724, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 618, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4770)
[0000][PE] mean and std.dev: (993.73, 1007.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.12, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (443, 837, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3014)
[0000][PE] mean and std.dev: (808.44, 485.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202814 reads in 304.910 CPU sec, 21.502 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1202820
	[0000][ M::kt_pipeline] read 1202820 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527040, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 660, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3847)
[0000][PE] mean and std.dev: (759.94, 693.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.28, 60.55)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 817, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3519)
[0000][PE] mean and std.dev: (718.83, 541.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202784 reads in 314.172 CPU sec, 25.695 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1202892
	[0000][ M::kt_pipeline] read 1202892 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527498, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 720, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4804)
[0000][PE] mean and std.dev: (1186.00, 1424.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.21, 60.52)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 1039, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (987.50, 772.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202820 reads in 310.423 CPU sec, 28.562 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000045, nseq: 1202748
	[0000][ M::kt_pipeline] read 1202748 sequences (180000045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527164, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 574, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5662)
[0000][PE] mean and std.dev: (1316.89, 1626.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.44, 60.78)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (342, 991, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4365)
[0000][PE] mean and std.dev: (1061.08, 706.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202892 reads in 301.447 CPU sec, 25.038 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1202886
	[0000][ M::kt_pipeline] read 1202886 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 526958, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 443, 929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2181)
[0000][PE] mean and std.dev: (512.23, 476.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.32, 60.63)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (313, 845, 2625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7249)
[0000][PE] mean and std.dev: (1618.36, 1884.68)
[0000][PE] low and high boundaries for proper pairs: (1, 9561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202748 reads in 311.429 CPU sec, 25.922 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1202902
	[0000][ M::kt_pipeline] read 1202902 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527207, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 300, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3990)
[0000][PE] mean and std.dev: (864.29, 1000.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.53, 60.85)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 815, 3237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9179)
[0000][PE] mean and std.dev: (1295.78, 1337.16)
[0000][PE] low and high boundaries for proper pairs: (1, 12150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202886 reads in 297.790 CPU sec, 27.540 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1202832
	[0000][ M::kt_pipeline] read 1202832 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527302, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 869, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4934)
[0000][PE] mean and std.dev: (1070.79, 1012.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.44, 60.75)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (429, 1304, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4968)
[0000][PE] mean and std.dev: (1131.15, 704.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202902 reads in 308.891 CPU sec, 24.654 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1202912
	[0000][ M::kt_pipeline] read 1202912 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 527183, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 641, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3875)
[0000][PE] mean and std.dev: (887.80, 779.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.62, 60.84)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 1380, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6815)
[0000][PE] mean and std.dev: (1345.35, 962.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202832 reads in 302.118 CPU sec, 27.958 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1202902
	[0000][ M::kt_pipeline] read 1202902 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527381, 5, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 754, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (1079.67, 899.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.58, 60.76)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 699, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2718)
[0000][PE] mean and std.dev: (745.70, 570.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202912 reads in 289.788 CPU sec, 22.464 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1202788
	[0000][ M::kt_pipeline] read 1202788 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527595, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 293, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2547)
[0000][PE] mean and std.dev: (479.38, 397.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.69, 60.94)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1251, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (1240.30, 592.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202902 reads in 305.997 CPU sec, 28.677 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1202854
	[0000][ M::kt_pipeline] read 1202854 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 526956, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 691, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2686)
[0000][PE] mean and std.dev: (623.24, 434.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.53, 60.82)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1083, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3061)
[0000][PE] mean and std.dev: (1175.53, 738.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202788 reads in 303.395 CPU sec, 28.322 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1202948
	[0000][ M::kt_pipeline] read 1202948 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 527980, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 1224, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4683)
[0000][PE] mean and std.dev: (1091.70, 829.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.50, 60.84)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 718, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3052)
[0000][PE] mean and std.dev: (789.24, 657.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202854 reads in 301.240 CPU sec, 26.106 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1202882
	[0000][ M::kt_pipeline] read 1202882 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 527360, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 1016, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2745)
[0000][PE] mean and std.dev: (832.73, 622.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.63, 60.77)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (379, 802, 999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2239)
[0000][PE] mean and std.dev: (789.40, 599.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202948 reads in 291.546 CPU sec, 23.356 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1202898
	[0000][ M::kt_pipeline] read 1202898 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 526926, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 951, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (891.74, 670.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.26, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (330, 961, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (986.68, 687.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202882 reads in 305.023 CPU sec, 25.508 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1202792
	[0000][ M::kt_pipeline] read 1202792 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527140, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 273, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (574.75, 580.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.18, 60.64)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 1076, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3303)
[0000][PE] mean and std.dev: (1077.05, 725.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202898 reads in 301.452 CPU sec, 29.114 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1202854
	[0000][ M::kt_pipeline] read 1202854 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 526942, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 920, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (558.00, 490.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.18, 60.66)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 892, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (773.12, 528.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202792 reads in 297.690 CPU sec, 20.930 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1202854
	[0000][ M::kt_pipeline] read 1202854 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527415, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 1102, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3769)
[0000][PE] mean and std.dev: (920.60, 642.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.25, 60.68)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 763, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3661)
[0000][PE] mean and std.dev: (995.55, 868.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202854 reads in 299.905 CPU sec, 30.725 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1202852
	[0000][ M::kt_pipeline] read 1202852 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527420, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 407, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2569)
[0000][PE] mean and std.dev: (633.56, 497.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.50, 60.84)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 667, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (1043.56, 931.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202854 reads in 299.369 CPU sec, 29.391 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1202890
	[0000][ M::kt_pipeline] read 1202890 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527479, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 336, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (822.30, 894.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.23, 60.55)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 635, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3553)
[0000][PE] mean and std.dev: (812.44, 686.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202852 reads in 309.608 CPU sec, 37.575 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1202864
	[0000][ M::kt_pipeline] read 1202864 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527305, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 661, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4936)
[0000][PE] mean and std.dev: (938.52, 831.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.74, 60.91)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 843, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2776)
[0000][PE] mean and std.dev: (714.11, 511.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202890 reads in 288.104 CPU sec, 26.018 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1202708
	[0000][ M::kt_pipeline] read 1202708 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 526972, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 875, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3403)
[0000][PE] mean and std.dev: (902.30, 748.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 320, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.62, 60.76)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (538, 1165, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3997)
[0000][PE] mean and std.dev: (1179.44, 787.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202864 reads in 300.259 CPU sec, 37.822 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1202798
	[0000][ M::kt_pipeline] read 1202798 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527615, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 1147, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4424)
[0000][PE] mean and std.dev: (1051.45, 917.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.44, 60.64)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1619, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4615)
[0000][PE] mean and std.dev: (1488.70, 765.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202708 reads in 297.696 CPU sec, 29.553 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1202834
	[0000][ M::kt_pipeline] read 1202834 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527672, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 1362, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5082)
[0000][PE] mean and std.dev: (1030.56, 797.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.43, 60.77)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (299, 900, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (819.05, 513.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202798 reads in 303.647 CPU sec, 21.952 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1202852
	[0000][ M::kt_pipeline] read 1202852 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527385, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 995, 3242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9064)
[0000][PE] mean and std.dev: (1733.00, 2157.97)
[0000][PE] low and high boundaries for proper pairs: (1, 11975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.41, 60.81)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (370, 849, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2842)
[0000][PE] mean and std.dev: (895.87, 672.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202834 reads in 287.089 CPU sec, 26.217 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1202794
	[0000][ M::kt_pipeline] read 1202794 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527671, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 835, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4775)
[0000][PE] mean and std.dev: (1045.74, 986.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.20, 60.66)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 705, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4921)
[0000][PE] mean and std.dev: (987.42, 776.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202852 reads in 298.433 CPU sec, 35.355 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1202740
	[0000][ M::kt_pipeline] read 1202740 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527746, 11, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 519, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3797)
[0000][PE] mean and std.dev: (879.88, 847.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.43, 60.91)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (94, 3725, 3848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11356)
[0000][PE] mean and std.dev: (2113.45, 1833.77)
[0000][PE] low and high boundaries for proper pairs: (1, 15110)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (316, 770, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6568)
[0000][PE] mean and std.dev: (1372.95, 1309.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202794 reads in 298.440 CPU sec, 27.707 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1202788
	[0000][ M::kt_pipeline] read 1202788 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527411, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 543, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3201)
[0000][PE] mean and std.dev: (702.88, 605.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.29, 60.65)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 878, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5128)
[0000][PE] mean and std.dev: (1044.43, 920.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202740 reads in 309.259 CPU sec, 23.905 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1202854
	[0000][ M::kt_pipeline] read 1202854 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527534, 3, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (588, 1062, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4983)
[0000][PE] mean and std.dev: (1245.24, 920.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.14, 60.70)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 1055, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3470)
[0000][PE] mean and std.dev: (1036.77, 784.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202788 reads in 308.569 CPU sec, 28.737 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1202804
	[0000][ M::kt_pipeline] read 1202804 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 526623, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 894, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4639)
[0000][PE] mean and std.dev: (983.25, 1031.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.39, 60.84)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 912, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2979)
[0000][PE] mean and std.dev: (901.26, 644.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202854 reads in 305.500 CPU sec, 27.484 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1202874
	[0000][ M::kt_pipeline] read 1202874 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 526991, 0, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 404, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2074)
[0000][PE] mean and std.dev: (563.50, 414.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.00, 60.62)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (413, 1027, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3083)
[0000][PE] mean and std.dev: (870.35, 535.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202804 reads in 297.142 CPU sec, 25.867 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1202836
	[0000][ M::kt_pipeline] read 1202836 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 527975, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 784, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (867.41, 748.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.42, 60.90)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 931, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3618)
[0000][PE] mean and std.dev: (923.00, 789.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202874 reads in 301.319 CPU sec, 33.749 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1202906
	[0000][ M::kt_pipeline] read 1202906 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 527277, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 1126, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5715)
[0000][PE] mean and std.dev: (1380.96, 1339.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.34, 60.78)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 1181, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4305)
[0000][PE] mean and std.dev: (923.19, 677.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202836 reads in 298.189 CPU sec, 22.845 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1202688
	[0000][ M::kt_pipeline] read 1202688 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527371, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1021, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5394)
[0000][PE] mean and std.dev: (1340.17, 1181.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.30, 60.94)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 1040, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3017)
[0000][PE] mean and std.dev: (1001.82, 468.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202906 reads in 309.495 CPU sec, 33.174 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1202736
	[0000][ M::kt_pipeline] read 1202736 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527367, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 977, 3036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8612)
[0000][PE] mean and std.dev: (1366.10, 1326.10)
[0000][PE] low and high boundaries for proper pairs: (1, 11400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.03, 60.57)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (302, 1059, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4643)
[0000][PE] mean and std.dev: (1065.77, 820.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202688 reads in 315.256 CPU sec, 32.635 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1202762
	[0000][ M::kt_pipeline] read 1202762 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527644, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 1123, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6287)
[0000][PE] mean and std.dev: (1199.83, 1152.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.27, 60.90)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (374, 905, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4766)
[0000][PE] mean and std.dev: (1263.32, 1190.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202736 reads in 319.207 CPU sec, 30.569 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1202776
	[0000][ M::kt_pipeline] read 1202776 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527701, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 312, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3751)
[0000][PE] mean and std.dev: (597.00, 534.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.96, 60.58)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (248, 415, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2828)
[0000][PE] mean and std.dev: (594.81, 453.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202762 reads in 288.679 CPU sec, 22.645 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1202788
	[0000][ M::kt_pipeline] read 1202788 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527260, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 382, 789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1983)
[0000][PE] mean and std.dev: (493.33, 472.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.14, 60.63)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1543, 3043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7377)
[0000][PE] mean and std.dev: (1881.08, 1657.62)
[0000][PE] low and high boundaries for proper pairs: (1, 9544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202776 reads in 295.170 CPU sec, 26.696 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1202776
	[0000][ M::kt_pipeline] read 1202776 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527321, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 548, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (715.10, 624.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.02, 60.69)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 1261, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5111)
[0000][PE] mean and std.dev: (1292.26, 1089.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202788 reads in 291.427 CPU sec, 24.718 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1202828
	[0000][ M::kt_pipeline] read 1202828 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527187, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 733, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3151)
[0000][PE] mean and std.dev: (686.85, 506.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.02, 60.68)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (509, 1167, 3137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8393)
[0000][PE] mean and std.dev: (1553.83, 1223.23)
[0000][PE] low and high boundaries for proper pairs: (1, 11021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202776 reads in 293.362 CPU sec, 23.245 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1202758
	[0000][ M::kt_pipeline] read 1202758 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527483, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 245, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1435)
[0000][PE] mean and std.dev: (317.19, 263.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.12, 60.71)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (567, 799, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (945.74, 594.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202828 reads in 304.852 CPU sec, 26.554 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1202930
	[0000][ M::kt_pipeline] read 1202930 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527183, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 777, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3244)
[0000][PE] mean and std.dev: (790.24, 555.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 524)
[0000][PE] mean and std.dev: (322.26, 60.78)
[0000][PE] low and high boundaries for proper pairs: (38, 605)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (613, 1577, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5773)
[0000][PE] mean and std.dev: (1465.37, 1155.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202758 reads in 308.860 CPU sec, 25.948 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1202844
	[0000][ M::kt_pipeline] read 1202844 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527808, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 293, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (841.95, 849.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.98, 60.62)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (566, 895, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2717)
[0000][PE] mean and std.dev: (915.46, 510.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202930 reads in 306.718 CPU sec, 26.698 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1202806
	[0000][ M::kt_pipeline] read 1202806 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527309, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (620, 1249, 2709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6887)
[0000][PE] mean and std.dev: (1632.71, 1370.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.00, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (376, 680, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3223)
[0000][PE] mean and std.dev: (884.26, 624.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202844 reads in 311.955 CPU sec, 27.816 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1202868
	[0000][ M::kt_pipeline] read 1202868 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527432, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 616, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3680)
[0000][PE] mean and std.dev: (721.67, 559.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.30, 60.71)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 1040, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3743)
[0000][PE] mean and std.dev: (866.36, 667.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202806 reads in 309.772 CPU sec, 27.949 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1202886
	[0000][ M::kt_pipeline] read 1202886 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527451, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (790, 1003, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (1116.10, 676.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.86, 60.80)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (382, 1047, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3910)
[0000][PE] mean and std.dev: (926.53, 695.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202868 reads in 304.131 CPU sec, 31.699 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1202794
	[0000][ M::kt_pipeline] read 1202794 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527758, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 696, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3687)
[0000][PE] mean and std.dev: (881.56, 740.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.98, 60.74)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 426, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (993.52, 913.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202886 reads in 305.770 CPU sec, 25.153 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1202822
	[0000][ M::kt_pipeline] read 1202822 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527819, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 934, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3826)
[0000][PE] mean and std.dev: (1005.38, 900.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.02, 60.63)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 1188, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (1261.17, 1239.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202794 reads in 304.516 CPU sec, 25.477 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1202928
	[0000][ M::kt_pipeline] read 1202928 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527283, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 201, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1624)
[0000][PE] mean and std.dev: (475.81, 510.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.95, 60.81)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1554, 3319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7743)
[0000][PE] mean and std.dev: (1901.29, 1329.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202822 reads in 302.788 CPU sec, 25.589 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1202858
	[0000][ M::kt_pipeline] read 1202858 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527385, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 842, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (913.09, 813.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.86, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1230, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4408)
[0000][PE] mean and std.dev: (1488.21, 1037.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202928 reads in 318.162 CPU sec, 24.926 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1202788
	[0000][ M::kt_pipeline] read 1202788 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 526891, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 1548, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4811)
[0000][PE] mean and std.dev: (1170.36, 971.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.85, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (397, 934, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (874.90, 598.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202858 reads in 302.305 CPU sec, 24.007 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1202666
	[0000][ M::kt_pipeline] read 1202666 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525935, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 596, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (748.69, 829.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.01, 59.97)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (662, 1269, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5294)
[0000][PE] mean and std.dev: (1572.50, 1110.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202788 reads in 346.620 CPU sec, 29.943 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1202766
	[0000][ M::kt_pipeline] read 1202766 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525874, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 615, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3968)
[0000][PE] mean and std.dev: (731.84, 694.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 358)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 516)
[0000][PE] mean and std.dev: (319.62, 59.82)
[0000][PE] low and high boundaries for proper pairs: (42, 595)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (389, 942, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4724)
[0000][PE] mean and std.dev: (1102.57, 715.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202666 reads in 357.289 CPU sec, 38.388 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1202864
	[0000][ M::kt_pipeline] read 1202864 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 526423, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 396, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2780)
[0000][PE] mean and std.dev: (550.11, 417.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.07, 60.12)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (428, 902, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (1094.83, 994.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202766 reads in 334.891 CPU sec, 26.900 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1202776
	[0000][ M::kt_pipeline] read 1202776 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 526094, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 1051, 3782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10804)
[0000][PE] mean and std.dev: (1957.31, 2246.18)
[0000][PE] low and high boundaries for proper pairs: (1, 14315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.29, 60.17)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (605, 1031, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5165)
[0000][PE] mean and std.dev: (1322.47, 999.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202864 reads in 327.526 CPU sec, 24.743 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1202822
	[0000][ M::kt_pipeline] read 1202822 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 526278, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 582, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2877)
[0000][PE] mean and std.dev: (632.83, 552.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.26, 60.00)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 1049, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3510)
[0000][PE] mean and std.dev: (1076.83, 950.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202776 reads in 333.883 CPU sec, 32.188 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1202868
	[0000][ M::kt_pipeline] read 1202868 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 526211, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (707, 1141, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3860)
[0000][PE] mean and std.dev: (1185.00, 821.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 522)
[0000][PE] mean and std.dev: (320.62, 60.32)
[0000][PE] low and high boundaries for proper pairs: (36, 603)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (639, 1007, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2658)
[0000][PE] mean and std.dev: (956.53, 500.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202822 reads in 328.787 CPU sec, 30.544 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1202836
	[0000][ M::kt_pipeline] read 1202836 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 526756, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 909, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4964)
[0000][PE] mean and std.dev: (921.04, 783.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.98, 60.30)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1129, 2812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6628)
[0000][PE] mean and std.dev: (1791.22, 1647.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202868 reads in 307.246 CPU sec, 18.127 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1202728
	[0000][ M::kt_pipeline] read 1202728 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 526817, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 564, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2140)
[0000][PE] mean and std.dev: (623.72, 453.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.04, 60.50)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 364, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (916.40, 952.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202836 reads in 305.437 CPU sec, 17.956 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1202856
	[0000][ M::kt_pipeline] read 1202856 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527322, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 575, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2983)
[0000][PE] mean and std.dev: (741.05, 630.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.01, 60.31)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 557, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3187)
[0000][PE] mean and std.dev: (739.37, 674.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202728 reads in 311.701 CPU sec, 18.420 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1202806
	[0000][ M::kt_pipeline] read 1202806 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527023, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 499, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4849)
[0000][PE] mean and std.dev: (1027.21, 1150.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.19, 60.29)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 899, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6508)
[0000][PE] mean and std.dev: (1320.21, 1201.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202856 reads in 310.577 CPU sec, 20.005 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1202988
	[0000][ M::kt_pipeline] read 1202988 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 526910, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 418, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3618)
[0000][PE] mean and std.dev: (705.19, 704.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.97, 60.44)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 627, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2853)
[0000][PE] mean and std.dev: (654.39, 607.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202806 reads in 309.029 CPU sec, 18.110 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000271, nseq: 1202834
	[0000][ M::kt_pipeline] read 1202834 sequences (180000271 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 526503, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 380, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (688.83, 636.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.16, 60.31)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (433, 1002, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5533)
[0000][PE] mean and std.dev: (1249.86, 1074.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202988 reads in 312.975 CPU sec, 18.786 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1202960
	[0000][ M::kt_pipeline] read 1202960 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 526724, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 725, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (803.09, 543.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.17, 60.33)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1227, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5439)
[0000][PE] mean and std.dev: (1430.74, 1110.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202834 reads in 301.829 CPU sec, 18.449 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1202680
	[0000][ M::kt_pipeline] read 1202680 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 527139, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 626, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3842)
[0000][PE] mean and std.dev: (802.59, 740.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.04, 60.27)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 748, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3157)
[0000][PE] mean and std.dev: (765.87, 498.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202960 reads in 302.933 CPU sec, 18.213 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1202872
	[0000][ M::kt_pipeline] read 1202872 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527317, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 544, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3105)
[0000][PE] mean and std.dev: (760.12, 752.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.27, 60.30)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1028, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3121)
[0000][PE] mean and std.dev: (1153.90, 519.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202680 reads in 297.299 CPU sec, 17.245 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1202762
	[0000][ M::kt_pipeline] read 1202762 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527021, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 831, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3550)
[0000][PE] mean and std.dev: (675.14, 494.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.26, 60.46)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 707, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (873.12, 708.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202872 reads in 299.253 CPU sec, 18.508 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1202754
	[0000][ M::kt_pipeline] read 1202754 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 526992, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 233, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2230)
[0000][PE] mean and std.dev: (356.32, 322.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.36, 60.36)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (586, 1160, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4147)
[0000][PE] mean and std.dev: (1183.67, 870.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202762 reads in 290.030 CPU sec, 17.129 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1202902
	[0000][ M::kt_pipeline] read 1202902 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 527488, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 701, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3313)
[0000][PE] mean and std.dev: (785.74, 712.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.19, 60.43)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 919, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (1050.06, 617.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202754 reads in 295.099 CPU sec, 16.961 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1202806
	[0000][ M::kt_pipeline] read 1202806 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527061, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 812, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4506)
[0000][PE] mean and std.dev: (829.43, 787.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.21, 60.31)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 686, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4516)
[0000][PE] mean and std.dev: (908.42, 844.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202902 reads in 301.991 CPU sec, 19.002 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1202946
	[0000][ M::kt_pipeline] read 1202946 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 526714, 1, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 928, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (995.23, 1174.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.21, 60.38)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (494, 968, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4307)
[0000][PE] mean and std.dev: (1129.36, 930.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202806 reads in 296.253 CPU sec, 17.402 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1202928
	[0000][ M::kt_pipeline] read 1202928 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 526994, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 374, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4009)
[0000][PE] mean and std.dev: (789.33, 754.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.30, 60.30)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (299, 750, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (968.50, 826.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202946 reads in 299.148 CPU sec, 17.864 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1202898
	[0000][ M::kt_pipeline] read 1202898 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 526826, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 1112, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4746)
[0000][PE] mean and std.dev: (1171.43, 1088.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.15, 60.31)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202928 reads in 301.703 CPU sec, 18.223 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1202786
	[0000][ M::kt_pipeline] read 1202786 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 526524, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 462, 617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1377)
[0000][PE] mean and std.dev: (438.89, 258.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.18, 60.37)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (561, 1170, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3063)
[0000][PE] mean and std.dev: (1048.38, 545.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202898 reads in 305.812 CPU sec, 20.102 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1202872
	[0000][ M::kt_pipeline] read 1202872 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 526867, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 1055, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4330)
[0000][PE] mean and std.dev: (992.15, 736.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.03, 60.25)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (322, 1020, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4522)
[0000][PE] mean and std.dev: (1096.96, 842.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202786 reads in 305.553 CPU sec, 18.782 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1202992
	[0000][ M::kt_pipeline] read 1202992 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 526384, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 988, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4783)
[0000][PE] mean and std.dev: (1101.96, 1066.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 517)
[0000][PE] mean and std.dev: (320.63, 60.09)
[0000][PE] low and high boundaries for proper pairs: (43, 596)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 557, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2610)
[0000][PE] mean and std.dev: (631.48, 446.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202872 reads in 312.973 CPU sec, 18.475 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1202776
	[0000][ M::kt_pipeline] read 1202776 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 525477, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 661, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2840)
[0000][PE] mean and std.dev: (768.12, 618.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (279, 317, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 519)
[0000][PE] mean and std.dev: (320.40, 60.07)
[0000][PE] low and high boundaries for proper pairs: (39, 599)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 1006, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (1090.39, 798.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202992 reads in 330.357 CPU sec, 21.023 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1202730
	[0000][ M::kt_pipeline] read 1202730 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 526522, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 578, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4119)
[0000][PE] mean and std.dev: (1014.95, 950.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 517)
[0000][PE] mean and std.dev: (320.54, 59.98)
[0000][PE] low and high boundaries for proper pairs: (43, 596)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 1002, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4592)
[0000][PE] mean and std.dev: (1028.32, 1002.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6026)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202776 reads in 329.220 CPU sec, 19.796 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1202866
	[0000][ M::kt_pipeline] read 1202866 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 526174, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 332, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4695)
[0000][PE] mean and std.dev: (807.21, 862.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (320.87, 60.21)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 914, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4057)
[0000][PE] mean and std.dev: (1140.27, 901.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202730 reads in 318.033 CPU sec, 19.507 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1202708
	[0000][ M::kt_pipeline] read 1202708 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 526183, 5, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 517, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4671)
[0000][PE] mean and std.dev: (918.20, 965.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 517)
[0000][PE] mean and std.dev: (320.72, 60.02)
[0000][PE] low and high boundaries for proper pairs: (43, 596)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (355, 1752, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6358)
[0000][PE] mean and std.dev: (1814.41, 1666.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202866 reads in 321.584 CPU sec, 18.769 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1202796
	[0000][ M::kt_pipeline] read 1202796 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 526351, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (135, 328, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (869.95, 966.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 359)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 517)
[0000][PE] mean and std.dev: (320.59, 59.91)
[0000][PE] low and high boundaries for proper pairs: (43, 596)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (367, 679, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2584)
[0000][PE] mean and std.dev: (756.94, 588.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202708 reads in 313.841 CPU sec, 18.415 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1202792
	[0000][ M::kt_pipeline] read 1202792 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 526922, 2, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 965, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5127)
[0000][PE] mean and std.dev: (1017.80, 790.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.50, 60.35)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (340, 1248, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4852)
[0000][PE] mean and std.dev: (1166.71, 945.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202796 reads in 305.936 CPU sec, 18.205 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1202798
	[0000][ M::kt_pipeline] read 1202798 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527221, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 292, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2501)
[0000][PE] mean and std.dev: (732.00, 732.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.72, 60.56)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 991, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3577)
[0000][PE] mean and std.dev: (835.94, 664.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202792 reads in 289.827 CPU sec, 17.398 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1202778
	[0000][ M::kt_pipeline] read 1202778 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527481, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 552, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2386)
[0000][PE] mean and std.dev: (663.25, 531.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.83, 60.59)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 1249, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6463)
[0000][PE] mean and std.dev: (1653.28, 1651.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202798 reads in 297.974 CPU sec, 18.504 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1202808
	[0000][ M::kt_pipeline] read 1202808 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527438, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 533, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3348)
[0000][PE] mean and std.dev: (716.56, 675.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.71, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 271, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5067)
[0000][PE] mean and std.dev: (703.38, 875.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202778 reads in 285.688 CPU sec, 16.929 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1202802
	[0000][ M::kt_pipeline] read 1202802 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527309, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 1029, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4222)
[0000][PE] mean and std.dev: (986.00, 676.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.95, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (373, 783, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4132)
[0000][PE] mean and std.dev: (1173.00, 998.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202808 reads in 286.680 CPU sec, 18.079 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1202780
	[0000][ M::kt_pipeline] read 1202780 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 526964, 2, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 355, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2379)
[0000][PE] mean and std.dev: (527.72, 547.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.02, 60.68)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 1075, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5433)
[0000][PE] mean and std.dev: (1188.51, 946.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202802 reads in 291.841 CPU sec, 18.136 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1202742
	[0000][ M::kt_pipeline] read 1202742 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527461, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 809, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4719)
[0000][PE] mean and std.dev: (1188.94, 1105.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.85, 60.65)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 835, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6499)
[0000][PE] mean and std.dev: (1158.89, 1095.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202780 reads in 286.447 CPU sec, 17.492 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1202722
	[0000][ M::kt_pipeline] read 1202722 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527134, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 603, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3646)
[0000][PE] mean and std.dev: (641.71, 503.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.89, 60.54)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1552, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4752)
[0000][PE] mean and std.dev: (1443.48, 793.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202742 reads in 285.753 CPU sec, 16.934 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1202822
	[0000][ M::kt_pipeline] read 1202822 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 526761, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 471, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3894)
[0000][PE] mean and std.dev: (870.71, 774.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.91, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (672, 888, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3093)
[0000][PE] mean and std.dev: (1022.67, 638.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202722 reads in 284.497 CPU sec, 16.411 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1202824
	[0000][ M::kt_pipeline] read 1202824 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527417, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 268, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1346)
[0000][PE] mean and std.dev: (306.92, 238.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.11, 60.64)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 1076, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (967.20, 774.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202822 reads in 286.480 CPU sec, 16.172 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1202804
	[0000][ M::kt_pipeline] read 1202804 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 527425, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 292, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 459)
[0000][PE] mean and std.dev: (266.12, 45.93)
[0000][PE] low and high boundaries for proper pairs: (51, 527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.95, 60.71)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (526, 944, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4066)
[0000][PE] mean and std.dev: (1043.32, 649.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202824 reads in 288.548 CPU sec, 16.526 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1202940
	[0000][ M::kt_pipeline] read 1202940 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 527756, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (910, 1383, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5731)
[0000][PE] mean and std.dev: (1605.43, 1252.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.93, 60.52)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1207, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (1312.28, 874.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202804 reads in 282.933 CPU sec, 16.022 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1202904
	[0000][ M::kt_pipeline] read 1202904 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 527434, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 345, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4276)
[0000][PE] mean and std.dev: (620.09, 657.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.91, 60.63)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (507, 927, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2682)
[0000][PE] mean and std.dev: (805.70, 544.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202940 reads in 287.333 CPU sec, 16.283 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1202938
	[0000][ M::kt_pipeline] read 1202938 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527485, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 212, 713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1763)
[0000][PE] mean and std.dev: (345.26, 250.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (322.04, 60.59)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (439, 1197, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3907)
[0000][PE] mean and std.dev: (1208.27, 810.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202904 reads in 284.777 CPU sec, 16.138 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1202746
	[0000][ M::kt_pipeline] read 1202746 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527142, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (514, 711, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3760)
[0000][PE] mean and std.dev: (1085.15, 855.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (322.05, 60.78)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1097, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2816)
[0000][PE] mean and std.dev: (1067.65, 583.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202938 reads in 286.591 CPU sec, 16.230 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1202810
	[0000][ M::kt_pipeline] read 1202810 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527240, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 762, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3782)
[0000][PE] mean and std.dev: (929.94, 811.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.97, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (568, 1052, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5905)
[0000][PE] mean and std.dev: (1345.71, 1132.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202746 reads in 295.972 CPU sec, 16.945 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1202790
	[0000][ M::kt_pipeline] read 1202790 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527952, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 669, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4854)
[0000][PE] mean and std.dev: (1084.36, 1120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.91, 60.68)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 523, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3024)
[0000][PE] mean and std.dev: (552.42, 392.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202810 reads in 281.369 CPU sec, 15.950 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1202874
	[0000][ M::kt_pipeline] read 1202874 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527710, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 517, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2978)
[0000][PE] mean and std.dev: (751.35, 688.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.82, 60.61)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1221, 2652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6246)
[0000][PE] mean and std.dev: (1902.22, 1642.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202790 reads in 283.629 CPU sec, 16.340 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1202874
	[0000][ M::kt_pipeline] read 1202874 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527629, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 939, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6150)
[0000][PE] mean and std.dev: (1137.39, 1116.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.78, 60.72)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1340, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3668)
[0000][PE] mean and std.dev: (1051.18, 661.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202874 reads in 290.822 CPU sec, 16.567 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1202850
	[0000][ M::kt_pipeline] read 1202850 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527349, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 655, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6214)
[0000][PE] mean and std.dev: (1133.10, 1212.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.89, 60.78)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (419, 859, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2765)
[0000][PE] mean and std.dev: (781.00, 495.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202874 reads in 285.188 CPU sec, 16.201 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1202730
	[0000][ M::kt_pipeline] read 1202730 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 527347, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (534, 841, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4359)
[0000][PE] mean and std.dev: (1013.87, 914.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.87, 60.58)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (481, 934, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4054)
[0000][PE] mean and std.dev: (1189.67, 932.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202850 reads in 286.166 CPU sec, 16.178 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1202758
	[0000][ M::kt_pipeline] read 1202758 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527465, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 298, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (760.72, 803.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (281, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 521)
[0000][PE] mean and std.dev: (321.89, 60.61)
[0000][PE] low and high boundaries for proper pairs: (41, 601)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (315, 837, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4446)
[0000][PE] mean and std.dev: (1071.13, 904.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202730 reads in 284.662 CPU sec, 16.044 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1202776
	[0000][ M::kt_pipeline] read 1202776 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527647, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 775, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3965)
[0000][PE] mean and std.dev: (866.09, 814.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.75, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (508, 942, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (1002.96, 624.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202758 reads in 285.907 CPU sec, 16.207 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1202734
	[0000][ M::kt_pipeline] read 1202734 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 527492, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 809, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5069)
[0000][PE] mean and std.dev: (1163.96, 1044.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.87, 60.74)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 1215, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (1097.27, 1047.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202776 reads in 283.334 CPU sec, 16.030 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1202824
	[0000][ M::kt_pipeline] read 1202824 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 527123, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (726, 992, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (1138.82, 832.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.75, 60.64)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (462, 849, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3966)
[0000][PE] mean and std.dev: (1058.36, 892.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202734 reads in 283.834 CPU sec, 16.193 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1202844
	[0000][ M::kt_pipeline] read 1202844 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527005, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 694, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2675)
[0000][PE] mean and std.dev: (637.30, 392.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.74, 60.62)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 507, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3761)
[0000][PE] mean and std.dev: (867.29, 812.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202824 reads in 288.671 CPU sec, 16.333 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1202758
	[0000][ M::kt_pipeline] read 1202758 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 528123, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 741, 2595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6915)
[0000][PE] mean and std.dev: (1434.00, 1642.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.77, 60.62)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 1155, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4157)
[0000][PE] mean and std.dev: (1129.36, 942.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202844 reads in 280.609 CPU sec, 15.858 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1202722
	[0000][ M::kt_pipeline] read 1202722 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 527472, 0, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 856, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3751)
[0000][PE] mean and std.dev: (1089.72, 1028.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.79, 60.78)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 900, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5424)
[0000][PE] mean and std.dev: (830.12, 915.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202758 reads in 280.376 CPU sec, 15.907 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1202764
	[0000][ M::kt_pipeline] read 1202764 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527708, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 360, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (824.50, 797.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.79, 60.68)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1485, 3041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7031)
[0000][PE] mean and std.dev: (2018.66, 1449.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9026)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202722 reads in 284.620 CPU sec, 16.142 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1202818
	[0000][ M::kt_pipeline] read 1202818 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527441, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 360, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (733.27, 727.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.82, 60.68)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1102, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5412)
[0000][PE] mean and std.dev: (1324.76, 958.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202764 reads in 285.372 CPU sec, 16.274 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1202724
	[0000][ M::kt_pipeline] read 1202724 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527109, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 803, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5208)
[0000][PE] mean and std.dev: (1090.05, 850.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.78, 60.69)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 765, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3261)
[0000][PE] mean and std.dev: (780.00, 602.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202818 reads in 282.172 CPU sec, 16.613 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1202804
	[0000][ M::kt_pipeline] read 1202804 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 527184, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 1343, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1184.41, 1048.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.68, 60.54)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (469, 1036, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (920.33, 573.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202724 reads in 281.798 CPU sec, 15.865 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1202820
	[0000][ M::kt_pipeline] read 1202820 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527194, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 703, 2724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7802)
[0000][PE] mean and std.dev: (1263.15, 1475.41)
[0000][PE] low and high boundaries for proper pairs: (1, 10341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.86, 60.86)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 1017, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4244)
[0000][PE] mean and std.dev: (1147.18, 1098.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202804 reads in 281.169 CPU sec, 15.953 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1202842
	[0000][ M::kt_pipeline] read 1202842 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527221, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 1404, 3062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8768)
[0000][PE] mean and std.dev: (1686.44, 1851.14)
[0000][PE] low and high boundaries for proper pairs: (1, 11621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.69, 60.76)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 946, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3588)
[0000][PE] mean and std.dev: (874.83, 556.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202820 reads in 283.217 CPU sec, 16.032 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000137, nseq: 1202792
	[0000][ M::kt_pipeline] read 1202792 sequences (180000137 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527147, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (616, 1578, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4729)
[0000][PE] mean and std.dev: (1305.92, 856.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.82, 60.70)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202842 reads in 281.799 CPU sec, 15.896 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1202766
	[0000][ M::kt_pipeline] read 1202766 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527154, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 957, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (976.36, 760.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.81, 60.71)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1436, 2904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6538)
[0000][PE] mean and std.dev: (1745.26, 1486.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202792 reads in 282.631 CPU sec, 15.906 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1202816
	[0000][ M::kt_pipeline] read 1202816 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527491, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 643, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2226)
[0000][PE] mean and std.dev: (506.00, 352.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.90, 60.72)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1161, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3469)
[0000][PE] mean and std.dev: (1311.14, 829.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202766 reads in 279.139 CPU sec, 15.795 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1202804
	[0000][ M::kt_pipeline] read 1202804 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527370, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 809, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4982)
[0000][PE] mean and std.dev: (1057.69, 1264.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.80, 60.84)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (380, 1005, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4313)
[0000][PE] mean and std.dev: (1171.61, 925.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202816 reads in 280.511 CPU sec, 15.812 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1202774
	[0000][ M::kt_pipeline] read 1202774 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 527370, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 958, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (980.08, 984.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.83, 60.77)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (335, 1046, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4553)
[0000][PE] mean and std.dev: (1122.33, 963.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202804 reads in 282.483 CPU sec, 16.027 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1202814
	[0000][ M::kt_pipeline] read 1202814 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 527266, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 454, 2375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6731)
[0000][PE] mean and std.dev: (940.79, 1169.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 319, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.73, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 576, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2780)
[0000][PE] mean and std.dev: (793.59, 655.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202774 reads in 282.046 CPU sec, 16.003 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1202738
	[0000][ M::kt_pipeline] read 1202738 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 527470, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 777, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5643)
[0000][PE] mean and std.dev: (1129.08, 926.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.63, 60.73)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 763, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (957.42, 803.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202814 reads in 281.581 CPU sec, 15.902 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1202676
	[0000][ M::kt_pipeline] read 1202676 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 527152, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 689, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5614)
[0000][PE] mean and std.dev: (1119.45, 1294.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 523)
[0000][PE] mean and std.dev: (321.59, 60.72)
[0000][PE] low and high boundaries for proper pairs: (37, 604)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 799, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3429)
[0000][PE] mean and std.dev: (747.33, 577.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202738 reads in 287.827 CPU sec, 16.275 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1202746
	[0000][ M::kt_pipeline] read 1202746 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 527528, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 304, 686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1710)
[0000][PE] mean and std.dev: (470.00, 357.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.47, 60.53)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 804, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (801.89, 555.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202676 reads in 298.603 CPU sec, 16.963 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1202682
	[0000][ M::kt_pipeline] read 1202682 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 527026, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 506, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2378)
[0000][PE] mean and std.dev: (468.71, 282.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.39, 60.53)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (359, 856, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3281)
[0000][PE] mean and std.dev: (1016.52, 804.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202746 reads in 303.219 CPU sec, 17.234 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 32630945, nseq: 218048
	[0000][ M::kt_pipeline] read 218048 sequences (32630945 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 527713, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 652, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5858)
[0000][PE] mean and std.dev: (1038.78, 997.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.41, 60.55)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 977, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4456)
[0000][PE] mean and std.dev: (1190.61, 1022.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202682 reads in 295.990 CPU sec, 17.045 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 218048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 95499, 0, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (280, 318, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 520)
[0000][PE] mean and std.dev: (321.41, 60.23)
[0000][PE] low and high boundaries for proper pairs: (40, 600)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 218048 reads in 58.969 CPU sec, 3.450 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2401.640408 MHz
Runtime profile:

	Time taken for main_mem function: 40895.46 sec

	IO times (sec) :
	Reading IO time (reads) avg: 2302.58, (2302.58, 2302.58)
	Writing IO time (SAM) avg: 4711.10, (4711.10, 4711.10)
	Reading IO time (Reference Genome) avg: 9.08, (9.08, 9.08)
	Index read time avg: 20.36, (20.36, 20.36)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 40864.55
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 40853.64, (40853.64, 40853.64)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 10004.71, (10004.71, 10004.71)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 30648.25, (30648.25, 30648.25)
		SMEM compute avg: 10117.81, (10145.90, 10084.58)
		SAL compute avg: 5629.32, (5675.12, 5588.51)
				MEM_SA avg: 2751.83, (2769.84, 2725.95)

		BSW time, avg: 9926.87, (9970.18, 9890.20)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
